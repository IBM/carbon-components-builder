{"version":3,"sources":["assets/component-icons/button.svg","assets/component-icons/accordion.svg","assets/component-icons/accordion-item.svg","assets/component-icons/checkbox.svg","assets/component-icons/grid.svg","assets/component-icons/number-input.svg","assets/component-icons/tag.svg","assets/component-icons/search.svg","assets/component-icons/text.svg","assets/component-icons/text-area.svg","assets/component-icons/text-input.svg","assets/component-icons/link.svg","assets/dashboard-empty-state.svg","assets/chart-404.svg","routes/edit/tools.ts","context/global-state-context.tsx","context/notification-context.tsx","context/fragments-context-helper.ts","fragment-components/a-component.tsx","components/css-class-selector.tsx","utils/fragment-tools.ts","fragment-components/accordion/a-accordion.tsx","fragment-components/accordion/a-accordion-item.tsx","fragment-components/a-button.tsx","fragment-components/a-checkbox.tsx","fragment-components/a-column.tsx","fragment-components/a-fragment.tsx","fragment-components/a-grid.tsx","fragment-components/a-numberinput.tsx","fragment-components/a-row.tsx","fragment-components/a-tag.tsx","fragment-components/a-searchinput.tsx","fragment-components/a-text.tsx","fragment-components/a-textarea.tsx","fragment-components/a-textinput.tsx","fragment-components/a-link.tsx","fragment-components/index.ts","components/adder.tsx","components/header.tsx","components/header-menu-item-link.tsx","context/modal-context.tsx","components/link-button.tsx","styles.ts","components/main.tsx","components/fragment.tsx","components/grid.tsx","components/notification.tsx","routes/edit/share-options/share-options-modal.tsx","routes/edit/share-options/exports/create-fragment-sandbox.ts","routes/edit/share-options/exports/frameworks/react-fragment.ts","routes/edit/share-options/exports/frameworks/angular-fragment.ts","routes/edit/share-options/exports/frameworks/vanilla-fragment.ts","routes/edit/share-options/exports/frameworks/vue-fragment.ts","utils/file-tools.ts","routes/edit/share-options/exports/export-code-modal.tsx","components/selection-tile.tsx","routes/edit/share-options/exports/export-image-modal.tsx","routes/edit/index.tsx","routes/edit/duplicate-fragment-modal.tsx","routes/edit/delete-fragment-modal.tsx","routes/edit/settings-fragment-modal.tsx","routes/edit/fragment-modal.tsx","routes/edit/edit-header.tsx","components/element-tile.tsx","routes/edit/elements-pane.tsx","routes/edit/style-pane.tsx","routes/edit/code-pane.tsx","routes/edit/export-pane.tsx","routes/edit/selected-component-breadcrumbs.tsx","routes/edit/style-context-pane.tsx","routes/edit/code-context-pane.tsx","routes/dashboard/dashboard-search.tsx","routes/dashboard/dashboard-header.tsx","routes/dashboard/fragment-wizard/create-fragment-modal.tsx","components/fragment-preview.tsx","routes/dashboard/fragment-tile.tsx","routes/dashboard/fragment-tile-list.tsx","routes/dashboard/fragment-wizard/generate-new-fragment.ts","routes/dashboard/fragment-wizard/fragment-wizard.tsx","routes/dashboard/fragment-wizard/choose-fragment-modal-tile.tsx","routes/dashboard/fragment-wizard/choose-fragment-modal.tsx","routes/dashboard/fragment-wizard/import-json-modal.tsx","routes/dashboard/index.tsx","routes/not-found.tsx","routes/error-boundary.tsx","components/ui-shell.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","drag","event","dragObj","stopPropagation","dataTransfer","setData","JSON","stringify","GlobalStateContext","createContext","displayName","NotificationActionType","useFragment","id","context","useContext","history","useHistory","console","info","_","fragments","updateFragment","pathSegments","location","pathname","split","length","find","fragment","GlobalStateContextProvider","localFragments","children","useState","parse","localStorage","getItem","Array","isArray","filter","_setFragments","actionHistory","setActionHistory","actionHistoryIndex","setActionHistoryIndex","styleClasses","_setStyleClasses","setFragments","frags","setItem","addAction","action","newActionHistoryIndex","actionClone","slice","setStyleClasses","sc","updateActionHistory","csString","canUndo","setAction","newIndex","canRedo","updatedFragments","map","f","assign","fragmentHelpers","addFragment","duplicate","expandedFragments","concat","getFragment","fragmentId","updateFragments","some","actionFragment","updatedFragment","every","toggleFragmentVisibility","hidden","removeFragment","removeFragments","ids","remainingFragments","getFragmentHelpers","useEffect","filteredFragments","Provider","value","undoAction","redoAction","clearActionHistory","NotificationContext","initialState","notifications","notificationCounter","NotificationReducer","state","type","REMOVE_NOTIFICATION","notification","data","ADD_NOTIFICATION","NotificationContextProvider","useReducer","headerStyle","css","iconStyle","AComponentCodeUI","selectedComponent","setComponent","className","dropStyle","dropStyleBefore","cx","dropStyleAfter","AComponent","componentObj","select","selected","remove","headingCss","setFragment","showDragOverIndicator","setShowDragOverIndicator","dragOverPosition","setDragOverPosition","holderRef","useRef","isDragOverBefore","current","offsetWidth","offsetHeight","ref","onClick","draggable","onDragStart","component","onDragEnter","onDragLeave","onDragOver","rect","currentTarget","getBoundingClientRect","pageX","left","pageY","top","onDrop","preventDefault","getData","updatedState","getParentComponent","items","indexOf","compareClasses","sc1","sc2","name","CssClassSelector","selectedClasses","setSelectedClasses","_getAvailableClasses","ssc","sort","availableClasses","setAvailableClasses","style","marginTop","FormLabel","styleClass","Tag","onClose","c","deselectStyleClass","selectStyleClass","ComponentCssClassSelector","cssClasses","sleep","ms","Promise","resolve","setTimeout","getFragmentPreview","props","a","element","document","createElement","position","zIndex","width","height","minHeight","ReactDOM","render","React","Fragment","body","appendChild","domtoimage","toBlob","imageBlob","getFragmentTemplates","labels","includes","getAllComponentStyleClasses","forEach","cssClass","co","coClasses","getAllFragmentStyleClasses","tagNameFromFragment","kebabCase","title","classNameFromFragment","upperFirst","camelCase","allClasses","Object","values","hasFragmentStyleClasses","hasComponentStyleClasses","item","getUniqueFragmentName","baseName","nameRegEx","RegExp","String","raw","nameMatch","match","count","nameBase","replace","Number","parseInt","names","push","highestNumber","n","isNaN","b","shift","getFragmentDuplicate","overrides","fragmentCopy","Math","random","toString","getFragmentPreviewUrl","renderProps","preview","format","reader","FileReader","readAsDataURL","Blob","onloadend","result","reactClassNamesFromComponentObj","cc","join","angularClassNamesFromComponentObj","nameStringToVariableString","AAccordionStyleUI","sizeItems","text","alignItems","Dropdown","label","titleText","initialSelectedItem","size","itemToString","onChange","selectedItem","align","AAccordion","rest","Accordion","componentInfo","styleUI","renderComponents","accordionItem","keywords","defaultComponentObj","image","codeExport","angular","inputs","json","codeContext","outputs","imports","code","jsonToTemplate","react","undefined","AAccordionItemStyleUI","TextInput","labelText","Checkbox","checked","disabled","AAccordionItem","parentComponent","addAccordionItem","offset","active","topAction","bottomAction","AccordionItem","hideFromElementsPane","child","AButtonStyleUI","kindItems","kind","AButton","Button","ACheckboxStyleUI","ACheckboxCodeUI","ACheckbox","codeUI","helpIconStyle","AColumnStyleUI","onNumInputchange","imaginaryTarget","isAccordionOpen","setIsAccordionOpen","small","smallSpan","smallOffset","medium","mediumSpan","mediumOffset","large","largeSpan","largeOffset","xLarge","xLargeSpan","xLargeOffset","max","maxSpan","maxOffset","href","target","rel","open","NumberInput","min","addStyle","addStyleLeft","addStyleRight","AColumn","addCell","Column","sm","span","md","lg","xlg","column","isNotDirectExport","AFragmentStyleUI","LinkButton","renderIcon","Edit32","to","showOutline","AFragmentCodeUI","showOutlineStyle","AFragment","pointerEvents","globalState","subFragment","otherImports","AGridStyleUI","condensed","fullWidth","narrow","AGrid","Grid","getCellAttributeString","cell","sizeShort","sizeLong","spanString","offsetString","spanAndOffset","row","getCellParamsString","ANumberInputStyleUI","hideLabel","helperText","step","warnText","invalidText","light","ANumberInputCodeUI","ANumberInput","warn","hideSteppers","readOnly","invalid","allowEmpty","round","ARowStyleUI","addStyleTop","addStyleBottom","ARow","addRow","ATagStyleUI","typeItems","ATag","defaultProps","ASearchInputStyleUI","inputSize","placeholder","defaultValue","ASearchInputCodeUI","ASearchInput","Search","ATextStyleUI","AText","ATextAreaStyleUI","ATextAreaCodeUI","ATextArea","TextArea","ATextInputStyleUI","inputType","ATextInputCodeUI","ATextInput","ALinkStyleUI","inline","ALinkCodeUI","ALink","Link","allComponents","accordion","accordionitem","button","checkbox","grid","tag","textarea","textinput","searchinput","numberinput","link","componentHeaderZIndex","Adder","leftAction","rightAction","addButtonsCss","Header","isSideNavExpanded","setIsSideNavExpanded","headerName","aria-label","role","tabIndex","isActive","prefix","onKeyDown","key","HeaderMenuItemLinkBase","this","staticContext","Component","HeaderMenuItemLinkRouter","withRouter","forwardRef","ModalActionType","ModalType","main","Main","canvas","allowDrop","componentCounter","getSelectedComponent","getComponentById","i","selectedComponentId","stateWithoutComponent","componentId","componentIndex","findIndex","updatedList","list","dropInIndex","dropInId","initializeIds","parent","SkeletonPlaceholder","getHighestId","drop","styles","content","entries","Row","Col","cols","notificationStyle","minWidth","notificationAreaStyle","Notification","dispatch","index","lowContrast","aria-live","subtitle","message","caption","onCloseButtonClick","onNotificationClose","actions","actionFunction","actionText","ModalContext","ShareOptionsModals","Exports","ShowModal","FragmentID","modalReducer","setDuplicationModal","DUPLICATION","setDeletionModal","DELETION","setShareModal","SHARING","setSettingsModal","SETTINGS","setExportModal","EXPORT","closeModal","ModalContextProvider","modal","createFragmentSandbox","fragmentTemplate","files","keys","filePath","LZString","compressToBase64","source","options","formatPrettier","formatOptions","plugins","parserBabel","trailingComma","useTabs","formatOptionsCss","parser","parserCss","addIfNotExist","arr","otherImportsFromComponentObj","sortedUniq","generateTemplate","carbonImportsString","jsonToCarbonImports","reduce","string","curr","template","jsonToSharedComponents","sharedComponents","jsonToAngularImports","createAngularApp","formatOptionsTypescript","formatOptionsHtml","parserHtml","fragmentModuleTs","fragmentComponentTs","getAngularInputsFromJson","getOne","getAngularOutputsFromJson","fragmentComponentHtml","fragmentComponentScss","dependencies","fragmentTagMap","dataAndOptions","saveBlob","blob","fileName","url","URL","createObjectURL","anchor","download","click","saveFile","revokeObjectURL","warningNotificationProps","notificationType","exportCodeModalStyle","codeSnippetWrapper","titleWrapper","codeSnippet","ExportCode","displayedModal","setDisplayedModal","modalState","dispatchModal","jsonCode","vanillaCode","fragmentData","fragmentType","d3","createVanillaApp","reactCode","indexHtml","componentJs","componentScss","indexJs","packageJson","emotion","createReactApp","angularCode","vueCode","vue","createVueApp","generateSandboxUrl","parameters","Modal","hasForm","CODE_EXPORTS","onRequestClose","primaryButtonText","secondaryButtonText","onRequestSubmit","onSecondarySubmit","SHARE_OPTIONS","modalHeading","Tabs","Tab","CodeSnippet","copyButtonDescription","tileFooter","SelectionTile","icon","exportSettingForm","exportSettingFormGroup","previewContainer","selectInputWH","selectInput","fragmentImage","updatePreviewUrl","log","handleResize","doInputChange","debounce","doUpdatePreviewSize","ExportImageModal","exportSettings","unit","ratioLock","fragmentName","curRatio","setInputs","previewUrl","setPreviewUrl","isPerformingAction","setIsPerformingAction","previewContainerRef","imageContainerSize","setImageContainerSize","window","addEventListener","removeEventListener","getPreviewSize","fitRatio","previewSize","imageUrl","onSubmit","mimeType","extension","then","IMAGE_EXPORTS","display","handleChange","src","alt","Loading","ExportModalSettings","onDimensionChange","toFixed","numInputOnchange","parseFloat","numInputOnClick","inputChange","Form","defaultChecked","Select","SelectItem","exportOptionTileWrapper","exportOptionsWrapper","SelectedLeftPane","ShareOptionsModal","selectedExportOption","shareOptionsState","setShareOptionsState","handleExportSelection","CODE","IMAGE","primaryButtonDisabled","shareModalSwitcher","DuplicateFragmentModal","dispatchNotification","useLocation","DeleteFragmentModal","undoHideFragment","danger","SettingsFragmentModal","setTitle","isTemplate","setIsTemplate","isMicroLayout","setIsMicroLayout","updateFragmentSettings","TooltipDefinition","tooltipText","direction","FragmentModal","editHeader","toolBarSeparator","actionIconStyle","fragmentEditToolBar","EditHeader","lastModified","elementTileStyle","ElementTile","searchStyle","elementTileListStyle","ElementsPane","filterString","setFilterString","microLayouts","shouldShow","matches","leftPane","leftPaneHeader","searchContainerStyle","StylePane","selectedStyleClassId","setSelectedStyleClassId","getSelectedClass","updateSelectedClass","newClass","selectedClassIndex","x","Add16","iconDescription","hasIconOnly","newStyleClass","getUniqueClass","uniqueNamesGenerator","dictionaries","adjectives","colors","animals","separator","styleClassId","CodePane","ExportPane","SelectedComponentBreadcrumbs","Breadcrumb","noTrailingSlash","ancestors","unshift","getAncestors","BreadcrumbItem","isCurrentPage","nativeEvent","selectComponent","StyleContextPane","showComponentStyleOptions","CodeContextPane","showComponentCodeOptions","transitionDetails","editPageContent","sideRail","rightPanel","actionsStyle","SortDirection","Edit","params","NONE","selectedLeftPane","setSelectedLeftPane","onRailClick","clickedLeftPane","ELEMENTS","STYLE","SideNav","isRail","SideNavItems","SideNavLink","Development16","ColorPalette16","Code16","Export16","Copy32","TrashCan32","dashboardSearchWrapper","searchInput","sortButton","sortOverflowItem","FragmentGroupDisplayed","DashboardSearch","onSearchHandler","onSortHandler","displayWizard","setDisplayWizard","sortDirection","placeHolderText","OverflowMenu","ariaLabel","OverflowMenuItem","itemText","Ascending","Descending","CreateOptions","dashboardHeaderWrapper","fragmentTitle","contentSwitcher","DashboardHeader","onDisplayedSwitchHandler","fragmentGroupDisplayed","ContentSwitcher","selectedIndex","Switch","AllFragments","Templates","imagePlaceholderStyle","spinner","FragmentPreview","loading","withOverlay","FragmentTile","setModalFragment","handleModalState","modalAction","resetPreview","Tile","isDelete","svgStyle","placeholderContainer","fragmentRowWrapper","FragmentTileList","loaded","v","textAlign","generateNewFragment","Date","toISOString","createFragmentTiles","createFragmentTile","FragmentWizardModals","CreateFragmentModal","selectedCreateOption","setSelectedCreateOption","shouldDisplay","shouldSubmitOnEnter","selectorPrimaryFocus","setShouldDisplay","setLastVisitedModal","CREATE_FRAGMENT_MODAL","IMPORT_JSON","IMPORT_JSON_MODAL","FROM_SCRATCH","CHOOSE_FRAGMENT_MODAL","generatedFragment","generateFragment","CHOOSE_TEMPLATE","ChooseFragmentModalTile","selectedFragment","setSelectedFragment","ChooseFragmentModal","lastVisitedModal","uploadedData","wasDataModified","setUploadedData","originalData","fragmentOptions","lastId","uid","ImportJsonModal","setFiles","jsonString","_setJsonString","fragmentJson","setFragmentJson","jsonParseError","setJsonParseError","setJsonString","js","e","handleDrop","handleDragover","uploadFile","fileToUpload","filesize","updatedFile","status","errorSubject","errorBody","file","uuid","invalidFileType","readAsText","onload","onerror","evt","onAddFiles","useCallback","addedFiles","newFiles","multiple","handleFileUploaderItemClick","clickedUuid","FormItem","FileUploaderDropContainer","accept","FileUploaderItem","onDelete","color","marginBottom","FragmentWizard","modalSwitcher","headerRowSyles","searchRowStyles","Dashboard","LocalOnly","setFragmentGroupDisplayed","fragmentTitleFilter","setFragmentTitleFilter","setSortDirection","displayedFragments","filterFragments","toLowerCase","fragmentSort","modalFragment","marginLeft","NotFound","goBack","errorHandler","ErrorBoundary","error","UIShell","HeaderContainer","app","Boolean","hostname","basename","path","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f44b7cfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.f75955a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/accordion.86ae9a9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/accordion-item.9c9ebfb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.d3c186e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/grid.d052e9f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/number-input.7c0b9515.svg\";","module.exports = __webpack_public_path__ + \"static/media/tag.e8c392a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.d4e4d083.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.e9252250.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-area.947a0503.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-input.e389934c.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.bd08bf66.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard-empty-state.5e050054.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart-404.9bc8debd.svg\";","export const drag = (event: any, dragObj: any) => {\n\tevent.stopPropagation();\n    event.dataTransfer.setData(\"drag-object\", JSON.stringify(dragObj));\n}\n","import React, {\n\tcreateContext,\n\tuseEffect,\n\tuseContext,\n\tuseState\n} from 'react';\nimport { useHistory } from 'react-router';\nimport assign from 'lodash/assign';\nimport { getFragmentHelpers } from './fragments-context-helper';\n\nconst GlobalStateContext: React.Context<any> = createContext(null);\nGlobalStateContext.displayName = 'GlobalStateContext';\n\nexport const useFragment = (id?: string) => {\n\tconst context = useContext(GlobalStateContext);\n\tconst history = useHistory();\n\n\tif (!context) {\n\t\t// this happens when rendering, which is fine because it's used\n\t\t// in AComponent to update the state of the whole fragment due to\n\t\t// user interaction - functionality not needed for render only\n\t\tconsole.info(\"Rendering only, won't be able to update context\");\n\t\treturn [{}, (_: any) => {}];\n\t}\n\n\tconst { fragments, updateFragment } = context;\n\n\tif (!id) {\n\t\tconst location = history.location.pathname;\n\t\tconst pathSegments = location.split('/');\n\t\tid = pathSegments[pathSegments.length - 1];\n\t}\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\tconst setFragment = (fragment: any) => {\n\t\tupdateFragment(fragment);\n\t};\n\treturn [fragment, setFragment];\n};\n\nconst validInitialFragments = (localFragments: any[] | undefined) => {\n\tif (!localFragments || !Array.isArray(localFragments)) {\n\t\treturn [];\n\t}\n\n\treturn localFragments.filter((fragment: any) => !!fragment.id && typeof fragment.id === 'string');\n};\n\nconst GlobalStateContextProvider = ({ children }: any) => {\n\tconst [fragments, _setFragments] = useState<any[]>(\n\t\tvalidInitialFragments(JSON.parse(localStorage.getItem('localFragments') as string)) || []\n\t);\n\tconst [actionHistory, setActionHistory] = useState([] as any[]);\n\tconst [actionHistoryIndex, setActionHistoryIndex] = useState(-1);\n\n\tconst [styleClasses, _setStyleClasses] = useState(JSON.parse(localStorage.getItem('globalStyleClasses') as string || '[]') as any[]);\n\n\tconst setFragments = (frags: any[]) => {\n\t\t_setFragments(frags);\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(frags));\n\t}\n\n\tconst addAction = (action: any) => {\n\t\tconst newActionHistoryIndex = actionHistoryIndex + 1;\n\t\tsetActionHistoryIndex(newActionHistoryIndex);\n\n\t\tconst actionClone = JSON.parse(JSON.stringify(action));\n\n\t\tsetActionHistory([...actionHistory.slice(0, newActionHistoryIndex), actionClone]);\n\t};\n\n\tconst setStyleClasses = (sc: any, updateActionHistory = true) => {\n\t\tconst csString = JSON.stringify(sc);\n\t\tlocalStorage.setItem('globalStyleClasses', csString)\n\t\t_setStyleClasses(sc);\n\t\tif (updateActionHistory) {\n\t\t\taddAction({\n\t\t\t\tstyleClasses: JSON.parse(csString)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst canUndo = () => actionHistoryIndex > 0;\n\n\tconst setAction = (newIndex: number) => {\n\t\tif (newIndex < 0 || newIndex > actionHistory.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst action = actionHistory[newIndex];\n\t\t// if there was a change in fragment\n\t\tif (action.fragment) {\n\t\t\tupdateFragment(action.fragment, false);\n\t\t}\n\n\t\t// if there was a change in styleClasses\n\t\tif (action.styleClasses) {\n\t\t\tsetStyleClasses(action.styleClasses, false);\n\t\t}\n\n\t\tsetActionHistoryIndex(newIndex);\n\t};\n\n\tfunction undoAction() {\n\t\tif (!canUndo()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAction(actionHistoryIndex - 1)\n\t}\n\n\tconst canRedo = () => actionHistoryIndex < actionHistory.length - 1;\n\n\tconst redoAction = () => {\n\t\tif (!canRedo()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAction(actionHistoryIndex + 1)\n\t};\n\n\tconst clearActionHistory = () => {\n\t\tsetActionHistoryIndex(-1);\n\t\tsetActionHistory([]);\n\t};\n\n\tconst updateFragment = (fragment: any, updateActionHistory = true) => {\n\t\tif (!fragments.length) {\n\t\t\tsetFragments([fragment]);\n\t\t\treturn;\n\t\t}\n\t\tconst updatedFragments = fragments.map((f: any) => {\n\t\t\tif (f.id === fragment.id) {\n\t\t\t\t// Cannot use merge because removing datasets or labels will not\n\t\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\t\treturn assign({}, f, fragment);\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\n\t\tsetFragments(updatedFragments);\n\n\t\tif (updateActionHistory) {\n\t\t\taddAction({fragment});\n\t\t}\n\t};\n\n\tconst fragmentHelpers = getFragmentHelpers({fragments, setFragments});\n\n\tuseEffect(() => {\n\t\tconst localFragments = JSON.parse(localStorage.getItem('localFragments') as string || '[]');\n\t\t// clean up the hidden fragments (those marked for deletion but failed to be deleted)\n\t\tconst filteredFragments = localFragments.filter((fragment: any) => !fragment.hidden);\n\t\tfragmentHelpers.updateFragments(filteredFragments);\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(filteredFragments));\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<GlobalStateContext.Provider value={{\n\t\t\t// FRAGMENTS\n\t\t\tfragments,\n\t\t\tsetFragments,\n\t\t\tupdateFragment,\n\t\t\t...fragmentHelpers,\n\n\t\t\t// STYLE CLASSES\n\t\t\tstyleClasses,\n\t\t\tsetStyleClasses,\n\n\t\t\t// ACTION HISTORY\n\t\t\tactionHistory,\n\t\t\tactionHistoryIndex,\n\t\t\tsetActionHistory,\n\t\t\tsetActionHistoryIndex,\n\t\t\taddAction,\n\t\t\tcanUndo,\n\t\t\tundoAction,\n\t\t\tcanRedo,\n\t\t\tredoAction,\n\t\t\tclearActionHistory\n\t\t}}>\n\t\t\t{children}\n\t\t</GlobalStateContext.Provider>\n\t);\n};\n\nexport {\n\tGlobalStateContext,\n\tGlobalStateContextProvider\n};\n","import React, { createContext, useReducer } from 'react';\n\nconst NotificationContext: React.Context<any> = createContext({});\n\nNotificationContext.displayName = 'NotificationContext';\n\nexport type NotificationData = {\n\tkind: string;\n\ttitle: string;\n\tmessage: string;\n\tid: number,\n\taction?: any;\n}\nexport interface BaseNotificationAction {\n\ttype: NotificationActionType,\n\tdata: NotificationData;\n\taction?: Action\n}\n\nexport type NotificationAction =\n\tNotificationActionAdd |\n\tNotificationActionRemove;\n\n\nexport enum NotificationActionType {\n\tADD_NOTIFICATION,\n\tREMOVE_NOTIFICATION\n}\n\nexport interface NotificationActionAdd extends BaseNotificationAction {\n\ttype: NotificationActionType.ADD_NOTIFICATION;\n}\n\nexport interface NotificationActionRemove extends BaseNotificationAction {\n\ttype: NotificationActionType.REMOVE_NOTIFICATION;\n}\n\ninterface Action {\n\tactionText: string,\n\tactionFunction: any,\n\tonNotificationClose: any\n}\n\n\nexport interface NotificationState {\n\tnotifications: NotificationData[]\n}\n\nconst initialState = { notifications: [] };\nlet notificationCounter = 0;\n\nconst NotificationReducer = (state: NotificationState, action: NotificationAction) => {\n\tswitch (action.type) {\n\t\tcase NotificationActionType.REMOVE_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: state.notifications.filter(\n\t\t\t\t\t(notification: NotificationData) => notification.id !== action.data.id\n\t\t\t\t)\n\t\t\t};\n\t\tcase NotificationActionType.ADD_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: [\n\t\t\t\t\t...state.notifications,\n\t\t\t\t\t{\n\t\t\t\t\t\t...action.data,\n\t\t\t\t\t\tid: notificationCounter++\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\tdefault: return state;\n\t}\n};\n\nconst NotificationContextProvider = ({ children }: any) => {\n\tconst notification = useReducer(NotificationReducer, initialState);\n\treturn (\n\t\t<NotificationContext.Provider value={notification}>\n\t\t\t{children}\n\t\t</NotificationContext.Provider>\n\t);\n};\n\nexport {\n\tNotificationContext,\n\tNotificationContextProvider\n};\n","import assign from 'lodash/assign';\n\nexport const getFragmentHelpers = ({fragments, setFragments}: any) => {\n\tconst addFragment = (fragment: any) => {\n\t\tconst duplicate = assign({}, fragment);\n\t\tconst expandedFragments = fragments.concat(duplicate);\n\t\tsetFragments(expandedFragments);\n\t}\n\n\tconst getFragment = (fragmentId: string) => fragments.find((f: any) => f.id === fragmentId);\n\n\tconst updateFragments = (frags: any[]) => {\n\t\tif (!fragments || !fragments.length) {\n\t\t\tsetFragments(frags);\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove fragments which are in the original state but not in the payload.\n\t\tconst filteredFragments = fragments\n\t\t\t.filter((fragment: any) => frags.some((actionFragment: any) => actionFragment.id === fragment.id));\n\t\t// If fragments already exist in the state, we need to merge any changes to the fragments with\n\t\t// the current matching fragments and add any new fragments (if any) to the state.\n\t\tconst mergedFragments = filteredFragments.map((fragment: any) => {\n\t\t// Find the fragment in the payload containing the same id as the current state's fragments\n\t\t// to merge updated changes with.\n\t\t\tconst updatedFragment = frags.find((actionFragment: any) => fragment.id === actionFragment.id);\n\t\t\t// Can not use merge because removing datasets or labels will not\n\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\treturn assign({}, fragment, updatedFragment);\n\t\t});\n\t\t// Adds any fragments in the payload which do not match any id in the current state's fragments.\n\t\tconst updatedFragments = mergedFragments\n\t\t\t.concat(frags.filter((actionFragment: any) => (\n\t\t\t\tfragments.every((fragment: any) => fragment.id !== actionFragment.id)\n\t\t\t)));\n\n\t\tsetFragments(updatedFragments);\n\t}\n\n\tconst toggleFragmentVisibility = (id: string, hidden = false) => {\n\t\tconst updatedFragments = fragments.map((f: any) => {\n\t\t\tif (f.id === id) {\n\t\t\t\treturn {...f, hidden}\n\t\t\t}\n\t\t\treturn f;\n\t\t})\n\n\t\tsetFragments(updatedFragments);\n\t}\n\n\tconst removeFragment = (id: string) => {\n\t\tsetFragments(fragments.filter((fragment: any) => fragment.id !== id));\n\t}\n\n\tconst removeFragments = (ids: string[]) => {\n\t\tconst remainingFragments = fragments.filter((fragment: any) => (\n\t\t\t!ids.some((actionFragment: any) => actionFragment.id === fragment.id)\n\t\t));\n\t\tsetFragments(remainingFragments);\n\t}\n\n\treturn {\n\t\taddFragment,\n\t\tgetFragment,\n\t\tupdateFragments,\n\t\ttoggleFragmentVisibility,\n\t\tremoveFragment,\n\t\tremoveFragments\n\t};\n};\n","import { css, cx } from 'emotion';\nimport React, { useRef, useState } from 'react';\n\nimport { Draggable32, TrashCan32 } from '@carbon/icons-react';\nimport { drag } from '../routes/edit/tools';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\n\nexport const componentHeaderZIndex = 999;\n\nconst headerStyle = css`\n\tposition: absolute;\n\tmargin-top: -26px;\n\tpadding-left: 6px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: ${componentHeaderZIndex};\n`;\n\nconst iconStyle = css`height: 1rem; width: 1rem; float: right`;\n\nexport const AComponentCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <span className={css`overflow-wrap: anywhere`}>\n\t\t{JSON.stringify(selectedComponent)}\n\t</span>\n};\n\nconst dropBorderStyle = '2px solid #0f62fe';\n\nconst dropStyle = css`\n\tposition: absolute;\n\twidth: 15px;\n\theight: 15px;\n\tline-height: 21px;\n\tz-index: 2;\n`;\n\nconst dropStyleBefore = cx(dropStyle, css`\n\tmargin-left: -4px;\n\tmargin-top: -4px;\n\tborder-left: ${dropBorderStyle};\n\tborder-top: ${dropBorderStyle};\n`);\n\nconst dropStyleAfter = cx(dropStyle, css`\n\tmargin-left: calc(100% - 11px);\n\tborder-right: ${dropBorderStyle};\n\tborder-bottom: ${dropBorderStyle};\n\tbottom: -4px;\n`);\n\nexport interface ComponentInfo {\n\tcomponent: any,\n\tkeywords: string[],\n\tname: string,\n\tdefaultComponentObj: any,\n\timage: any, // whatever fits in the <img src=\"here\">\n\tstyleUI: any,\n\tcodeUI?: any,\n\trender?: (props: ComponentInfoRenderProps) => any,\n\thideFromElementsPane?: boolean,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (props: {json: any}) => string,\n\t\t\toutputs: (props: {json: any}) => string,\n\t\t\timports: string[],\n\t\t\tisNotDirectExport?: boolean,\n\t\t\tcode: (props: {json: any, jsonToTemplate: (json: any) => string}) => string\n\t\t},\n\t\treact: {\n\t\t\timports: string[],\n\t\t\totherImports?: (props: {json: any, fragments?: any[]}) => string,\n\t\t\tisNotDirectExport?: boolean,\n\t\t\tcode: (props: {json: any, jsonToTemplate: (json: any, fragments: any[]) => string, fragments: any[]}) => string\n\t\t}\n\t}\n}\n\nexport interface ComponentInfoRenderProps {\n\tcomponentObj: any,\n\tselect: () => void,\n\tremove: () => void,\n\tselected: boolean,\n\tonDragOver: (event: any) => void,\n\tonDrop: (event: any) => any,\n\trenderComponents: (componentObj: any) => any\n}\n\nexport const AComponent = ({\n\tchildren,\n\tcomponentObj,\n\tselect,\n\tselected,\n\tremove,\n\theadingCss,\n\tclassName\n}: any) => {\n\t// TODO use fragments context instead of passing in `remove`?\n\tconst [fragment, setFragment] = useFragment();\n\tconst [showDragOverIndicator, setShowDragOverIndicator] = useState(false);\n\tconst [dragOverPosition, setDragOverPosition] = useState([] as any[]);\n\tconst holderRef = useRef(null as any);\n\n\tconst isDragOverLeft = () => dragOverPosition[0] < holderRef.current.offsetWidth  / 2;\n\t// const isDragOverRight = () => !isDragOverLeft();\n\tconst isDragOverTop = () => dragOverPosition[1] < holderRef.current.offsetHeight  / 2;\n\t// const isDragOverBottom = () => !isDragOverTop();\n\tconst isDragOverBefore = () => isDragOverLeft() || isDragOverTop();\n\tconst isDragOverAfter = () => !isDragOverBefore();\n\n\tconst onDrop = (event: any) => {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\tsetShowDragOverIndicator(false)\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData(\"drag-object\"));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(\n\t\t\t\tfragment.data,\n\t\t\t\tdragObj,\n\t\t\t\tcomponentObj.id,\n\t\t\t\tgetParentComponent(fragment.data, componentObj).items.indexOf(componentObj) + (isDragOverBefore() ? 0 : 1)\n\t\t\t)\n\t\t});\n\t};\n\n\treturn (\n\t\t<span\n\t\tclassName={className}\n\t\tref={holderRef}\n\t\tonClick={(event) => {\n\t\t\tevent.stopPropagation();\n\t\t\tselect();\n\t\t}}\n\t\tdraggable='true' // TODO make Draggable32 the drag handle and this element as preview\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj,\n\t\t\ttype: 'move'\n\t\t})}\n\t\tonDragEnter={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(true);\n\t\t}}\n\t\tonDragLeave={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(false);\n\t\t}}\n\t\tonDragOver={(event) => {\n\t\t\tconst rect = event.currentTarget.getBoundingClientRect();\n\t\t\tsetDragOverPosition([event.pageX - rect.left, event.pageY - rect.top]);\n\t\t}}\n\t\tonDrop={onDrop}>\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleBefore,\n\t\t\t\tshowDragOverIndicator && isDragOverBefore() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleAfter,\n\t\t\t\tshowDragOverIndicator && isDragOverAfter() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(headerStyle, headingCss, selected ? css`` : css`display: none`)}>\n\t\t\t\t<span className={css`margin-right: 1rem`}>\n\t\t\t\t\t{componentObj && componentObj.type ? componentObj.type : 'Header'}\n\t\t\t\t</span>\n\t\t\t\t<Draggable32 className={iconStyle}/>\n\t\t\t\t<TrashCan32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif (remove) {\n\t\t\t\t\t\tremove();\n\t\t\t\t\t}\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n\tFormLabel,\n\tTag\n} from 'carbon-components-react';\nimport { GlobalStateContext } from '../context';\n\nconst compareClasses = (sc1: any, sc2: any) => sc1.name < sc2.name ? -1 : 1;\n\nexport const CssClassSelector = ({ selectedClasses, setSelectedClasses }: any) => {\n\tconst { styleClasses } = useContext(GlobalStateContext);\n\n\tconst _getAvailableClasses = () => {\n\t\t// available is anything in styleClasses, not yet in selecteClasses, sorted\n\t\treturn styleClasses\n\t\t\t.filter((sc: any) => !selectedClasses?.find((ssc: any) => ssc.id === sc.id))\n\t\t\t.sort(compareClasses);\n\t};\n\n\tconst [availableClasses, setAvailableClasses] = useState(_getAvailableClasses());\n\n\tuseEffect(() => {\n\t\tif (!selectedClasses) {\n\t\t\tsetSelectedClasses([]);\n\t\t}\n\t}, [selectedClasses, setSelectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update available classes based on styleClasses and selectedClasses\n\t\tsetAvailableClasses(_getAvailableClasses());\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses, selectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update the contents of selected classes when needed\n\t\tsetSelectedClasses(\n\t\t\tstyleClasses.filter((sc: any) => !!selectedClasses?.find((ssc: any) => ssc.id === sc.id)),\n\t\t\tfalse\n\t\t);\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses]);\n\n\tconst selectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses([...selectedClasses, styleClass]);\n\t\tsetAvailableClasses(availableClasses.filter((c: any) => c.id !== styleClass.id))\n\t};\n\n\tconst deselectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses(selectedClasses.filter((c: any) => c.id !== styleClass.id));\n\t\tsetAvailableClasses([...availableClasses, styleClass].sort(compareClasses));\n\t};\n\n\treturn (\n\t\t<div style={{marginTop: '1rem'}}>\n\t\t\t<p>Custom CSS classes</p>\n\t\t\t<FormLabel>Selected classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tselectedClasses?.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tfilter\n\t\t\t\t\tonClose={() => deselectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t\t<br />\n\t\t\t<FormLabel>Available classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tavailableClasses.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tonClick={() => selectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport const ComponentCssClassSelector = ({ componentObj, setComponent }: any) => {\n\tconst setSelectedClasses = (cssClasses: any[], updateActionHistory = true) => {\n\t\tsetComponent({\n\t\t\t\t...componentObj,\n\t\t\t\tcssClasses\n\t\t\t},\n\t\t\tupdateActionHistory\n\t\t);\n\t};\n\n\treturn (\n\t\t<CssClassSelector\n\t\t\tselectedClasses={componentObj.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t);\n};\n","import React from 'react';\nimport domtoimage from 'dom-to-image';\nimport ReactDOM from 'react-dom';\nimport { Fragment } from '../components';\nimport { camelCase, kebabCase, upperFirst } from 'lodash';\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport interface RenderProps {\n\tid: string,\n\tname: string,\n\twidth?: number,\n\theight?: number,\n\tformat?: string,\n\tpreview?: { // only sent for preview\n\t\tformat?: string, // optional\n\t\twidth: number,\n\t\theight: number\n\t}\n}\n\nexport const getFragmentPreview = async(fragment: any, props: RenderProps) => {\n\tconst element = document.createElement('div');\n\telement.className = 'render-preview';\n\n\t(element as HTMLElement).style.position = 'absolute';\n\t(element as HTMLElement).style.top = '0';\n\t(element as HTMLElement).style.left = '0';\n\t(element as HTMLElement).style.zIndex = '-1';\n\t(element as HTMLElement).style.width = `${props.width || 800}px`;\n\t(element as HTMLElement).style.height = `${props.height || 400}px`;\n\t(element as HTMLElement).style.minHeight = `${props.height || 400}px`;\n\tReactDOM.render(React.createElement(Fragment, {fragment}), element);\n\tdocument.body.appendChild(element);\n\n\tawait sleep(100); // wait for render to finish\n\n\tconst imageBlob = await domtoimage.toBlob(element as Node);\n\t(element as HTMLElement).remove();\n\treturn imageBlob;\n};\n\nexport const getFragmentTemplates = (fragments: any[]) => (\n\tfragments.filter((fragment: any) => !!fragment.labels?.includes('template'))\n);\n\nexport const getAllComponentStyleClasses = (componentObj: any, fragments: any[]) => {\n\tlet styleClasses: any = {};\n\n\t// convert into an object so all classes are unique\n\tcomponentObj.cssClasses?.forEach((cssClass: any) => {\n\t\t// NOTE do we need to merge them deeply?\n\t\tstyleClasses[cssClass.id] = cssClass;\n\t});\n\n\tcomponentObj.items?.map((co: any) => {\n\t\tconst coClasses = getAllComponentStyleClasses(co, fragments);\n\t\tstyleClasses = {\n\t\t\t...styleClasses,\n\t\t\t...coClasses\n\t\t};\n\n\t\tif (co.type === 'fragment') {\n\t\t\tconst fragment = fragments.find(f => f.id === co.id);\n\n\t\t\tstyleClasses = {\n\t\t\t\t...styleClasses,\n\t\t\t\t...getAllFragmentStyleClasses(fragment || {}, fragments)\n\t\t\t};\n\t\t}\n\t});\n\n\treturn styleClasses;\n};\n\nexport const tagNameFromFragment = (fragment: any) => {\n\t// TODO fragment can have a tag name?\n\treturn kebabCase(fragment.title);\n};\n\nexport const classNameFromFragment = (fragment: any) => {\n\t// TODO fragment can have a class name?\n\treturn upperFirst(camelCase(fragment.title));\n};\n\nexport const getAllFragmentStyleClasses = (fragment: any, fragments: any[] = []) => {\n\tif (!fragment || !fragment.data) { return []; }\n\n\tconst allClasses = {\n\t\t...getAllComponentStyleClasses(fragment, fragments),\n\t\t...getAllComponentStyleClasses(fragment.data, fragments)\n\t};\n\treturn Object.values(allClasses);\n};\n\nexport const hasComponentStyleClasses = (componentObj: any) => {\n\tif (componentObj.cssClasses) {\n\t\treturn true;\n\t}\n\n\tif (componentObj.items) {\n\t\treturn componentObj.items.some((item: any) => hasComponentStyleClasses(item));\n\t}\n\n\treturn false;\n};\n\nexport const hasFragmentStyleClasses = (fragment: any) => {\n\tif (!fragment || !fragment.data) { return false; }\n\n\treturn hasComponentStyleClasses(fragment.data);\n};\n\nexport const getUniqueFragmentName = (fragments: Array<any>, baseName: string) => {\n\tconst nameRegEx = new RegExp(String.raw`(.*)\\s+(copy)*(\\s+(\\d+))?$`);\n\tconst nameMatch = baseName.match(nameRegEx);\n\tlet count = 0;\n\n\tlet nameBase = baseName;\n\t// If match, increment the count and update name base and new name\n\tif (nameMatch) {\n\t\tnameBase = baseName.replace(nameRegEx, '$1');\n\t\tcount = Number.parseInt(baseName.replace(nameRegEx, '$4'), 10);\n\t\tif (!count) {\n\t\t\tcount = 0;\n\t\t}\n\t}\n\n\t// Get a list containing names of all duplicates of original fragment\n\t// e.g. [ \"Fragment copy\", \"Fragment copy 1\", \"Fragment copy 7\", ...]\n\tconst names: string[] = [];\n\tfragments.forEach((fragment) => {\n\t\tif (fragment.title.includes(nameBase)) {\n\t\t\tnames.push(fragment.title);\n\t\t}\n\t});\n\n\tif (names.length <= 1) {\n\t\t// because the fragment we're copying is already in there\n\t\treturn `${nameBase} copy`;\n\t}\n\n\tconst highestNumber = names\n\t\t.map((n) => Number.parseInt(n.replace(nameRegEx, '$4'), 10))\n\t\t.filter((n) => !isNaN(n)).sort((a, b) => b - a)\n\t\t.shift();\n\n\treturn `${nameBase} copy ${highestNumber && count < highestNumber ? highestNumber + 1 : count + 1}`;\n};\n\nexport const getFragmentDuplicate = (fragments: any, fragment: any, overrides = {}) => {\n\t// copy current fragment and change fragment title\n\tlet fragmentCopy = JSON.parse(JSON.stringify(fragment));\n\tfragmentCopy.title = getUniqueFragmentName(fragments, fragmentCopy.title);\n\tfragmentCopy.id = `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\treturn Object.assign({}, fragmentCopy, overrides);\n};\n\nexport const getFragmentPreviewUrl = async (fragment: any) => {\n\tconst renderProps: RenderProps = {\n\t\tid: fragment.id,\n\t\tname: fragment.title,\n\t\twidth: 800,\n\t\theight: 400,\n\t\tpreview: {\n\t\t\tformat: 'png',\n\t\t\twidth: 330,\n\t\t\theight: 200\n\t\t}\n\t};\n\n\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\treturn new Promise((resolve) => {\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tresolve(reader.result ? reader.result.toString() : '');\n\t\t};\n\t})\n};\n\nexport const reactClassNamesFromComponentObj = (componentObj: any) =>\n\tcomponentObj.cssClasses\n\t&& Array.isArray(componentObj.cssClasses)\n\t&& componentObj.cssClasses.length > 0\n\t? `className='${componentObj.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t: '';\n\nexport const angularClassNamesFromComponentObj = (componentObj: any) =>\n\tcomponentObj.cssClasses\n\t&& Array.isArray(componentObj.cssClasses)\n\t&& componentObj.cssClasses.length > 0\n\t? `class='${componentObj.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t: '';\n\nexport const nameStringToVariableString = (name: string) => camelCase(name);\n","import React from 'react';\nimport { Accordion, Dropdown } from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\n\nimport image from '../../assets/component-icons/accordion.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const AAccordionStyleUI = ({selectedComponent, setComponent}: any) => {\n\tconst sizeItems = [\n\t\t{id: 'sm', text: 'Small'},\n\t\t{id: 'md', text: 'Medium'},\n\t\t{id: 'lg', text: 'Large'}\n\t];\n\n\tconst alignItems = [\n\t\t{id: 'end', text: 'End'},\n\t\t{id: 'start', text: 'Start'}\n\t]\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t})}/>\n\t\t<Dropdown\n\t\t\tlabel='Alignment of accordion heading'\n\t\t\ttitleText='Alignment'\n\t\t\titems={alignItems}\n\t\t\tinitialSelectedItem={alignItems.find(item => item.id === selectedComponent.align)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\talign: event.selectedItem.id\n\t\t})}/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const AAccordion = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Accordion\n\t\t\talign={componentObj.align}\n\t\t\tsize={componentObj.size}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Accordion>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AAccordion,\n\tstyleUI: AAccordionStyleUI,\n\trender: ({ componentObj, select, remove, selected, renderComponents }) => <AAccordion\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t{componentObj.items.map((accordionItem: any) => renderComponents(accordionItem))}\n\t</AAccordion>,\n\tkeywords: ['accordion'],\n\tname: 'Accordion',\n\tdefaultComponentObj: {\n\t\ttype: 'accordion',\n\t\talign: 'end',\n\t\tsize: 'md',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'accordionitem',\n\t\t\t\ttitle: 'Accordion item',\n\t\t\t\titems: [{ type: 'text', text: 'Accordion item content' }]\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Align = \"${json.align}\";`,\n\t\t\toutputs: ({json}) => ``,\n\t\t\timports: ['AccordionModule'],\n\t\t\t// NOTE: Angular accordion does not support size yet.\n\t\t\t// Issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2022\n\t\t\t// NOTE: Angular accordion align end does not behave as expected.\n\t\t\t// Issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2023\n\t\t\tcode: ({ json, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-accordion\n\t\t\t\t\t[align]=\"${nameStringToVariableString(json.codeContext?.name)}Align\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element)).join('\\n')}\n\t\t\t\t</ibm-accordion>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Accordion'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<Accordion\n\t\t\t\t\t${json.align !== undefined ? `align='${json.align}'` : ''}\n\t\t\t\t\t${json.size !== undefined ? `size='${json.size}'` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</Accordion>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tAccordionItem,\n\tCheckbox,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\n\nimport image from '../../assets/component-icons/accordion-item.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\nimport { useFragment } from '../../context';\nimport {\n\tAdder,\n\tgetParentComponent,\n\tupdatedState\n} from '../../components';\n\nexport const AAccordionItemStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.title}\n\t\t\tlabelText='Title'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}} />\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const AAccordionItem = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\tconst addAccordionItem = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'accordionitem',\n\t\t\t\t\ttitle: 'New accordion item',\n\t\t\t\t\titems: [{ type: 'text', text: 'New accordion item content' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (<>\n\t\t<Adder\n\t\tactive={selected}\n\t\ttopAction={() => addAccordionItem()}\n\t\tbottomAction={() => addAccordionItem(1)}>\n\t\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\t{...rest}\n\t\t\tselected={selected}>\n\t\t\t\t<AccordionItem\n\t\t\t\ttitle={componentObj.title}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t\t{children}\n\t\t\t\t</AccordionItem>\n\t\t\t</AComponent>\n\t\t</Adder>\n\t</>);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AAccordionItem,\n\thideFromElementsPane: true,\n\tstyleUI: AAccordionItemStyleUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AAccordionItem\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}\n\t\tselected={selected}>\n\t\t\t{componentObj.items.map((child: any) => renderComponents(child))}\n\t</AAccordionItem>,\n\tkeywords: ['accordion', 'item'],\n\tname: 'Accordion Item',\n\tdefaultComponentObj: {\n\t\ttype: 'accordionitem',\n\t\ttitle: 'Accordion item',\n\t\tdisabled: false,\n\t\titems: [{ type: 'text', text: 'Accordion item content' }]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Title = \"${json.title}\";`,\n\t\t\toutputs: ({json}) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Selected = new EventEmitter();`,\n\t\t\timports: ['AccordionModule'],\n\t\t\t// NOTE: Angular accordion item currently does not support 'disabled'.\n\t\t\t// issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2021\n\t\t\tcode: ({ json, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-accordion-item\n\t\t\t\t\t[title]=\"${nameStringToVariableString(json.codeContext?.name)}Title\"\n\t\t\t\t\t(selected)=\"${nameStringToVariableString(json.codeContext?.name)}Selected.emit($event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element)).join('\\n')}\n\t\t\t\t</ibm-accordion-item>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['AccordionItem'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<AccordionItem\n\t\t\t\t\ttitle=\"${json.title || ''}\"\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</AccordionItem>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tButton,\n\tDropdown,\n\tTextInput\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/button.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const AButtonStyleUI = ({selectedComponent, setComponent}: any) => {\n\tconst kindItems = [\n\t\t{id: 'primary', text: 'Primary'},\n\t\t{id: 'secondary', text: 'Secondary'},\n\t\t{id: 'tertiary', text: 'Tertiary'},\n\t\t{id: 'danger', text: 'Danger'},\n\t\t{id: 'danger--tertiary', text: 'Danger tertiary'},\n\t\t{id: 'danger--ghost', text: 'Danger ghost'},\n\t\t{id: 'ghost', text: 'Ghost'}\n\t];\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Dropdown\n\t\t\tlabel='Kind'\n\t\t\ttitleText='Kind'\n\t\t\titems={kindItems}\n\t\t\tinitialSelectedItem={kindItems.find(item => item.id === selectedComponent.kind)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tkind: event.selectedItem.id\n\t\t})}/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const AButton = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={css`position: relative; display: inline-flex`}\n\t\t{...rest}>\n\t\t\t<Button\n\t\t\tkind={componentObj.kind}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Button>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AButton,\n\tstyleUI: AButtonStyleUI,\n\trender: ({ componentObj, select, remove, selected }) => <AButton\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</AButton>,\n\tkeywords: ['button'],\n\tname: 'Button',\n\tdefaultComponentObj: {\n\t\ttype: 'button',\n\t\tkind: 'primary',\n\t\ttext: 'Button'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => ``,\n\t\t\toutputs: ({json}) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Clicked = new EventEmitter();`,\n\t\t\timports: ['ButtonModule'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<button\n\t\t\t\t\t${json.kind ? `ibmButton='${json.kind}'` : 'ibmButton'}\n\t\t\t\t\t(click)='${nameStringToVariableString(json.codeContext?.name)}Clicked.emit()'\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.text}\n\t\t\t\t</button>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Button'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Button${json.kind && ` kind=\"${json.kind}\"`} ${reactClassNamesFromComponentObj(json)}>${json.text}</Button>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Checkbox, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/checkbox.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ACheckboxStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const ACheckboxCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ACheckbox = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<Checkbox\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ACheckbox,\n\tstyleUI: ACheckboxStyleUI,\n\tcodeUI: ACheckboxCodeUI,\n\tkeywords: ['checkbox', 'check box'],\n\tname: 'Checkbox',\n\tdefaultComponentObj: {\n\t\ttype: 'checkbox',\n\t\tlabel: 'Checkbox'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Checked: boolean;`,\n\t\t\toutputs: ({json}) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}CheckedChange = new EventEmitter<boolean>();`,\n\t\t\timports: ['CheckboxModule'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<ibm-checkbox\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\t[(checked)]=\"${nameStringToVariableString(json.codeContext?.name)}Checked\"\n\t\t\t\t\t(checkedChange)=\"${nameStringToVariableString(json.codeContext?.name)}CheckedChange.emit($event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.label}\n\t\t\t\t</ibm-checkbox>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Checkbox'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<Checkbox\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\tchecked={state[\"${json.codeContext?.name}\"]?.checked}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={(checked) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\tvalue: checked\n\t\t\t\t\t\t}\n\t\t\t\t\t})} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n\tAccordion,\n\tAccordionItem,\n\tColumn,\n\tNumberInput\n} from 'carbon-components-react';\nimport { Add32, Help32 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { AComponent } from './a-component';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nconst helpIconStyle = css`\n\tcolor: #525252;\n\tposition: absolute;\n\tright: 1rem;\n\tz-index: 1;\n\tbackground: white;\n\n\tsvg {\n\t\twidth: 1rem;\n\t\theight: 1rem;\n\t}\n`;\n\nexport const AColumnStyleUI = ({selectedComponent, setComponent}: any) => {\n\tconst onNumInputchange = (event: any) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\t[event.imaginaryTarget.name]: Number(event.imaginaryTarget.value)\n\t\t});\n\t};\n\n\tconst [isAccordionOpen, setIsAccordionOpen] = useState({} as any);\n\n\tuseEffect(() => {\n\t\tsetIsAccordionOpen({\n\t\t\tsmall: selectedComponent.smallSpan || selectedComponent.smallOffset,\n\t\t\tmedium: selectedComponent.mediumSpan || selectedComponent.mediumOffset,\n\t\t\tlarge: selectedComponent.largeSpan || selectedComponent.largeOffset,\n\t\t\txLarge: selectedComponent.xLargeSpan || selectedComponent.xLargeOffset,\n\t\t\tmax: selectedComponent.maxSpan || selectedComponent.maxOffset,\n\t\t});\n\t}, [selectedComponent]);\n\n\treturn <>\n\t\t<a\n\t\thref='https://www.carbondesignsystem.com/guidelines/2x-grid/implementation/'\n\t\ttarget='_blank'\n\t\trel='noopener noreferrer'\n\t\tclassName={helpIconStyle}>\n\t\t\t<Help32 />\n\t\t</a>\n\t\t<Accordion align='start'>\n\t\t\t<AccordionItem title='Small' open={isAccordionOpen.small}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='smallSpan'\n\t\t\t\t\tvalue={selectedComponent.smallSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={3}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='smallOffset'\n\t\t\t\t\tvalue={selectedComponent.smallOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Medium' open={isAccordionOpen.medium}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={8}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='mediumSpan'\n\t\t\t\t\tvalue={selectedComponent.mediumSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={7}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='mediumOffset'\n\t\t\t\t\tvalue={selectedComponent.mediumOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Large' open={isAccordionOpen.large}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='largeSpan'\n\t\t\t\t\tvalue={selectedComponent.largeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='largeOffset'\n\t\t\t\t\tvalue={selectedComponent.largeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Extra large' open={isAccordionOpen.xLarge}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='xLargeSpan'\n\t\t\t\t\tvalue={selectedComponent.xLargeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='xLargeOffset'\n\t\t\t\t\tvalue={selectedComponent.xLargeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Max' open={isAccordionOpen.max}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='maxSpan'\n\t\t\t\t\tvalue={selectedComponent.maxSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='maxOffset'\n\t\t\t\t\tvalue={selectedComponent.maxOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-top: -2px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: 1;\n`;\n\nconst addStyleLeft = cx(addStyle, css`\n\tmargin-left: -30px;\n`);\n\nconst addStyleRight = cx(addStyle, css`\n\tmargin-left: calc(100% - 30px);\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const AColumn = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addCell = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\titems: [{ type: 'text', text: 'New cell' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<Column\n\t\tonDrop={onDrop}\n\t\tclassName={cx(componentObj.cssClasses?.map((cc: any) => cc.id).join(' '), css`position: relative`)}\n\t\tsm={{\n\t\t\tspan: componentObj.smallSpan || undefined,\n\t\t\toffset: componentObj.smallOffset || undefined\n\t\t}}\n\t\tmd={{\n\t\t\tspan: componentObj.mediumSpan || undefined,\n\t\t\toffset: componentObj.mediumOffset || undefined\n\t\t}}\n\t\tlg={{\n\t\t\tspan: componentObj.largeSpan || undefined,\n\t\t\toffset: componentObj.largeOffset || undefined\n\t\t}}\n\t\txlg={{\n\t\t\tspan: componentObj.xLargeSpan || undefined,\n\t\t\toffset: componentObj.xLargeOffset || undefined\n\t\t}}\n\t\tmax={{\n\t\t\tspan: componentObj.maxSpan || undefined,\n\t\t\toffset: componentObj.maxOffset || undefined\n\t\t}}>\n\t\t\t<span className={cx(addStyleLeft, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell();\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<span className={cx(addStyleRight, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell(1);\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\tclassName={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t{children}\n\t\t\t</AComponent>\n\t\t</Column>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AColumn,\n\tstyleUI: AColumnStyleUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AColumn\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((column: any) => (\n\t\t\t\trenderComponents(column)\n\t\t\t))}\n\t</AColumn>,\n\tkeywords: ['column', 'grid'],\n\tname: 'Column',\n\thideFromElementsPane: true,\n\tdefaultComponentObj: undefined,\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t},\n\t\treact: {\n\t\t\timports: ['Column'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t}\n\t}\n};\n","import React, { useContext } from 'react';\nimport {\n\tCheckbox,\n\tTextInput\n} from 'carbon-components-react';\nimport { Edit32 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/button.svg';\nimport { GlobalStateContext } from '../context';\nimport { classNameFromFragment, tagNameFromFragment } from '../utils/fragment-tools';\nimport { LinkButton } from '../components';\n\nexport const AFragmentStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<LinkButton\n\t\tkind='secondary'\n\t\tsize='sm'\n\t\trenderIcon={Edit32}\n\t\tclassName={css`margin-bottom: 1rem`}\n\t\tto={selectedComponent.id}>\n\t\t\tEdit fragment\n\t\t</LinkButton>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='fragment-showOutline'\n\t\t\tchecked={selectedComponent.showOutline}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tshowOutline: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const AFragmentCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nconst showOutlineStyle = css`\n\toutline: 1px dashed #78a9ff;\n`;\n\nexport const AFragment = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={css`position: relative; display: inline-flex`}\n\t\t{...rest}>\n\t\t\t<div\n\t\t\tstyle={{pointerEvents: 'none'}}\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcomponentObj.showOutline ? showOutlineStyle : ''\n\t\t\t)}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AFragment,\n\tstyleUI: AFragmentStyleUI,\n\trender: ({ componentObj, select, remove, selected, renderComponents }) => {\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tconst globalState = useContext(GlobalStateContext); // used for fetching subcomponents/microlayouts\n\t\tconst subFragment = globalState?.getFragment(componentObj.id);\n\n\t\tif (!subFragment) {\n\t\t\treturn ''; // NOTE should we also remove it from the fragment?\n\t\t}\n\n\t\treturn <AFragment\n\t\t\tcomponentObj={componentObj}\n\t\t\tselect={select}\n\t\t\tremove={remove}\n\t\t\tselected={selected}>\n\t\t\t\t{ renderComponents(subFragment.data) }\n\t\t</AFragment>\n\t},\n\tkeywords: ['fragment'],\n\tname: 'Fragment',\n\thideFromElementsPane: true,\n\tdefaultComponentObj: {\n\t\ttype: 'fragment'\n\t},\n\timage,\n\tcodeExport: { // TODO exports\n\t\tangular: {\n\t\t\tinputs: ({json}) => ``,\n\t\t\toutputs: ({json}) => ``,\n\t\t\timports: [],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn ``;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\totherImports: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `import {${classNameFromFragment(fragment)}} from \"/src/shared/${tagNameFromFragment(fragment)}.js\";`;\n\t\t\t},\n\t\t\tcode: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `<${classNameFromFragment(fragment)} state={state} setState={setState} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Checkbox, Grid } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css, cx } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/grid.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const AGridStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='grid-showOutline'\n\t\t\tchecked={selectedComponent.showOutline}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tshowOutline: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Full width'\n\t\t\tid='grid-fullWidth'\n\t\t\tchecked={selectedComponent.fullWidth}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tfullWidth: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nconst showOutlineStyle = css`\n\t.bx--col {\n\t\toutline: 1px dashed #78a9ff;\n\t}\n`;\n\nexport const AGrid = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<Grid\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcomponentObj.showOutline ? showOutlineStyle : ''\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tfullWidth={componentObj.fullWidth}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t{children}\n\t\t\t</Grid>\n\t\t</AComponent>\n\t);\n};\n\nconst getCellAttributeString = (cell: any, sizeShort: string, sizeLong: string) => {\n\tconst span = cell[`${sizeLong}Span`];\n\tconst offset = cell[`${sizeLong}Offset`];\n\n\tif (!span && ! offset) {\n\t\treturn '';\n\t}\n\n\tconst spanString = `span: ${span}`;\n\tconst offsetString = `offset: ${offset}`;\n\n\tconst spanAndOffset = `{\n\t\t${span ? spanString : ''}${span && offset ? ',' : ''}\n\t\t${offset ? offsetString : ''}\n\t}`;\n\n\treturn `${sizeShort}={${!offset ? span : spanAndOffset}}`;\n};\n\nconst getCellParamsString = (cell: any) => {\n\treturn `\n\t\t${getCellAttributeString(cell, 'sm', 'small')}\n\t\t${getCellAttributeString(cell, 'md', 'medium')}\n\t\t${getCellAttributeString(cell, 'lg', 'large')}\n\t\t${getCellAttributeString(cell, 'xlg', 'xLarge')}\n\t\t${getCellAttributeString(cell, 'max', 'max')}\n\t`;\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AGrid,\n\tstyleUI: AGridStyleUI,\n\tkeywords: ['grid', 'row', 'column'],\n\tname: 'Grid',\n\tdefaultComponentObj: {\n\t\ttype: 'grid',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'A' }]},\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'B' }]}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'C' }]},\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'D' }]}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => ``,\n\t\t\toutputs: ({json}) => ``,\n\t\t\timports: ['GridModule'],\n\t\t\tcode: ({json, jsonToTemplate}) => {\n\t\t\t\treturn `<div ibmGrid ${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.items.map((row: any) => `<div ibmRow ${angularClassNamesFromComponentObj(row)}>\n\t\t\t\t\t\t${row.items.map((cell: any) => `<div ibmCol ${angularClassNamesFromComponentObj(cell)}>\n\t\t\t\t\t\t\t\t${jsonToTemplate(cell)}\n\t\t\t\t\t\t</div>`).join('\\n')}\n\t\t\t\t\t</div>`).join('\\n')}\n\t\t\t\t</div>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Grid', 'Column', 'Row'],\n\t\t\tcode: ({json, fragments, jsonToTemplate}) => {\n\t\t\t\treturn `<Grid ${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.items.map((row: any) => `<Row ${reactClassNamesFromComponentObj(row)}>\n\t\t\t\t\t\t${row.items.map((cell: any) => `<Column ${getCellParamsString(cell)} ${reactClassNamesFromComponentObj(cell)}>\n\t\t\t\t\t\t\t\t${jsonToTemplate(cell, fragments)}\n\t\t\t\t\t\t</Column>`).join('\\n')}\n\t\t\t\t\t</Row>`).join('\\n')}\n\t\t\t\t</Grid>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tTextInput,\n\tNumberInput\n} from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/number-input.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ANumberInputStyleUI = ({selectedComponent, setComponent}: any) => {\n\tconst sizeItems = [\n\t\t{id: 'sm', text: 'Small'},\n\t\t{id: 'md', text: 'Medium'},\n\t\t{id: 'lg', text: 'Large'}\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t})}/>\n\t\t<Checkbox\n\t\t\tlabelText='Hide label'\n\t\t\tid='hide-label'\n\t\t\tchecked={selectedComponent.hideLabel}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thideLabel: checked\n\t\t\t\t})\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.min}\n\t\t\tlabel='Min'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tmin: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.max}\n\t\t\tlabel='Max'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tmax: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.step}\n\t\t\tlabel='Step'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tstep: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.warnText}\n\t\t\tlabelText='Warning text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\twarnText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.invalidText}\n\t\t\tlabelText='Invalid text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tinvalidText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t})\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const ANumberInputCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ANumberInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<NumberInput\n\t\t\t\tsize={componentObj.size}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\twarn={componentObj.warn}\n\t\t\t\twarnText={componentObj.warnText}\n\t\t\t\tlabel={componentObj.label}\n\t\t\t\thideLabel={componentObj.hideLabel}\n\t\t\t\thideSteppers={componentObj.hideSteppers}\n\t\t\t\tmin={componentObj.min}\n\t\t\t\tmax={componentObj.max}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\treadOnly={componentObj.readOnly}\n\t\t\t\tinvalid={componentObj.invalid}\n\t\t\t\tinvalidText={componentObj.invalidText}\n\t\t\t\tlight={componentObj.light}\n\t\t\t\tallowEmpty={componentObj.allowEmpty}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest}\n\t\t\t\ttype='number' />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ANumberInput,\n\tstyleUI: ANumberInputStyleUI,\n\tcodeUI: ANumberInputCodeUI,\n\tkeywords: ['number', 'input'],\n\tname: 'Number input',\n\tdefaultComponentObj: {\n\t\ttype: 'numberinput',\n\t\tsize: 'md',\n\t\tlabel: 'Number input label',\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tstep: 10,\n\t\thelperText: 'Helper text',\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) =>\n\t\t\t\t`@Input() ${nameStringToVariableString(json.codeContext?.name)}HelperText = \"${json.helperText}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Value = ${Math.round((json.min + json.max) / 2)};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Label = \"${json.label}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Theme = \"${json.light ? 'light' : ''}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Min = ${json.min};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Max = ${json.max};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Step = ${json.step};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Invalid = ${!!json.invalid};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}InvalidText = ${json.invalidText};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Warn = ${json.warn};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}WarnText = ${json.warnText};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Size = \"${json.size}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled};`,\n\t\t\toutputs: ({json}) =>\n\t\t\t\t`@Output() ${nameStringToVariableString(json.codeContext?.name)}ValueChange = new EventEmitter<number>();\n\t\t\t\t@Output() ${nameStringToVariableString(json.codeContext?.name)}Change = new EventEmitter<any>();`,\n\t\t\timports: ['NumberModule'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<ibm-number\n\t\t\t\t\t[helperText]=\"${nameStringToVariableString(json.codeContext?.name)}HelperText\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t[value]=\"${nameStringToVariableString(json.codeContext?.name)}Value\"\n\t\t\t\t\t(change)=\"${nameStringToVariableString(json.codeContext?.name)}ValueChange.emit($event.value) || numberinput78Change.emit($event)\"\n\t\t\t\t\t[label]=\"${nameStringToVariableString(json.codeContext?.name)}Label\"\n\t\t\t\t\t[theme]=\"${nameStringToVariableString(json.codeContext?.name)}Theme\"\n\t\t\t\t\t[min]=\"${nameStringToVariableString(json.codeContext?.name)}Min\"\n\t\t\t\t\t[max]=\"${nameStringToVariableString(json.codeContext?.name)}Max\"\n\t\t\t\t\t[step]=\"${nameStringToVariableString(json.codeContext?.name)}Step\"\n\t\t\t\t\t[invalid]=\"${nameStringToVariableString(json.codeContext?.name)}Invalid\"\n\t\t\t\t\t[invalidText]=\"${nameStringToVariableString(json.codeContext?.name)}InvalidText\"\n\t\t\t\t\t[warn]=\"${nameStringToVariableString(json.codeContext?.name)}Warn\"\n\t\t\t\t\t[warnText]=\"${nameStringToVariableString(json.codeContext?.name)}WarnText\"\n\t\t\t\t\t[size]=\"${nameStringToVariableString(json.codeContext?.name)}Size\"\n\t\t\t\t\t[disabled]=\"${nameStringToVariableString(json.codeContext?.name)}Disabled\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t</ibm-number>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['NumberInput'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<NumberInput\n\t\t\t\t\tsize=\"${json.size}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tmin=\"${json.min}\"\n\t\t\t\t\tmax=\"${json.max}\"\n\t\t\t\t\tstep=\"${json.step}\"\n\t\t\t\t\tlabel=\"${json.label}\"\n\t\t\t\t\t${json.warnText !== undefined && json.warnText !== '' ? `warnText=\"${json.warnText}\"` : ''}\n\t\t\t\t\t${json.warn !== undefined ? `warn=\"${json.warn}\"` : ''}\n\t\t\t\t\t${json.hideLabel !== undefined ? `hideLabel=\"${json.hideLabel}\"` : ''}\n\t\t\t\t\t${json.hideSteppers !== undefined ? `hideSteppers=\"${json.hideSteppers}\"` : ''}\n\t\t\t\t\t${json.disabled !== undefined ? `disabled=\"${json.disabled}\"` : ''}\n\t\t\t\t\t${json.readOnly !== undefined ? `readOnly=\"${json.readOnly}\"` : ''}\n\t\t\t\t\t${json.invalid !== undefined ? `invalid=\"${json.invalid}\"` : ''}\n\t\t\t\t\t${json.invalidText !== undefined ? `invalidText=\"${json.invalidText}\"` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${json.allowEmpty !== undefined ? `allowEmpty=\"${json.allowEmpty}\"` : ''}\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tRow,\n\tCheckbox\n} from 'carbon-components-react';\nimport { Add32 } from '@carbon/icons-react';\nimport { AComponent } from './a-component';\nimport { getParentComponent, updatedState } from '../components';\nimport { css, cx } from 'emotion';\nimport { useFragment } from '../context';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nexport const ARowStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-left: calc(50% - 10px);\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n`;\n\nconst addStyleTop = cx(addStyle, css`\n\ttop: -20px;\n`);\n\nconst addStyleBottom = cx(addStyle, css`\n\tbottom: -20px;\n\tz-index: 1;\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const ARow = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addRow = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 1' }]},\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 2' }]}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<AComponent componentObj={componentObj} selected={selected} {...rest}>\n\t\t\t<Row\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcss`position: relative`\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t<span className={cx(addStyleTop, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow();\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t<span className={cx(addStyleBottom, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow(1);\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ARow,\n\tstyleUI: ARowStyleUI,\n\tkeywords: ['grid', 'row'],\n\tname: 'Row',\n\thideFromElementsPane: true,\n\tdefaultComponentObj: undefined,\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t},\n\t\treact: {\n\t\t\timports: ['Row'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tTag,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/tag.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const ATagStyleUI = ({selectedComponent, setComponent}: any) => {\n\tconst typeItems = [\n\t\t{id: 'gray', text: 'Gray'},\n\t\t{id: 'red', text: 'Red'},\n\t\t{id: 'magenta', text: 'Magenta'},\n\t\t{id: 'purple', text: 'Purple'},\n\t\t{id: 'blue', text: 'Blue'},\n\t\t{id: 'cyan', text: 'Cyan'},\n\t\t{id: 'teal', text: 'Teal'},\n\t\t{id: 'green', text: 'Green'},\n\t\t{id: 'cool-gray', text: 'Cool gray'},\n\t\t{id: 'warm-gray', text: 'Warm gray'},\n\t\t{id: 'high-contrast', text: 'High contrast'},\n\t\t{id: 'outline', text: 'Outline'},\n\t];\n\n\tconst sizeItems = [\n\t\t{id: 'md', text: 'Medium'},\n\t\t{id: 'sm', text: 'Small'}\n\t];\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.title}\n\t\t\tlabelText='Title'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<Dropdown\n\t\t\tlabel='Type'\n\t\t\ttitleText='Type'\n\t\t\titems={typeItems}\n\t\t\tinitialSelectedItem={typeItems.find(item => item.id === selectedComponent.kind)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tkind: event.selectedItem.id\n\t\t\t})}\n\t\t/>\n\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t\t})}\n\t\t/>\n\n\t\t<Checkbox\n\t\t\tlabelText='Is filter'\n\t\t\tid='filter'\n\t\t\tchecked={selectedComponent.filter}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tfilter: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const ATag = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Tag\n\t\t\ttype={componentObj.kind}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tsize={componentObj.size}\n\t\t\tfilter={componentObj.filter}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Tag>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATag,\n\tstyleUI: ATagStyleUI,\n\trender: ({ componentObj, select, remove, selected }) => <ATag\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.title}\n\t</ATag>,\n\tkeywords: ['tag'],\n\tname: 'Tag',\n\tdefaultComponentObj: {\n\t\ttype: 'tag',\n\t\t// This field is `type` in the `Tag` component\n\t\tkind: 'gray',\n\t\tsize: 'md',\n\t\tfilter: false,\n\t\tdisabled: false,\n\t\ttitle: 'Tag'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Title = \"${json.title}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Type = \"${json.kind}\";`,\n\t\t\toutputs: ({json}) => `${json.filter\n\t\t\t\t? `@Output() ${nameStringToVariableString(json.codeContext?.name)}Close = new EventEmitter();`\n\t\t\t\t: ''\n\t\t\t}`,\n\t\t\timports: ['TagModule'],\n\t\t\t// NOTE: Angular tag does not support 'disabled' yet. Filtered tag is able to take in 'disabled' as an input\n\t\t\t// but it doesn't do anything.\n\t\t\t// Issue is being tracked here: https://github.com/IBM/carbon-components-angular/issues/2061\n\t\t\tcode: ({json}) => {\n\t\t\t\tconst defaultProps = `\n\t\t\t\t\t[type]=\"${nameStringToVariableString(json.codeContext?.name)}Type\"\n\t\t\t\t\t[title]=\"${nameStringToVariableString(json.codeContext?.name)}Title\"\n\t\t\t\t\t${`size='${json.size ? json.size : \"md\"}'`}\n\t\t\t\t`\n\t\t\t\tif (json.filter) {\n\t\t\t\t\treturn `<ibm-tag-filter\n\t\t\t\t\t\t${defaultProps}\n\t\t\t\t\t\t(close)='${nameStringToVariableString(json.codeContext?.name)}Close.emit()'\n\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t[disabled]='${json.disabled}'>\n\t\t\t\t\t\t\t${json.title}\n\t\t\t\t\t</ibm-tag-filter>\n\t\t\t\t\t`;\n\t\t\t\t}\n\n\t\t\t\treturn `<ibm-tag\n\t\t\t\t\t${defaultProps}\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.title}\n\t\t\t\t</ibm-tag>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Tag'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Tag\n\t\t\t\t\t${json.kind && ` type=\"${json.kind}\"`}\n\t\t\t\t\t${`size='${json.size ? json.size : \"md\"}'`}\n\t\t\t\t\tdisabled={${json.disabled}}\n\t\t\t\t\tfilter={${json.filter}}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.title}\n\t\t\t\t</Tag>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput, Dropdown, Search } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/search.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ASearchInputStyleUI = ({selectedComponent, setComponent}: any) => {\n\tconst sizeItems = [\n\t\t{id: 'sm', text: 'Small'},\n\t\t{id: 'lg', text: 'Large'},\n\t\t{id: 'xl', text: 'Extra large'}\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.inputSize)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinputSize: event.selectedItem.id\n\t\t})}/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.defaultValue}\n\t\t\tlabelText='Default value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultValue: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const ASearchInputCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ASearchInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<Search\n\t\t\t\tsize={componentObj.inputSize}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ASearchInput,\n\tstyleUI: ASearchInputStyleUI,\n\tcodeUI: ASearchInputCodeUI,\n\tkeywords: ['search', 'search input'],\n\tname: 'Search',\n\tdefaultComponentObj: {\n\t\ttype: 'search',\n\t\tlabel: 'Search',\n\t\tplaceholder: 'Search',\n\t\tinputSize: 'lg'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => ``,\n\t\t\toutputs: ({json}) => ``,\n\t\t\timports: ['SearchModule'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<ibm-search\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\">\n\t\t\t\t</ibm-search>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Search'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<Search\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const AText = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t{...rest}>\n\t\t\t{children}\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AText,\n\tstyleUI: ATextStyleUI,\n\trender: ({componentObj, select, remove, selected}) => <AText\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</AText>,\n\tkeywords: ['text'],\n\tname: 'Text',\n\tdefaultComponentObj: {\n\t\ttype: 'text',\n\t\ttext: 'Text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => ``,\n\t\t\toutputs: ({json}) => ``,\n\t\t\timports: [],\n\t\t\tcode: ({json}) => {\n\t\t\t\tif (json.cssClasses) {\n\t\t\t\t\treturn `<span ${angularClassNamesFromComponentObj(json)}>${json.text}</span>`;\n\t\t\t\t}\n\t\t\t\treturn json.text;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\tcode: ({json}) => {\n\t\t\t\tif (json.cssClasses) {\n\t\t\t\t\treturn `<span ${reactClassNamesFromComponentObj(json)}>${json.text}</span>`;\n\t\t\t\t}\n\t\t\t\treturn json.text;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextArea, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text-area.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextAreaStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\n\nexport const ATextAreaCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ATextArea = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<TextArea\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATextArea,\n\tstyleUI: ATextAreaStyleUI,\n\tcodeUI: ATextAreaCodeUI,\n\tkeywords: ['textarea', 'text area', 'input'],\n\tname: 'Text area',\n\tdefaultComponentObj: {\n\t\ttype: 'textarea',\n\t\tlabel: 'Text area label',\n\t\tplaceholder: 'Text area placeholder',\n\t\thelperText: 'Helper text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => ``,\n\t\t\toutputs: ({json}) => ``,\n\t\t\timports: ['InputModule'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<ibm-label\n\t\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t\t${json.label}\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tibmTextArea\n\t\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\t\tplaceholder=\"${json.placeholder}\"></textarea>\n\t\t\t\t</ibm-label>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TextArea'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<TextArea\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput, Dropdown } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text-input.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextInputStyleUI = ({selectedComponent, setComponent}: any) => {\n\tconst typeItems = [\n\t\t{id: 'text', text: 'Text'},\n\t\t{id: 'email', text: 'Email'},\n\t\t{id: 'password', text: 'Password'}\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Type'\n\t\t\ttitleText='Type'\n\t\t\titems={typeItems}\n\t\t\tinitialSelectedItem={typeItems.find(item => item.id === selectedComponent.inputType)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinputType: event.selectedItem.id\n\t\t})}/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.defaultValue}\n\t\t\tlabelText='Default value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultValue: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const ATextInputCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ATextInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<TextInput\n\t\t\t\ttype={componentObj.inputType}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATextInput,\n\tstyleUI: ATextInputStyleUI,\n\tcodeUI: ATextInputCodeUI,\n\tkeywords: ['text', 'text', 'input'],\n\tname: 'Text input',\n\tdefaultComponentObj: {\n\t\ttype: 'textinput',\n\t\tlabel: 'Text input label',\n\t\tplaceholder: 'Text input placeholder',\n\t\thelperText: 'Helper text',\n\t\tinputType: 'text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => ``,\n\t\t\toutputs: ({json}) => ``,\n\t\t\timports: ['InputModule'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<ibm-label\n\t\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t\t${json.label}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tibmText\n\t\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\t\tplaceholder=\"${json.placeholder}\">\n\t\t\t\t</ibm-label>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TextInput'],\n\t\t\tcode: ({json}) => {\n\t\t\t\treturn `<TextInput\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Link, Checkbox, TextInput } from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/link.svg';\nimport { \n\tangularClassNamesFromComponentObj, \n\tnameStringToVariableString, \n\treactClassNamesFromComponentObj \n} from '../utils/fragment-tools';\n\nexport const ALinkStyleUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disable-label'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Inline'\n\t\t\tid='Inline-select'\n\t\t\tchecked={selectedComponent.inline}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tinline: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>\n};\n\nexport const ALinkCodeUI = ({selectedComponent, setComponent}: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.href || ''}\n\t\t\tlabelText='href'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\thref: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>\n};\n\nexport const ALink = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Link\n\t\t\tinline={componentObj.inline}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Link>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ALink,\n\tstyleUI: ALinkStyleUI,\n\tcodeUI: ALinkCodeUI,\n\trender: ({ componentObj, select, remove, selected }) => <ALink\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</ALink>,\n\tkeywords: ['link'],\n\tname: 'Link',\n\tdefaultComponentObj: {\n\t\ttype: 'link',\n\t\ttext: 'Link',\n\t\tinline: false,\n\t\tdisabled: false,\n\t\tcodeContext: { \n\t\t\thref: '#'\n\t\t}\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({json}) => `\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Inline = ${json.inline};\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled};\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Href = '${json.codeContext?.href}'`,\n\t\t\toutputs: ({json}) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Clicked = new EventEmitter();`,\n\t\t\timports: ['LinkModule'],\n\t\t\tcode: ({json }) => {\n\t\t\t\treturn `<a\n\t\t\t\t\tibmLink\n\t\t\t\t\t[inline]=\"${nameStringToVariableString(json.codeContext?.name)}Inline\"\n\t\t\t\t\t[disabled]=\"${nameStringToVariableString(json.codeContext?.name)}Disabled\"\n\t\t\t\t\t[href]=\"${nameStringToVariableString(json.codeContext?.name)}Href\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.text}\n\t\t\t\t</a>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Link'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Link\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${json.inline !== undefined ? `inline={${json.inline}}` : ''}\n\t\t\t\t\t${json.codeContext?.href !== undefined && json.codeContext?.href !== '' ? `href='${json.codeContext?.href}'` : ''}\n\t\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.text}\n\t\t\t\t</Link>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","// Accordion\nimport * as accordion from './accordion/a-accordion';\nimport * as accordionitem from './accordion/a-accordion-item';\nimport * as button from './a-button';\nimport * as checkbox from './a-checkbox';\nimport * as column from './a-column';\nimport * as fragment from './a-fragment';\nimport * as grid from './a-grid';\nimport * as numberinput from './a-numberinput';\nimport * as row from './a-row';\nimport * as tag from \"./a-tag\"\nimport * as searchinput from './a-searchinput';\nimport * as text from './a-text';\nimport * as textarea from './a-textarea';\nimport * as textinput from './a-textinput';\nimport * as link from './a-link';\n\n// Accordion\nexport { AAccordion, AAccordionStyleUI } from './accordion/a-accordion';\nexport { AAccordionItem, AAccordionItemStyleUI } from './accordion/a-accordion-item';\nexport { AButton, AButtonStyleUI } from './a-button';\nexport { ACheckbox, ACheckboxStyleUI, ACheckboxCodeUI } from './a-checkbox';\nexport { AColumn, AColumnStyleUI } from './a-column';\nexport * from './a-component';\nexport { AFragment, AFragmentStyleUI, AFragmentCodeUI } from './a-fragment';\nexport { AGrid, AGridStyleUI } from './a-grid';\nexport { ARow, ARowStyleUI } from './a-row';\nexport { ATag, ATagStyleUI } from './a-tag';\nexport { AText, ATextStyleUI } from './a-text';\nexport { ATextArea, ATextAreaStyleUI, ATextAreaCodeUI } from './a-textarea';\nexport { ATextInput, ATextInputStyleUI, ATextInputCodeUI } from './a-textinput';\nexport { ASearchInput, ASearchInputStyleUI, ASearchInputCodeUI } from './a-searchinput';\nexport { ANumberInput, ANumberInputStyleUI, ANumberInputCodeUI } from './a-numberinput';\nexport { ALink, ALinkStyleUI, ALinkCodeUI } from './a-link';\n\nexport const allComponents = {\n\taccordion,\n\taccordionitem,\n\tbutton,\n\tcheckbox,\n\tcolumn,\n\tfragment,\n\tgrid,\n\trow,\n\ttag,\n\ttext,\n\ttextarea,\n\ttextinput,\n\tsearchinput,\n\tnumberinput,\n\tlink\n};\n","import React from 'react';\nimport { Add16 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { componentHeaderZIndex } from '../fragment-components';\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-top: -2px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: ${componentHeaderZIndex + 1};\n`;\n\nconst addStyleTop = cx(addStyle, css`\n\tmargin-top: -18px;\n`);\n\nconst addStyleRight = cx(addStyle, css`\n\tright: 0;\n\tmargin-right: -21px;\n`);\n\nconst addStyleLeft = cx(addStyle, css`\n\tleft: 0;\n\tmargin-left: -21px;\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer;\n`;\n\nexport const Adder = ({\n\tactive,\n\tchildren,\n\ttopAction,\n\tbottomAction,\n\tleftAction,\n\trightAction,\n\taddButtonsCss\n}: any) => <>\n\t{\n\t\tactive && topAction && <span className={cx(addStyleTop, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\ttopAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{\n\t\tactive && leftAction && <span className={cx(addStyleLeft, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tleftAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{\n\t\tactive && rightAction && <span className={cx(addStyleRight, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\trightAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{children}\n\t{\n\t\tactive && bottomAction && <span className={cx(addStyle, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tbottomAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n</>;\n","import React from 'react';\nimport {\n\tHeaderMenuButton,\n\tHeaderName,\n\tHeader as ShellHeader\n} from 'carbon-components-react/lib/components/UIShell';\nimport { css } from 'emotion';\nimport { useHistory } from 'react-router-dom';\n\nexport const Header = ({ isSideNavExpanded, setIsSideNavExpanded }: any) => {\n\tconst history = useHistory();\n\n\tconst headerName = css`\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<ShellHeader aria-label=\"IBM Carbon Components Builder\" role='banner' tabIndex={0}>\n\t\t\t<HeaderMenuButton\n\t\t\t\taria-label={`${isSideNavExpanded ? 'Close menu' : 'Open menu'}`}\n\t\t\t\tisActive={isSideNavExpanded}\n\t\t\t\tonClick={() => setIsSideNavExpanded(!isSideNavExpanded)} />\n\t\t\t<HeaderName\n\t\t\t\tprefix=\"IBM\"\n\t\t\t\ttabIndex={0}\n\t\t\t\ttitle='Carbon Components Builder home'\n\t\t\t\tclassName={headerName}\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t\tonKeyDown={(event: any) => event.key === 'Enter' && history.push('/')}>\n\t\t\t\tCarbon Components Builder {process.env.NODE_ENV === 'development' ? 'Dev' : ''}\n\t\t\t</HeaderName>\n\t\t</ShellHeader>\n\t);\n};\n","import React, {\n\tComponent,\n\tComponentPropsWithRef,\n\tforwardRef\n} from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { HeaderMenuItem } from 'carbon-components-react/lib/components/UIShell';\n\ninterface HeaderMenuItemLinkInterface extends RouteComponentProps, ComponentPropsWithRef<any> { }\n\nclass HeaderMenuItemLinkBase extends Component<HeaderMenuItemLinkInterface> {\n\trender() {\n\t\tconst {\n\t\t\thistory,\n\t\t\tto,\n\t\t\tstaticContext,\n\t\t\t...rest\n\t\t} = this.props as any;\n\t\treturn (\n\t\t\t<HeaderMenuItem\n\t\t\t\tonClick={() => history.push(to)}\n\t\t\t\tonKeyDown={(event: any) => {if (event.key === 'Enter') history.push(to);}}\n\t\t\t\t{...rest} />\n\t\t);\n\t}\n}\n\nexport const HeaderMenuItemLinkRouter = withRouter(HeaderMenuItemLinkBase);\n\nexport const HeaderMenuItemLink = forwardRef<HTMLElement, HeaderMenuItemLinkInterface>(\n\t(props, ref) => <HeaderMenuItemLinkRouter {...props} />\n);\n\n// explicitly set display name\nHeaderMenuItemLink.displayName = 'HeaderMenuItemLink';\n","import React, { createContext, useReducer } from 'react';\n\nconst ModalContext: React.Context<any> = createContext({});\n\nModalContext.displayName = 'ModalContext';\n\nexport enum ModalActionType {\n\tsetDuplicationModal,\n\tsetDeletionModal,\n\tsetShareModal,\n\tsetSettingsModal,\n\tsetExportModal,\n\tcloseModal\n}\n\nexport enum ModalType {\n\tDUPLICATION,\n\tDELETION,\n\tSHARING,\n\tSETTINGS,\n\tEXPORT\n}\n\nexport type ModalAction = BaseModalAction\n\nexport interface BaseModalAction {\n\ttype: ModalActionType,\n\tid: string\n}\n\nexport interface ModalState {\n\tShowModal: boolean,\n\tModalType: any,\n\tFragmentID: string\n}\n\nconst initialState = {\n\tShowModal: false,\n\tModalType: null,\n\tFragmentID: ''\n};\n\nconst modalReducer = (state: ModalState, action: BaseModalAction) => {\n\tswitch(action.type) {\n\t\tcase ModalActionType.setDuplicationModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DUPLICATION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setDeletionModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DELETION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setShareModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.SHARING,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setSettingsModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.SETTINGS,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setExportModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.EXPORT,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.closeModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst ModalContextProvider = ({ children }: any) => {\n\tconst modal = useReducer(modalReducer, initialState);\n\n\treturn (\n\t\t<ModalContext.Provider value={modal}>\n\t\t\t{children}\n\t\t</ModalContext.Provider>\n\t);\n};\n\nexport {\n\tModalContext,\n\tModalContextProvider\n};\n","import React from 'react';\nimport { Button } from 'carbon-components-react';\nimport { withRouter } from 'react-router-dom';\n\nexport const LinkButton = withRouter((props: any) => {\n\tconst {\n\t\thistory,\n\t\tto,\n\t\tstaticContext,\n\t\t...rest\n\t} = props;\n\treturn <Button onClick={() => history.push(to)} {...rest} />;\n});\n","import { css, cx } from 'emotion';\n\nexport const main = cx(\n\t'bx--content',\n\t'bx--grid',\n\tcss`\n\t\tpadding-top: 0;\n\t\tbackground: #f4f4f4;\n\t\tmin-height: 100vh;\n\t\tmax-width: unset;\n`);\n\nexport const marginTop = (margin = '1rem') => css`margin-top: ${margin};`;\n","import React from 'react';\nimport { main } from '../styles';\n\nexport const Main = ({ ...props }) => (\n\t<main className={main} {...props}/>\n);\n","import React, { useContext } from 'react';\nimport { SkeletonPlaceholder } from 'carbon-components-react';\nimport './fragment-preview.scss';\nimport { css, cx } from 'emotion';\nimport { allComponents, ComponentInfoRenderProps } from '../fragment-components';\nimport { getAllFragmentStyleClasses } from '../utils/fragment-tools';\nimport { GlobalStateContext } from '../context';\n\nconst canvas = css`\n\tborder: 2px solid #d8d8d8;\n\tbackground-color: white;\n\tposition: relative;\n`;\n\nconst allowDrop = (event: any) => {\n\tevent.preventDefault();\n}\n\nlet componentCounter = 2; // actually initialized (again) in Fragment\n\nexport const getComponentById = (componentObj: any, id: number) => {\n\tif (!componentObj || !id) {\n\t\treturn undefined;\n\t}\n\n\tif (componentObj.id === id) {\n\t\treturn componentObj;\n\t}\n\n\tif (componentObj.items) {\n\t\tfor (let i = 0; i < componentObj.items.length; i++) {\n\t\t\tconst component: any = getComponentById(componentObj.items[i], id);\n\t\t\tif (component) {\n\t\t\t\treturn component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\nexport const getSelectedComponent = (fragment: any) => {\n\tif (!fragment) {\n\t\treturn undefined;\n\t}\n\n\treturn getComponentById(fragment.data, fragment.selectedComponentId)\n};\n\nexport const getHighestId = (componentObj: any) => {\n\tif (!componentObj) {\n\t\treturn 0;\n\t}\n\n\tif (!componentObj.items || !componentObj.items.length) {\n\t\treturn componentObj.id || 0;\n\t}\n\n\treturn Math.max(...componentObj.items.map((item: any) => getHighestId(item)), (componentObj.id || 0));\n};\n\nexport const stateWithoutComponent = (state: any, componentId: number) => {\n\tif (state.items) {\n\t\tconst componentIndex = state.items.findIndex((component: any) => component.id === componentId);\n\t\tif (componentIndex >= 0) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: [...state.items.slice(0, componentIndex), ...state.items.slice(componentIndex + 1)]\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...state,\n\t\t\titems: state.items.map((item: any) => stateWithoutComponent(item, componentId))\n\t\t}\n\t}\n\n\treturn { ...state };\n};\n\nexport const initializeIds = (componentObj: any) => {\n\tconst id = componentObj.id || componentCounter++;\n\t// name is used in form items and for angular inputs and outputs variable names\n\tconst name = componentObj.codeContext?.name || `${componentObj.type}-${id}`;\n\n\treturn {\n\t\t...componentObj,\n\t\tid,\n\t\titems: componentObj.items ? componentObj.items.map((co: any) => initializeIds(co)) : undefined,\n\t\tcodeContext: {\n\t\t\t...componentObj.codeContext,\n\t\t\tname\n\t\t}\n\t};\n}\n\nconst updatedList = (list: any[], item: any, dropInIndex?: number) => {\n\tif (dropInIndex === undefined) {\n\t\treturn [...list, item];\n\t}\n\n\treturn [...list.slice(0, dropInIndex), item, ...list.slice(dropInIndex)];\n};\n\nexport const updatedState = (state: any, dragObj: any, dropInId?: number, dropInIndex?: number) => {\n\tif (!state) { // NOTE is this needed?\n\t\treturn;\n\t}\n\n\t// give unique ids to newly dropped components\n\tdragObj.component = initializeIds(dragObj.component);\n\n\t// only update\n\tif (dragObj.type === 'update') {\n\t\tif (state.id && state.id === dragObj.component.id) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...dragObj.component\n\t\t\t}\n\t\t}\n\t\tif (state.items) {\n\t\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t\t}\n\n\t\treturn { ...state };\n\t}\n\n\tif (dragObj.type === 'move') {\n\t\tstate = stateWithoutComponent(state, dragObj.component.id);\n\t\tdragObj.type = 'insert'\n\t}\n\n\n\tif (state.items) {\n\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t}\n\n\tif (!dropInId) {\n\t\treturn state.items && !state.type ? {\n\t\t\t...state,\n\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t\t} : { ...state };\n\t}\n///////////// TODO NOTE clean the container items with 1 item //////////////\n\tif (state.id && state.id === dropInId) {\n\t\t// add data into state\n\t\tif (state.items) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex),\n\t\t\t\tid: state.id\n\t\t\t}\n\t\t}\n\n\t\t// convert into a list of components, move current component into list\n\t\treturn {\n\t\t\t// TODO should this be a `type: container`?\n\t\t\tid: componentCounter++,\n\t\t\titems: updatedList([{...state}], dragObj.component, dropInIndex)\n\t\t}\n\t}\n\n\tif (dropInId) { // probably don't wanna add it here since it didn't match anything and it should somewhere\n\t\treturn { ...state };\n\t}\n\n\treturn state.items ? {\n\t\t...state,\n\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t} : { ...state };\n}\n\nexport const getParentComponent = (state: any, child: any) => {\n\tif (state && state.items) {\n\t\tif (state.items.includes(child)) {\n\t\t\treturn state;\n\t\t}\n\t\tfor (let i = 0; i < state.items.length; i++) {\n\t\t\tconst component = state.items[i];\n\t\t\tconst parent: any = getParentComponent(component, child);\n\t\t\tif (parent) {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport const Fragment = ({fragment, setFragment}: any) => {\n\tconst globalState = useContext(GlobalStateContext);\n\n\tif (!fragment || !fragment.data) { return <SkeletonPlaceholder />; }\n\n\tconst { fragments } = globalState || {};\n\n\t// initialize component counter\n\tcomponentCounter = getHighestId(fragment.data) + 1;\n\n\tconst drop = (event: any, dropInId?: number) => {\n\t\tevent.preventDefault();\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData(\"drag-object\"));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, dragObj, dropInId)\n\t\t});\n\t}\n\n\tconst select = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: componentObj.id\n\t\t}, true);\n\t};\n\n\tconst remove = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: stateWithoutComponent(fragment.data, componentObj.id)\n\t\t});\n\t};\n\n\tconst renderComponents = (componentObj: any): any => {\n\t\tif (typeof componentObj === 'string' || !componentObj) {\n\t\t\treturn componentObj;\n\t\t}\n\n\t\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\t\tif (componentObj.type === key) {\n\t\t\t\tif (component.componentInfo.render) {\n\t\t\t\t\treturn component.componentInfo.render({\n\t\t\t\t\t\tcomponentObj,\n\t\t\t\t\t\tselect: () => select(componentObj),\n\t\t\t\t\t\tremove: () => remove(componentObj),\n\t\t\t\t\t\tselected: fragment.selectedComponentId === componentObj.id,\n\t\t\t\t\t\tonDragOver: allowDrop,\n\t\t\t\t\t\tonDrop: (event: any) => { event.stopPropagation(); drop(event, componentObj.id); },\n\t\t\t\t\t\trenderComponents\n\t\t\t\t\t} as ComponentInfoRenderProps);\n\t\t\t\t}\n\t\t\t\treturn <component.componentInfo.component\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}>\n\t\t\t\t\t\t{componentObj.items && componentObj.items.map((row: any) => renderComponents(row))}\n\t\t\t\t</component.componentInfo.component>\n\t\t\t}\n\t\t}\n\n\t\tif (componentObj.items) {\n\t\t\treturn componentObj.items.map((item: any) => renderComponents(item));\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst styles = css`\n\t\t${\n\t\t\tgetAllFragmentStyleClasses(fragment, fragments).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t\t${styleClass.content}\n\t\t\t}`)\n\t\t}\n\t`;\n\t// TODO add fragment.width and fragment.height to database\n\treturn (\n\t\t<div\n\t\tclassName={cx(\n\t\t\tcanvas,\n\t\t\tstyles,\n\t\t\tcss`width: ${fragment.width || '800px'}; height: ${fragment.height || '600px'}`\n\t\t)}\n\t\tonDragOver={allowDrop}\n\t\tonDrop={(event: any) => { drop(event, fragment.data.id) }}>\n\t\t\t<div className={`${fragment.cssClasses ? fragment.cssClasses.map((cc: any) => cc.id).join(' ') : ''}`}>\n\t\t\t\t{renderComponents(fragment.data)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","// TODO: Delete this when the carbon grid components are actually available\nimport React, { PropsWithChildren } from 'react';\nimport { cx } from 'emotion';\n\nexport type RowProps = PropsWithChildren<{\n\tstyles?: any\n}>;\n\nexport const Row = ({ styles, children }: RowProps) => (\n\t<div className={cx('bx--row', styles)}>{children}</div>\n);\n\nexport interface ColDefinition {\n\tsm?: number;\n\tmd?: number;\n\tlg?: number;\n}\n\nexport type ColProps = PropsWithChildren<{\n\tcols?: ColDefinition,\n\trender?: (props: PropsWithChildren<any>) => JSX.Element\n}>;\n\nexport const Col = ({ cols, render, children }: ColProps) => {\n\tconst baseRender = render ?? ((props) => <div {...props} />);\n\tconst classes = cx({\n\t\t[`bx--col-sm-${cols?.sm}`]: !!cols?.sm ?? false,\n\t\t[`bx--col-md-${cols?.md}`]: !!cols?.md ?? false,\n\t\t[`bx--col-lg-${cols?.lg}`]: !!cols?.lg ?? false,\n\t\t'bx--col': !!cols\n\t});\n\treturn baseRender({\n\t\tclassName: classes,\n\t\tchildren\n\t});\n};\n","import React, { useContext } from 'react';\nimport { InlineNotification, NotificationActionButton } from 'carbon-components-react';\nimport {\n\tNotificationContext,\n\tNotificationActionType,\n\tNotificationData\n} from '../context/notification-context';\nimport { css } from 'emotion';\n\nconst notificationStyle = { minWidth: '30rem' };\n\nconst notificationAreaStyle = css`\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tposition: absolute;\n\tz-index: 2;\n\tmin-width: 30rem;\n\ttop: 2rem;\n`;\n\nexport const Notification = () => {\n\tconst [state, dispatch] = useContext(NotificationContext);\n\treturn (\n\t\t<div className={notificationAreaStyle} role=\"alert\">\n\t\t\t{state.notifications.map((notification: NotificationData, index: number) => (\n\t\t\t\t<InlineNotification\n\t\t\t\t\tlowContrast\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\tkind={notification.kind}\n\t\t\t\t\ttitle={notification.title}\n\t\t\t\t\tsubtitle={notification.message}\n\t\t\t\t\tcaption={null}\n\t\t\t\t\tkey={notification.id}\n\t\t\t\t\tonCloseButtonClick={() => {\n\t\t\t\t\t\tif (notification.action) {\n\t\t\t\t\t\t\tnotification.action.onNotificationClose();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={notificationStyle}\n\t\t\t\t\tactions={notification.action\n\t\t\t\t\t\t? <NotificationActionButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnotification.action.actionFunction();\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{notification.action.actionText}\n\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t: undefined}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React, { useState, useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { Image32, Code32 } from '@carbon/icons-react';\n\nimport { css } from 'emotion';\nimport {\n\tModalActionType,\n\tModalContext\n} from '../../../context/modal-context';\nimport { ExportCode } from './exports/export-code-modal';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { ExportImageModal } from './exports/export-image-modal';\n\n\nconst exportOptionTileWrapper = css`\n\twidth: 50%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tp {\n\t\t\tposition: absolute;\n\t\t\tbottom: 15px;\n\t\t}\n\t}\n`;\n\nconst exportOptionsWrapper = css`\n\tdisplay: flex;\n\tdiv:first-child {\n\t\tmargin-right: 20px;\n\t}\n`;\n\nexport enum ShareOptionsModals {\n\tSHARE_OPTIONS,\n\tCODE_EXPORTS,\n\tIMAGE_EXPORTS\n}\n\nenum Exports {\n\tCODE,\n\tIMAGE\n}\n\ninterface ShareOptionsModalState {\n\tselectedExportOption: Exports | null\n}\n\nexport const ShareOptionsModal = ({ fragment }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<ShareOptionsModals | null>(ShareOptionsModals.SHARE_OPTIONS);\n\n\t// This contains all the states that control the share options modal.\n\tconst [shareOptionsState, setShareOptionsState] = useState<ShareOptionsModalState>({\n\t\tselectedExportOption: null\n\t});\n\n\tconst handleExportSelection = () => {\n\t\tif (shareOptionsState.selectedExportOption === Exports.CODE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.CODE_EXPORTS);\n\t\t} else if (shareOptionsState.selectedExportOption === Exports.IMAGE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.IMAGE_EXPORTS);\n\t\t}\n\t};\n\n\tconst shareModalSwitcher = () => {\n\t\tswitch (displayedModal) {\n\t\t\tcase ShareOptionsModals.SHARE_OPTIONS:\n\t\t\t\treturn (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\thasForm\n\t\t\t\t\t\tonRequestSubmit={handleExportSelection}\n\t\t\t\t\t\topen={modalState.ShowModal && displayedModal === ShareOptionsModals.SHARE_OPTIONS}\n\t\t\t\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\t\t\t\tprimaryButtonText='Done'\n\t\t\t\t\t\tprimaryButtonDisabled={ shareOptionsState.selectedExportOption === null }\n\t\t\t\t\t\tsecondaryButtonText='Cancel'\n\t\t\t\t\t\tmodalHeading={`Share '${fragment.title}'`}>\n\t\t\t\t\t\t<div className={exportOptionsWrapper}>\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.CODE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Code32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.CODE}\n\t\t\t\t\t\t\t\tlabel='Code' />\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.IMAGE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Image32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.IMAGE}\n\t\t\t\t\t\t\t\tlabel='Image' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal>\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.CODE_EXPORTS:\n\t\t\t\treturn (\n\t\t\t\t\t<ExportCode\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal} />\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.IMAGE_EXPORTS:\n\t\t\tdefault:\n\t\t\t\treturn <ExportImageModal\n\t\t\t\t\tfragment={fragment}\n\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\tsetDisplayedModal={setDisplayedModal}/>;\n\t\t}\n\t};\n\n\treturn shareModalSwitcher();\n};\n","import LZString from 'lz-string';\n\nexport const createFragmentSandbox = (fragmentTemplate: any) => {\n\tconst files: Record<string, any> = {};\n\n\tObject.keys(fragmentTemplate)\n\t\t.forEach((filePath: string) => files[filePath] = { content: fragmentTemplate[filePath] });\n\n\treturn LZString.compressToBase64(JSON.stringify({ files }))\n\t\t.replace(/\\+/g, `-`) // '+' -> '-'\n\t\t.replace(/\\//g, `_`) // '/' -> '_'\n\t\t.replace(/=+$/, ``); // Remove ending '='\n};\n","import { sortedUniq } from 'lodash';\nimport { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserCss from 'prettier/parser-postcss';\nimport { allComponents } from '../../../../../fragment-components';\nimport { classNameFromFragment, getAllFragmentStyleClasses, hasFragmentStyleClasses, tagNameFromFragment } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst formatOptions: Options = {\n\tplugins: [parserBabel],\n\ttrailingComma: 'none',\n\tuseTabs: true\n};\n\nconst formatOptionsCss: Options = {\n\tparser: 'css',\n\tplugins: [parserCss]\n};\n\nconst addIfNotExist = (arr: any[], items: any[]) => {\n    items.forEach(item => {\n        if (!arr.includes(item)) {\n            arr.push(item);\n        }\n    });\n    return arr;\n}\n\nconst jsonToCarbonImports = (json: any) => {\n    const imports: any[] = [];\n\n\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\tif (json.type === key) {\n\t\t\taddIfNotExist(imports, component.componentInfo.codeExport.react.imports);\n\t\t}\n\t}\n\n\tif (json.items) {\n        json.items.forEach((item: any) => {\n            addIfNotExist(imports, jsonToCarbonImports(item));\n        });\n\t}\n\n    return imports;\n};\n\nexport const jsonToTemplate = (json: any, fragments: any[]) => {\n    if (typeof json === \"string\" || !json) {\n        return json;\n    }\n\n\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\tif (json.type === key && !component.componentInfo.codeExport.react.isNotDirectExport) {\n\t\t\treturn component.componentInfo.codeExport.react.code({json, jsonToTemplate, fragments});\n\t\t}\n\t}\n\n    if (json.items) {\n        return json.items.map((item: any) => jsonToTemplate(item, fragments)).join('\\n');\n    }\n};\n\nconst otherImportsFromComponentObj = (json: any, fragments?: any[]) => {\n\tlet imports = '';\n\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\tif (json.type === key) {\n\t\t\tif (component.componentInfo.codeExport.react.otherImports) {\n\t\t\t\timports += component.componentInfo.codeExport.react.otherImports({json, fragments});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (json.items) {\n        imports += json.items.map((item: any) => otherImportsFromComponentObj(item, fragments)).join('\\n');\n    }\n\n\t// remove duplicate imports\n\timports = sortedUniq(imports.split('\\n')).join('\\n');\n\n\treturn imports;\n}\n\nconst generateTemplate = (json: any, fragments: any[]) => {\n\tconst carbonImports = jsonToCarbonImports(json);\n\tconst carbonImportsString = carbonImports.reduce((string: string, curr: string) => (\n\t\tstring += `${curr}, `\n\t), '');\n\treturn {\n\t\timports: `import { ${carbonImportsString} } from 'carbon-components-react';\n\t\t\t${otherImportsFromComponentObj(json, fragments)}`,\n\t\ttemplate: jsonToTemplate(json, fragments)\n\t};\n};\n\nconst jsonToSharedComponents = (json: any, fragments: any[]) => {\n\tlet sharedComponents: any = {};\n\n\tif (json.type === 'fragment') {\n\t\tconst fragment = fragments.find(f => f.id === json.id);\n\t\tconst fragmentTemplate = generateTemplate(fragment.data, fragments);\n\n\t\tsharedComponents[`src/shared/${tagNameFromFragment(fragment)}.js`] = format(`import React from 'react';\n\t\t\t${fragmentTemplate.imports};\n\t\t\t${hasFragmentStyleClasses(fragment) ? `\n\t\t\t\timport './${tagNameFromFragment(fragment)}.scss';\n\t\t\t` : ''}\n\t\t\texport const ${classNameFromFragment(fragment)} = ({state, setState}) => {\n\t\t\t\tconst handleInputChange = (event) => {\n\t\t\t\t\tsetState({...state, [event.target.name]: event.target.value});\n\t\t\t\t};\n\n\t\t\t\treturn <>${fragmentTemplate.template}</>;\n\t\t\t};\n\t\t`, formatOptions);\n\n\t\tsharedComponents[`src/shared/${tagNameFromFragment(fragment)}.scss`] = format(\n\t\t\t`${getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t\t${styleClass.content}\n\t\t\t}`).join('\\n')}`,\n\t\t\tformatOptionsCss\n\t\t);\n\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...jsonToSharedComponents(fragment.data, fragments)\n\t\t}\n\t}\n\n\tjson.items?.forEach((item: any) => {\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...jsonToSharedComponents(item, fragments)\n\t\t}\n\t});\n\n\treturn sharedComponents;\n};\n\nexport const createReactApp = (fragment: any, fragments = []) => {\n\tconst fragmentTemplate = generateTemplate(fragment.data, fragments);\n\n\tconst sharedComponents = jsonToSharedComponents(fragment.data, fragments);\n\n\tconst indexHtml = `<div id='root'></div>\n`;\n\tconst componentJs\n\t\t= `import React from 'react';\n${fragmentTemplate.imports};\n${hasFragmentStyleClasses(fragment) ? \"\\nimport './component.scss';\\n\" : ''}\nexport const FragmentComponent = ({state, setState}) => {\n\tconst handleInputChange = (event) => {\n\t\tsetState({...state, [event.target.name]: event.target.value});\n\t};\n\n\treturn <>${fragmentTemplate.template}</>;\n};\n`;\n\n\tconst componentScss = getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t${styleClass.content}\n}`).join('\\n');\n\n\tconst indexJs\n\t\t= `import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'carbon-components/css/carbon-components.css';\n\nimport { FragmentComponent } from './component.js';\n\nconst App = () => {\n\tconst [state, setState] = useState({});\n\n\treturn (\n\t\t<div>\n\t\t\t<FragmentComponent state={state} setState={setState} />\n\t\t</div>\n\t);\n}\nReactDOM.render(<App />, document.getElementById('root'));\n`;\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'carbon-components': '10.50.0',\n\t\t\t'carbon-icons': '7.0.7',\n\t\t\t'@carbon/icons-react': '10.15.0',\n\t\t\t'carbon-components-react': '7.50.0',\n\t\t\treact: '16.12.0',\n\t\t\t'react-dom': '16.12.0',\n\t\t\t'react-scripts': '3.0.1',\n\t\t\t'sass': '1.45.0',\n\t\t\temotion: '10.0.27'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/index.js': format(indexJs, formatOptions),\n\t\t'src/component.js': format(componentJs, formatOptions),\n\t\t'src/component.scss': format(componentScss, formatOptionsCss),\n\t\t'package.json': packageJson,\n\t\t...sharedComponents\n\t};\n};\n","import { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserHtml from 'prettier/parser-html';\nimport parserCss from 'prettier/parser-postcss';\nimport { allComponents } from '../../../../../fragment-components';\nimport { getAllFragmentStyleClasses, hasFragmentStyleClasses } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst addIfNotExist = (arr: any[], items: string[] | undefined) => {\n    items?.forEach(item => {\n        if (!arr.includes(item)) {\n            arr.push(item);\n        }\n    });\n    return arr;\n}\n\nconst jsonToAngularImports = (json: any) => {\n    const imports: any[] = [];\n\n\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\tif (json.type === key) {\n\t\t\taddIfNotExist(imports, component.componentInfo.codeExport.angular?.imports);\n\t\t}\n\t}\n\n\tif (json.items) {\n        json.items.forEach((item: any) => {\n            addIfNotExist(imports, jsonToAngularImports(item));\n        });\n\t}\n\n    return imports;\n};\n\nconst getAngularInputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\t\tif (json.type === key) {\n\t\t\t\treturn component.componentInfo.codeExport.angular?.inputs({json}) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularInputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nconst getAngularOutputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\t\tif (json.type === key) {\n\t\t\t\treturn component.componentInfo.codeExport.angular?.outputs({json}) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularOutputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nexport const jsonToTemplate = (json: any) => {\n    if (typeof json === \"string\" || !json) {\n        return json;\n    }\n\n\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\tif (json.type === key && !component.componentInfo.codeExport.angular.isNotDirectExport) {\n\t\t\treturn component.componentInfo.codeExport.angular.code({json, jsonToTemplate});\n\t\t}\n\t}\n\n    if (json.items) {\n        return json.items.map((item: any) => jsonToTemplate(item)).join('\\n');\n    }\n};\n\n\nexport const createAngularApp = (fragment: any) => {\n\tconst formatOptionsTypescript: Options = {\n\t\tplugins: [parserBabel],\n\t\ttrailingComma: 'none',\n\t\tuseTabs: true,\n\t\tparser: 'babel-ts'\n\t};\n\tconst formatOptionsHtml: Options = {\n\t\tplugins: [parserHtml],\n\t\ttrailingComma: 'none',\n\t\tuseTabs: true,\n\t\tparser: 'html'\n\t};\n\tconst formatOptionsCss: Options = {\n\t\tparser: 'css',\n\t\tplugins: [parserCss]\n\t};\n\n\tconst appComponentHtml =\n\t\t`<app-fragment></app-fragment>\n\t\t`;\n\n\tconst appComponentTs =\n\t\t`import { Component } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-root',\n\t\t\ttemplateUrl: './app.component.html'\n\t\t})\n\t\texport class AppComponent {\n\t\t}\n\t\t`;\n\n\tconst appModule =\n\t\t`import { NgModule } from '@angular/core';\n\t\timport { BrowserModule } from '@angular/platform-browser';\n\t\timport { AppComponent } from './app.component';\n\t\timport { FragmentModule } from './components/fragment/fragment.module';\n\n\t\t@NgModule({\n\t\t\timports: [BrowserModule, FragmentModule],\n\t\t\tdeclarations: [AppComponent],\n\t\t\tbootstrap: [AppComponent]\n\t\t})\n\t\texport class AppModule {}\n\t\t`;\n\n\tconst fragmentModuleTs =\n\t\t`import { NgModule } from '@angular/core';\n\t\timport { ${jsonToAngularImports(fragment.data).join(', ')} } from 'carbon-components-angular';\n\t\timport { FragmentComponent } from './fragment.component';\n\n\t\t@NgModule({\n\t\t\timports: [${jsonToAngularImports(fragment.data).join(', ')}],\n\t\t\tdeclarations: [FragmentComponent],\n\t\t\texports: [FragmentComponent]\n\t\t})\n\t\texport class FragmentModule {}\n\t\t`;\n\n\tconst fragmentComponentTs =\n\t\t`import { Component, Input, Output, EventEmitter } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-fragment',\n\t\t\ttemplateUrl: './fragment.component.html'${hasFragmentStyleClasses(fragment) ? `,\n\t\t\tstyleUrls: ['./fragment.component.scss']` : ''}\n\t\t})\n\t\texport class FragmentComponent {\n\t\t\t${getAngularInputsFromJson(fragment.data)}\n\t\t\t${getAngularOutputsFromJson(fragment.data)}\n\t\t}`;\n\n\tconst fragmentComponentHtml = jsonToTemplate(fragment.data);\n\n\tconst fragmentComponentScss = getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t${styleClass.content}\n\t}`).join('\\n');\n\n\tconst indexHtml =\n\t\t`<!DOCTYPE html>\n\t\t<html lang='en'>\n\t\t\t<head>\n\t\t\t\t<meta charset='utf-8' />\n\t\t\t\t<title>Angular</title>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<app-root></app-root>\n\t\t\t</body>\n\t\t</html>\n\t\t`;\n\n\tconst mainTs =\n\t\t`import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\t\timport { AppModule } from './app/app.module';\n\n\t\timport \"carbon-components/css/carbon-components.min.css\";\n\n\t\tplatformBrowserDynamic()\n\t\t\t.bootstrapModule(AppModule)\n\t\t\t.catch(err => console.log(err));\n\t\t`;\n\n\tconst angularCliJson =\n`{\n\t\"apps\": [\n\t\t{\n\t\t\t\"root\": \"src\",\n\t\t\t\"outDir\": \"dist\",\n\t\t\t\"assets\": [\"assets\", \"favicon.ico\"],\n\t\t\t\"index\": \"index.html\",\n\t\t\t\"main\": \"main.ts\",\n\t\t\t\"polyfills\": \"polyfills.ts\",\n\t\t\t\"prefix\": \"app\",\n\t\t\t\"styles\": [\"styles.scss\"],\n\t\t\t\"scripts\": [],\n\t\t\t\"environmentSource\": \"environments/environment.ts\",\n\t\t\t\"environments\": {\n\t\t\t\t\"dev\": \"environments/environment.ts\",\n\t\t\t\t\"prod\": \"environments/environment.prod.ts\"\n\t\t\t}\n\t\t}\n\t]\n}\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@angular/animations': '12.2.0',\n\t\t\t'@angular/common': '12.2.0',\n\t\t\t'@angular/compiler': '12.2.0',\n\t\t\t'@angular/core': '12.2.0',\n\t\t\t'@angular/forms': '12.2.0',\n\t\t\t'@angular/platform-browser': '12.2.0',\n\t\t\t'@angular/platform-browser-dynamic': '12.2.0',\n\t\t\t'@angular/router': '12.2.0',\n\t\t\t'rxjs': '6.6.0',\n\t\t\t'tslib': '2.3.0',\n\t\t\t'sass': '1.45.0',\n\t\t\t'zone.js': '0.11.4',\n\t\t\t'carbon-components-angular': '4.56.3',\n\t\t\t'carbon-components': '10.50.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': format(indexHtml, formatOptionsHtml),\n\t\t'src/main.ts': format(mainTs, formatOptionsTypescript),\n\t\t'src/polyfills.ts': format(\"import 'zone.js/dist/zone';\", formatOptionsTypescript),\n\t\t'src/styles.scss': format('', formatOptionsCss),\n\t\t'src/app/app.component.html': format(appComponentHtml, formatOptionsHtml),\n\t\t'src/app/app.component.ts': format(appComponentTs, formatOptionsTypescript),\n\t\t'src/app/app.module.ts': format(appModule, formatOptionsTypescript),\n\t\t'src/app/components/fragment/fragment.module.ts': format(fragmentModuleTs, formatOptionsTypescript),\n\t\t'src/app/components/fragment/fragment.component.ts': format(fragmentComponentTs, formatOptionsTypescript),\n\t\t'src/app/components/fragment/fragment.component.html': format(fragmentComponentHtml, formatOptionsHtml),\n\t\t'src/app/components/fragment/fragment.component.scss': hasFragmentStyleClasses(fragment)\n\t\t\t? format(fragmentComponentScss, formatOptionsCss)\n\t\t\t: undefined,\n\t\t'.angular-cli.json': angularCliJson,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map fragment types to corresponding vanilla fragment tag.\nconst fragmentTagMap: Record<string, string> = {\n};\n\nexport const createVanillaApp = (fragment: any) => {\n\tconst fragmentData = JSON.stringify(fragment.data, null, '\\t');\n\tconst fragmentType = `${fragment.type}`;\n\n\tconst indexHtml\n= `<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Vanilla</title>\n\t\t<meta charset='UTF-8' />\n\t</head>\n\t<body>\n\t\t<div style='height: 500px; min-width: 100%;'>\n\t\t\t<div id='my-fragment'></div>\n\t\t</div>\n\t\t<script src='src/index.js'>\n\t\t</script>\n\t</body>\n</html>\n`;\n\n\tconst indexJs\n= `import '@carbon/fragments/styles.css';\nimport { ${fragmentTagMap[fragmentType]} } from '@carbon/fragments';\n// grab fragment holder DOM element\nconst fragmentHolder = document.getElementById('my-fragment');\n// initialize the fragment\nnew ${fragmentTagMap[fragmentType]}(fragmentHolder, {\n\tdata: ${fragmentData},\n});\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/fragments': '0.38.8',\n\t\t\t'carbon-components': '10.20.0',\n\t\t\t'@carbon/colors': '10.11.0',\n\t\t\td3: '5.15.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'index.html': indexHtml,\n\t\t'src/index.js': indexJs,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map fragment types to corresponding vue fragment tag.\nconst fragmentTagMap: Record<string, string> = {\n\t'simple-bar-fragment': 'ccv-simple-bar-fragment',\n\t'grouped-bar-fragment': 'ccv-grouped-bar-fragment',\n\t'stacked-bar-fragment': 'ccv-stacked-bar-Fragment',\n\t'line-fragment': 'ccv-line-fragment',\n\t'scatter-fragment': 'ccv-scatter-fragment',\n\t'pie-fragment': 'ccv-pie-fragment',\n\t'donut-fragment': 'ccv-donut-fragment',\n\tdataAndOptions: ':data=\\'data\\' :options=\\'options\\''\n};\n\nexport const createVueApp = (fragment: any) => {\n\tconst fragmentData = JSON.stringify(fragment.data, null, '\\t');\n\tconst fragmentType = `${fragment.type}`;\n\n\tconst fragmentVue\n= `<script>\n\timport Vue from 'vue';\n\timport '@carbon/fragments/styles.css';\n\timport fragmentsVue from '@carbon/fragments-vue';\n\tVue.use(fragmentsVue);\n\texport default {\n\t\tname: 'Fragment',\n\t\tcomponents: {},\n\t\tdata() {\n\t\t\treturn {\n\t\t\tdata:\n\t\t\t${fragmentData}\n\t\t};\n\t},\n\ttemplate:\n\t\t\"<${fragmentTagMap[fragmentType]} :data='data' :options='options'></${fragmentTagMap[fragmentType]}>\"\n\t};\n</script>\n`;\n\n\tconst appVue\n= `<template>\n<div id='app' style='height: 500px; min-width: 100%;'>\n<Fragment/>\n</div>\n</template>\n<script>\n\timport Fragment from './components/fragment';\n\texport default {\n\t\tname: 'App',\n\t\tcomponents: {\n\t\t\tFragment\n\t\t}\n\t};\n</script>\n`;\n\tconst mainJs\n= `import Vue from 'vue';\nimport App from './App.vue';\nVue.config.productionTip = false;\nnew Vue({\n\trender: h => h(App)\n}).$mount('#app');\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/fragments': '0.38.8',\n\t\t\t'@carbon/fragments-vue': '0.38.8',\n\t\t\t'@vue/cli-plugin-babel': '4.1.1',\n\t\t\td3: '5.15.0',\n\t\t\tvue: '2.6.11'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/components/fragment.vue': fragmentVue,\n\t\t'src/App.vue': appVue,\n\t\t'src/main.js': mainJs,\n\t\t'package.json': packageJson\n\t};\n};\n","import { extension } from 'mime-types';\n\nexport const getFullFileName = (name: string, mimeType: string) => (\n\t`${name}.${extension(mimeType)}`\n);\n\nexport const saveFile = (url: string, fileName: string) => {\n\tconst anchor = document.createElement('a');\n\tanchor.href = url;\n\tanchor.download = fileName;\n\tanchor.click();\n};\n\nexport const saveBlob = (blob: any, fileName: string) => {\n\tconst url = URL.createObjectURL(blob);\n\tsaveFile(url, fileName);\n\n\t// Give it a second to download :)\n\tsetTimeout(() => {\n\t\tURL.revokeObjectURL(url);\n\t}, 1000);\n};\n\nexport const warningNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'warning',\n\ttitle: 'Uploaded data has been modified',\n\tsubtitle: 'data did not match expected format so we modified it so you can still use it'\n};\n\nexport const errorNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'error',\n\ttitle: 'Error',\n\tsubtitle: ''\n};\n","import React, { useContext } from 'react';\n\nimport { ShareOptionsModals } from '../share-options-modal';\n\nimport { createFragmentSandbox } from './create-fragment-sandbox';\nimport { createReactApp } from './frameworks/react-fragment';\nimport { createAngularApp } from './frameworks/angular-fragment';\nimport { createVanillaApp } from './frameworks/vanilla-fragment';\nimport { createVueApp } from './frameworks/vue-fragment';\n\nimport {\n\tButton,\n\tCodeSnippet,\n\tModal,\n\tTab,\n\tTabs\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { saveBlob } from '../../../../utils/file-tools';\nimport { GlobalStateContext } from '../../../../context';\n\nconst exportCodeModalStyle = css`\n\t.bx--tabs--scrollable__nav-item {\n\t\twidth: calc(20% - 1px);\n\t}\n\n\t.bx--tab-content {\n\t\theight: calc(100% - 40px);\n\t\toverflow: auto;\n\t}\n`;\n\nconst codeSnippetWrapper = css`\n    margin-top: 20px;\n    p {\n        margin-bottom: 7px;\n    }\n`;\n\nconst titleWrapper = css`\n    display: flex;\n    margin-top: 30px;\n    a, button {\n        margin-left: auto;\n    }\n`;\n\nconst codeSnippet = css`\n    .bx--copy-btn {\n        background: white;\n    }\n`;\n\ninterface ExportCodeProps {\n    fragment: any,\n    displayedModal: ShareOptionsModals | null,\n    setDisplayedModal: (displayedModal: ShareOptionsModals | null) => void\n}\n\nexport const ExportCode = ({\n\tfragment,\n\tdisplayedModal,\n\tsetDisplayedModal\n}: ExportCodeProps) => {\n\tconst { fragments } = useContext(GlobalStateContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst jsonCode: any = JSON.stringify(fragment.data, null, 2);\n\tconst vanillaCode: any = createVanillaApp(fragment);\n\tconst reactCode: any = createReactApp(fragment, fragments);\n\tconst angularCode: any = createAngularApp(fragment);\n\tconst vueCode: any = createVueApp(fragment);\n\n\tconst generateSandboxUrl = (parameters: any) => (`https://codesandbox.io/api/v1/sandboxes/define?parameters=${parameters}`);\n\n\treturn (\n\t\t<Modal\n\t\t\thasForm\n\t\t\topen={modalState.ShowModal && displayedModal === ShareOptionsModals.CODE_EXPORTS}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tprimaryButtonText='Done'\n\t\t\tsecondaryButtonText='Back to export options'\n\t\t\tonRequestSubmit={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tonSecondarySubmit={() => { setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS); }}\n\t\t\tmodalHeading={`Export \"${fragment.title}\" code`}\n\t\t\tclassName={exportCodeModalStyle}>\n\t\t\t<Tabs selected={3}>\n\t\t\t\t<Tab\n\t\t\t\t\tid='json'\n\t\t\t\t\tlabel='JSON'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>JSON</h3>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\tonClick={() => saveBlob(new Blob([jsonCode]), `${fragment.title}.json`)}>\n\t\t\t\t\t\t\tDownload JSON\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\tlight\n\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\tcopyButtonDescription={`Copy JSON to clipboard`}>\n\t\t\t\t\t\t{ jsonCode }\n\t\t\t\t\t</CodeSnippet>\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='vanilla'\n\t\t\t\t\tlabel='Vanilla JS'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\tdisabled\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vanilla JS Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(vanillaCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={css`color: red`}>/Only React works atm/</p>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vanillaCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vanillaCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vanillaCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='Angular'\n\t\t\t\t\tlabel='Angular'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Angular Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(angularCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(angularCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? angularCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(angularCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='react'\n\t\t\t\t\tlabel='React'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>React Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(reactCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(reactCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? reactCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(reactCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tid='vue'\n\t\t\t\t\tlabel='Vue'\n\t\t\t\t\trole='presentation'\n\t\t\t\t\tdisabled\n\t\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vue Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(vueCode))}\n\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={css`color: red`}>/Only React works atm/</p>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vueCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vueCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vueCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t</Modal>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nconst tileFooter = css`\n\tposition: absolute;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n\tbottom: 15px;\n\tp {\n\t\tfont-weight: bold;\n\t}\n\tspan {\n\t\tmargin-right: 30px;\n\t}\n`;\n\nexport interface SelectionTile {\n\tstyles?: any,\n\tonChange?: any,\n\ticon?: JSX.Element | null,\n\tlabel?: string,\n\tselected?: boolean,\n\ttag?: JSX.Element | null\n}\n\nexport const SelectionTile = (props: SelectionTile) => (\n\t<div className={props.styles}>\n\t\t<SelectableTile\n\t\t\tlight={true}\n\t\t\tonChange={() => {props.onChange();}}\n\t\t\tselected={props.selected}>\n\t\t\t{ props.icon }\n\t\t\t<div className={tileFooter}>\n\t\t\t\t<p>{ props.label }</p>\n\t\t\t\t{ props.tag }\n\t\t\t</div>\n\t\t</SelectableTile>\n\t</div>\n);\n","import React, {\n\tuseState,\n\tuseEffect,\n\tuseRef,\n\tuseContext\n} from 'react';\nimport {\n\tModal,\n\tTextInput,\n\tForm,\n\tSelect,\n\tSelectItem,\n\tCheckbox,\n\tNumberInput,\n\tLoading\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport debounce from 'lodash/debounce';\nimport { saveBlob, getFullFileName } from '../../../../utils/file-tools';\nimport { ShareOptionsModals } from '../share-options-modal';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { getFragmentPreview, RenderProps } from '../../../../utils/fragment-tools';\nimport { GlobalStateContext } from '../../../../context';\n\nconst exportSettingForm = css`\n\twidth: 23rem;\n`;\nconst exportSettingFormGroup = css`\n\twidth: 320px;\n\tdisplay: flex;\n`;\nconst previewContainer = css`\n\tfloat: left;\n\tbackground-color: #e0e0e0;\n\twidth: 100%;\n\theight: 100%;\n\tmargin-top: 3rem;\n\tmargin-left: 1rem;\n\tdisplay: flex;\n\talign-items: center;\n`;\nconst selectInputWH = css`\n\tmargin-bottom: 1.5rem;\n\tfloat: left;\n\twidth: 150px;\n`;\nconst selectInput = css`\n\tmargin-bottom: 1.5rem;\n\twidth: 320px;\n`;\n\nconst fragmentImage = css`\n\tmax-height: 100%;\n\tmax-width: 100%;\n\tdisplay: block;\n\tmargin: 0;\n`;\n\nexport interface ExportImageProps {\n\tfragment: any,\n\tdisplayedModal: ShareOptionsModals | null,\n\tsetDisplayedModal: (displayedModal: ShareOptionsModals | null) => void\n}\n\nlet updatePreviewUrl = async() => console.log('updatePreviewUrl not initialized yet');\nlet handleResize = () => console.log('handleResize not initialized yet');\nconst doInputChange = debounce(() => updatePreviewUrl(), 400);\nconst doUpdatePreviewSize = debounce(() => handleResize(), 200);\n\nexport const ExportImageModal = (props: ExportImageProps) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst { fragments } = useContext(GlobalStateContext);\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === props.fragment.id);\n\n\tconst exportSettings = {\n\t\twidth: 800,\n\t\theight: 400,\n\t\tunit: 'pixels',\n\t\tratioLock: false,\n\t\tfragmentName: props.fragment.title,\n\t\tformat: 'image/png',\n\t\tcurRatio: 0\n\t};\n\tconst [inputs, setInputs] = useState(exportSettings);\n\tconst [previewUrl, setPreviewUrl] = useState(props.fragment.preview);\n\tconst [isPerformingAction, setIsPerformingAction] = useState(false);\n\tconst previewContainerRef = useRef<HTMLDivElement>(null);\n\tconst [imageContainerSize, setImageContainerSize] = useState<any>();\n\n\thandleResize = () => {\n\t\tif (!previewContainerRef || !previewContainerRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tsetImageContainerSize({\n\t\t\twidth: previewContainerRef.current.offsetWidth,\n\t\t\theight: previewContainerRef.current.offsetHeight\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', doUpdatePreviewSize);\n\t\tif(previewContainerRef) {\n\t\t\tdoUpdatePreviewSize();\n\t\t}\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', doUpdatePreviewSize);\n\t\t};\n\t}, [previewContainerRef]);\n\n\tconst getPreviewSize = (width: number, height: number) => {\n\t\tlet fitRatio: number;\n\t\tif (width <= height) {\n\t\t\t// preview is square or tall rectangle (mobile)\n\t\t\tfitRatio = imageContainerSize.height / height;\n\t\t} else {\n\t\t\t// preview is long rectangle\n\t\t\tfitRatio = imageContainerSize.width / width;\n\t\t}\n\t\treturn {\n\t\t\twidth: width * fitRatio,\n\t\t\theight: height * fitRatio\n\t\t};\n\t};\n\n\tupdatePreviewUrl = async() => {\n\t\tconst previewSize = getPreviewSize(inputs.width, inputs.height);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tpreview: {\n\t\t\t\tformat: inputs.format,\n\t\t\t\twidth: previewSize.width,\n\t\t\t\theight: previewSize.height\n\t\t\t}\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tconst imageUrl: string = reader.result ? reader.result.toString() : '';\n\t\t\tsetPreviewUrl(imageUrl);\n\t\t};\n\t};\n\n\tconst onSubmit = async() => {\n\t\tif (isPerformingAction) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsPerformingAction(true);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tformat: inputs.format\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst fileName = getFullFileName(inputs.fragmentName, inputs.format);\n\t\tsaveBlob(imageBlob, fileName);\n\t\tsetIsPerformingAction(false);\n\t};\n\n\tconst handleChange = (id: any, value: any) => {\n\t\tsetInputs({\n\t\t\t...inputs,\n\t\t\t[id]: value\n\t\t});\n\t\tdoInputChange();\n\t};\n\n\tuseEffect(() => {\n\t\tdoInputChange();\n\t}, []);\n\n\treturn (\n\t\t<Modal\n\t\t\thasForm\n\t\t\tonRequestSubmit={() => {\n\t\t\t\t// TODO look into whether it's a better user experience to have the\n\t\t\t\t// processing in the background, perhaps with the saving indication\n\t\t\t\tonSubmit().then(dispatchModal({ type: ModalActionType.closeModal }));\n\t\t\t}}\n\t\t\tonSecondarySubmit={() => { props.setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS); }}\n\t\t\topen={modalState.ShowModal && props.displayedModal === ShareOptionsModals.IMAGE_EXPORTS}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tprimaryButtonText='Export'\n\t\t\tsecondaryButtonText='Back to export options'\n\t\t\tmodalHeading={`Export '${props.fragment.title}' as image`}>\n\t\t\t<p>\n\t\t\t\tExport a static image of this fragment for use in presentation decks or designs.\n\t\t\t</p>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tmarginTop: '3rem'\n\t\t\t}}>\n\t\t\t\t<ExportModalSettings inputs={inputs} handleChange={handleChange} />\n\t\t\t\t<div className={previewContainer} ref={previewContainerRef}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tid=\"previewimg\"\n\t\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\talt={`fragment preview: ${props.fragment.title}`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Loading active={isPerformingAction} />\n\t\t</Modal>\n\t);\n};\n\nconst ExportModalSettings = ({ inputs, handleChange }: any) => {\n\t// We assume that a working ratio is never 0 (no 1D fragments)\n\tconst getRatio = () => (inputs.width / inputs.height).toFixed(2);\n\n\tconst onDimensionChange = (id: any, value: any) => {\n\t\tif (isNaN(value) || value === 0) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\tvalue = 1;\n\t\t}\n\t\tif (!inputs.ratioLock) {\n\t\t\thandleChange(id, value);\n\t\t\treturn;\n\t\t}\n\t\tif (inputs.curRatio === 0) {\n\t\t\thandleChange('curRatio', getRatio());\n\t\t}\n\t\thandleChange(id, value);\n\t\tif (id === 'width') {\n\t\t\thandleChange('height', (value / inputs.curRatio).toFixed(0));\n\t\t} else {\n\t\t\thandleChange('width', (value * inputs.curRatio).toFixed(0));\n\t\t}\n\t};\n\tconst numInputOnchange = (event: any) => {\n\t\tonDimensionChange(event.target.id, parseFloat(event.target.value));\n\t};\n\tconst numInputOnClick = (event: any) => {\n\t\tif (event.imaginaryTarget && event.imaginaryTarget.value) {\n\t\t\tonDimensionChange(event.imaginaryTarget.id, parseFloat(event.imaginaryTarget.value));\n\t\t}\n\t};\n\tconst inputChange = (event: any) => {\n\t\thandleChange(event.target.id, event.target.value);\n\t};\n\n\treturn (\n\t\t<Form className={exportSettingForm}>\n\t\t\t<TextInput\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid={'fragmentName'}\n\t\t\t\tlabelText={'Name'}\n\t\t\t\tplaceholder={'Fragment name'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\ttype='text'\n\t\t\t\tdefaultValue={inputs.fragmentName} />\n\t\t\t<div className={exportSettingFormGroup}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='width'\n\t\t\t\t\tlabel='Width'\n\t\t\t\t\tvalue={inputs.width}\n\t\t\t\t\thideSteppers={true}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='height'\n\t\t\t\t\tlabel='Height'\n\t\t\t\t\tvalue={inputs.height}\n\t\t\t\t\thideSteppers={true}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t</div>\n\t\t\t<Checkbox\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid='ratioLock'\n\t\t\t\tlabelText='Preserve aspect ratio'\n\t\t\t\tdefaultChecked={inputs.ratioLock}\n\t\t\t\tonChange={(event: any) => handleChange('ratioLock', event)} />\n\t\t\t<Select\n\t\t\t\tclassName={selectInput}\n\t\t\t\tvalue={inputs.unit}\n\t\t\t\tid={'unit'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\tlabelText='Units'>\n\t\t\t\t<SelectItem text='pixels' value='pixels' />\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\t\tclassName={selectInput}\n\t\t\t\tvalue={inputs.format}\n\t\t\t\tid={'format'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\tlabelText='Format'>\n\t\t\t\t<SelectItem text='png' value='image/png' />\n\t\t\t\t<SelectItem text='jpeg' value='image/jpeg' />\n\t\t\t\t<SelectItem text='bmp' value='image/bmp' />\n\t\t\t\t<SelectItem text='gif' value='image/gif' />\n\t\t\t</Select>\n\t\t</Form>\n\t);\n};\n","import React, {\n\tuseContext,\n\tuseEffect,\n\tuseState\n} from 'react';\nimport { css, cx } from 'emotion';\nimport { Fragment } from '../../components';\nimport { EditHeader } from './edit-header';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport {\n\tButton,\n\tSideNav,\n\tSideNavLink,\n\tSideNavItems,\n\tTabs,\n\tTab\n} from 'carbon-components-react';\nimport {\n\tCode16,\n\tColorPalette16,\n\tCopy32,\n\tDevelopment16,\n\tExport16,\n\tInformation16,\n\tTrashCan32\n} from '@carbon/icons-react';\n\nimport { ElementsPane } from './elements-pane';\nimport { StylePane } from './style-pane';\nimport { CodePane } from './code-pane';\nimport { ExportPane } from './export-pane';\n\nimport { StyleContextPane } from './style-context-pane';\nimport { CodeContextPane } from './code-context-pane';\n\nconst leftPaneWidth = '300px';\nconst rightPaneWidth = '302px';\nconst railWidth = '48px';\nconst transitionDetails = `0.11s cubic-bezier(0.2, 0, 1, 0.9)`;\n\nconst editPageContent = css`\n\tposition: absolute;\n\twidth: 100vw;\n\theight: calc(100% - 3rem);\n\ttop: 3rem;\n\tmax-width: 100%;\n\tbackground: #f4f4f4;\n\n\t.edit-content {\n\t\tpadding: 1rem;\n\t\tmargin: 0 ${rightPaneWidth} 0 ${railWidth};\n\t\twidth: calc(100% - ${rightPaneWidth} - ${railWidth});\n\t\theight: calc(100% - 64px);\n\t\ttransition: margin-left ${transitionDetails}, width ${transitionDetails};\n\t\toverflow: auto;\n\n\t\t&.is-side-panel-active {\n\t\t\tmargin-left: calc(${railWidth} + ${leftPaneWidth});\n\t\t\twidth: calc(100% - ${leftPaneWidth} - ${rightPaneWidth} - ${railWidth});\n\t\t}\n\t}\n`;\n\nconst sideRail = css`\n\ttransition: left ${transitionDetails};\n\n\t&.bx--side-nav, &.bx--side-nav:hover {\n\t\t.bx--side-nav__item .bx--side-nav__link {\n\t\t\theight: 3rem;\n\t\t}\n\t}\n\n\t&.bx--side-nav--ux {\n\t\ttop: 7rem;\n\t\tbox-shadow: inset -1px 0px #d8d8d8;\n\t}\n\n\t&.is-active {\n\t\tleft: ${leftPaneWidth};\n\t}\n\n\t.bx--side-nav__items {\n\t\tpadding: 0;\n\t}\n`;\n\nexport const leftPane = css`\n\tposition: absolute;\n\tbackground: white;\n\ttransition: left 0.11s cubic-bezier(0.2, 0, 1, 0.9);\n\twidth: ${leftPaneWidth};\n\tleft: -${leftPaneWidth};\n\theight: calc(100% - 4rem);\n\tpadding: 0 15px;\n\tbox-shadow: inset -1px 0px #d8d8d8;\n\tz-index: 999;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n\t&.is-active {\n\t\tleft: 0;\n\t}\n`;\n\nexport const leftPaneHeader = css`\n\tposition: fixed;\n\tpadding-top: 15px;\n\twidth: 270px;\n\tbackground: white;\n`;\n\nconst rightPanel = css`\n\twidth: ${rightPaneWidth};\n\tposition: absolute;\n\tright: 0;\n\ttop: 4rem;\n\tbackground: white;\n\tmin-height: calc(100vh - 7rem);\n\tbox-shadow: inset 1px 0px #d8d8d8;\n\tz-index: 1;\n\n\t.bx--tabs--scrollable__nav-item .bx--tabs--scrollable__nav-link {\n\t\twidth: 100px;\n\t\ttext-align: center;\n\t}\n\n\t.context-pane-content {\n\t\toverflow: auto;\n\t\theight: calc(100vh - 17rem);\n\t}\n`;\n\nconst actionsStyle = css`\n\tposition: absolute;\n\tbottom: 0;\n\tmargin: 15px;\n`;\n\nenum SelectedLeftPane {\n\tNONE = 'none',\n\tELEMENTS = 'elements',\n\tSTYLE = 'style',\n\tCODE = 'code',\n\tEXPORT = 'export'\n};\n\nexport const Edit = ({ match }: any) => {\n\tconst {\n\t\tfragments,\n\t\tupdateFragment,\n\t\tclearActionHistory,\n\t\taddAction,\n\t\tstyleClasses\n\t} = useContext(GlobalStateContext);\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === match.params.id);\n\n\tconst [selectedLeftPane, setSelectedLeftPane] = useState(SelectedLeftPane.NONE);\n\n\tuseEffect(() => {\n\t\tif (fragment && fragment.title) {\n\t\t\tdocument.title = `Edit \"${fragment.title}\"`;\n\t\t} else {\n\t\t\tdocument.title = 'Edit fragment';\n\t\t}\n\t}, [fragment]);\n\n\tuseEffect(() => {\n\t\tclearActionHistory();\n\t\taddAction({fragment, styleClasses});\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst onRailClick = (clickedLeftPane: SelectedLeftPane) => {\n\t\tif (clickedLeftPane === selectedLeftPane) {\n\t\t\tsetSelectedLeftPane(SelectedLeftPane.NONE);\n\t\t} else {\n\t\t\tsetSelectedLeftPane(clickedLeftPane);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tid='edit-wrapper'\n\t\t\tclassName={editPageContent}>\n\t\t\t{ fragment && <EditHeader fragment={fragment}/> }\n\t\t\t<ElementsPane isActive={selectedLeftPane === SelectedLeftPane.ELEMENTS} />\n\t\t\t<StylePane isActive={selectedLeftPane === SelectedLeftPane.STYLE} />\n\t\t\t<CodePane isActive={selectedLeftPane === SelectedLeftPane.CODE} />\n\t\t\t<ExportPane isActive={selectedLeftPane === SelectedLeftPane.EXPORT} />\n\t\t\t<SideNav\n\t\t\taria-label='Side navigation'\n\t\t\tclassName={cx(sideRail, selectedLeftPane !== SelectedLeftPane.NONE ? 'is-active' : '')}\n\t\t\tisRail>\n\t\t\t\t<SideNavItems>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Development16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.ELEMENTS)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.ELEMENTS}>\n\t\t\t\t\t\tElements\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={ColorPalette16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.STYLE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.STYLE}>\n\t\t\t\t\t\tStyle\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Code16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.CODE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.CODE}>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Export16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.EXPORT)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.EXPORT}>\n\t\t\t\t\t\tExport\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t</SideNavItems>\n\t\t\t</SideNav>\n\t\t\t<div\n\t\t\tclassName={cx('edit-content', selectedLeftPane !== SelectedLeftPane.NONE ? 'is-side-panel-active' : '')}\n\t\t\tonClick={(event: any) => { updateFragment({...fragment, selectedComponentId: 0}) }}>\n\t\t\t\t{\n\t\t\t\t\tfragment\n\t\t\t\t\t&& <>\n\t\t\t\t\t\t<Fragment fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className={rightPanel}>\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-style'\n\t\t\t\t\tlabel={<ColorPalette16 />}>\n\t\t\t\t\t\t<StyleContextPane fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-code'\n\t\t\t\t\tlabel={<Code16 />}>\n\t\t\t\t\t\t<CodeContextPane fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-info'\n\t\t\t\t\tlabel={<Information16 />}>\n\t\t\t\t\t\tinfo\n\t\t\t\t\t</Tab>\n\t\t\t\t</Tabs>\n\t\t\t\t<div className={actionsStyle}>\n\t\t\t\t\t<Button\n\t\t\t\t\tdisabled\n\t\t\t\t\tkind='secondary'\n\t\t\t\t\trenderIcon={Copy32}\n\t\t\t\t\tclassName={css`margin-right: 8px`}>\n\t\t\t\t\t\tDuplicate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\tdisabled\n\t\t\t\t\tkind='danger'\n\t\t\t\t\trenderIcon={TrashCan32}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { getFragmentDuplicate } from '../../utils/fragment-tools';\n\n// In the case that fragment modal is used in the dashboard the full fragment containing options and data\n// can't be passed in, so fragment id is passed in and `useFragment` is used within this component.\nexport const DuplicateFragmentModal = ({ id }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst { fragments, addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\tconst location = useLocation();\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\n\tconst duplicateFragment = () => {\n\t\tconst fragmentCopy = getFragmentDuplicate(\n\t\t\tfragments,\n\t\t\tfragment,\n\t\t\t// When a new fragment is created from an existing template, it shouldn't\n\t\t\t// be a template by default.\n\t\t\t{ labels: fragment?.labels?.filter((label: string) => label !== 'template') }\n\t\t);\n\n\t\taddFragment(fragmentCopy);\n\t\tif (location.pathname !== '/') {\n\t\t\thistory.push(`/edit/${fragmentCopy.id}`);\n\t\t}\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'success',\n\t\t\t\ttitle: 'Duplication success',\n\t\t\t\tmessage: `'${fragmentCopy.title}  has been duplicated from '${fragment.title}'.`\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Duplicate fragment?'\n\t\t\tprimaryButtonText='Duplicate'\n\t\t\tonRequestSubmit={duplicateFragment}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Duplicate</strong> to begin to edit a copy of the current fragment\n\t\t\t\tor <strong>Cancel</strong> to continue on this fragment.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport { useHistory } from 'react-router-dom';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\n\nexport const DeleteFragmentModal = ({ id }: any) => {\n\tconst { fragments, toggleFragmentVisibility, removeFragment } = useContext(GlobalStateContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst history = useHistory();\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\n\tconst deleteFragment = () => {\n\t\ttoggleFragmentVisibility(id, true);\n\t\thistory.push('/');\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'error',\n\t\t\t\ttitle: 'Fragment deleted!',\n\t\t\t\tmessage: `Fragment '${fragment.title}' has been permanently deleted.`,\n\t\t\t\taction: {\n\t\t\t\t\tactionText: 'Undo',\n\t\t\t\t\tactionFunction: undoHideFragment,\n\t\t\t\t\tonNotificationClose: () => { removeFragment(id) }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\tconst undoHideFragment = () => {\n\t\ttoggleFragmentVisibility(id, false);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => { dispatchModal({ type: ModalActionType.closeModal }); }}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Delete this fragment?'\n\t\t\tdanger\n\t\t\tprimaryButtonText='Delete'\n\t\t\tonRequestSubmit={() => deleteFragment()}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Cancel</strong> to go back to editing your fragment\n\t\t\t\tor <strong>Delete</strong> to remove it permanently.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useState, useContext } from 'react';\nimport {\n\tModal,\n\tTextInput,\n\tCheckbox,\n\tTooltipDefinition\n} from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport './fragment-modal.scss';\n\nexport const SettingsFragmentModal = ({ fragment }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst { updateFragment } = useContext(GlobalStateContext);\n\n\tconst props = {\n\t\tsize: 'sm',\n\t\topen: modalState.ShowModal,\n\t\tonRequestClose: () => dispatchModal({ type: ModalActionType.closeModal }),\n\t\tsecondaryButtonText: 'Cancel'\n\t};\n\n\tconst [title, setTitle] = useState(fragment.title);\n\tconst [isTemplate, setIsTemplate] = useState(fragment.labels && fragment.labels.includes('template'));\n\tconst [isMicroLayout, setIsMicroLayout] = useState(fragment.labels && fragment.labels.includes('micro-layout'));\n\n\tconst updateFragmentSettings = () => {\n\t\tlet labels = fragment.labels || [];\n\n\t\t// Add or remove 'template' label for the fragment if set template is checked\n\t\tif (isTemplate) {\n\t\t\tif(!labels.includes('template')) {\n\t\t\t\tlabels = [...labels, 'template'];\n\t\t\t}\n\t\t} else {\n\t\t\t// if the set template is unchecked, remove the 'template' label\n\t\t\tlabels = labels.filter((label: string) => label !== 'template');\n\t\t}\n\n\t\t// Add or remove 'micro-layout' label for the fragment if set micro-layout is checked\n\t\tif (isMicroLayout) {\n\t\t\tif(!labels.includes('micro-layout')) {\n\t\t\t\tlabels = [...labels, 'micro-layout'];\n\t\t\t}\n\t\t} else {\n\t\t\t// if the set micro-layout is unchecked, remove the 'micro-layout' label\n\t\t\tlabels = labels.filter((label: string) => label !== 'micro-layout');\n\t\t}\n\n\t\tupdateFragment({\n\t\t\t...fragment,\n\t\t\ttitle,\n\t\t\tlabels\n\t\t});\n\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\t{...props}\n\t\t\thasForm\n\t\t\tmodalHeading='Edit fragment settings'\n\t\t\tprimaryButtonText='Save'\n\t\t\tonRequestSubmit={() => updateFragmentSettings()} >\n\t\t\t<TextInput\n\t\t\t\tid='fragmentName'\n\t\t\t\tlabelText='Fragment name'\n\t\t\t\tdefaultValue={title}\n\t\t\t\tonChange={(event: any) => setTitle(event.target.value)}/>\n\n\t\t\t<Checkbox\n\t\t\t\tid='setFragmentAsTemplate'\n\t\t\t\tchecked={isTemplate}\n\t\t\t\tlabelText='Make this fragment a &nbsp;'\n\t\t\t\tonChange={(event: any) => setIsTemplate(event)}/>\n\t\t\t<TooltipDefinition\n\t\t\t\ttooltipText='Setting a fragment as a template makes it an easy starting point\n\t\t\t\tfor future fragments.'\n\t\t\t\tdirection='bottom'>\n\t\t\t\ttemplate\n\t\t\t</TooltipDefinition>\n\t\t\t<br />\n\t\t\t<Checkbox\n\t\t\t\tid='setFragmentAsMicroLayout'\n\t\t\t\tchecked={isMicroLayout}\n\t\t\t\tlabelText='Make this fragment a &nbsp;'\n\t\t\t\tonChange={(event: any) => setIsMicroLayout(event)}/>\n\t\t\t<TooltipDefinition\n\t\t\t\ttooltipText='Setting a fragment as a micro layout makes it available to drag and drop into fragments'\n\t\t\t\tdirection='bottom'>\n\t\t\t\tmicro layout\n\t\t\t</TooltipDefinition>\n\t\t</Modal>\n\t);\n};\n","import { ModalType, ModalContext } from '../../context/modal-context';\nimport { ShareOptionsModal } from './share-options/share-options-modal';\nimport { DuplicateFragmentModal } from './duplicate-fragment-modal';\nimport { DeleteFragmentModal } from './delete-fragment-modal';\nimport { SettingsFragmentModal } from './settings-fragment-modal';\nimport React, { useContext } from 'react';\n\n// eslint-disable-next-line react/prop-types\nexport const FragmentModal = ({ fragment }: any) => {\n\tconst [modalState] = useContext(ModalContext);\n\n\tswitch (modalState.ModalType) {\n\t\tcase ModalType.DUPLICATION:\n\t\t\treturn (\n\t\t\t// In the case that fragment modal is used in the dashboard the full fragment containing options and\n\t\t\t// data can't be passed in, so we use fragment id and fetch it\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DuplicateFragmentModal id={fragment.id}/>\n\t\t\t);\n\t\tcase ModalType.SHARING:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<ShareOptionsModal fragment={fragment} />\n\t\t\t);\n\t\tcase ModalType.DELETION:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DeleteFragmentModal id={fragment.id} />\n\t\t\t);\n\t\tcase ModalType.SETTINGS:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<SettingsFragmentModal fragment={fragment} />\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport {\n\tCopy16,\n\tDelete16,\n\tSettings16,\n\tShare16,\n\tUndo16,\n\tRedo16\n} from '@carbon/icons-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { FragmentModal } from './fragment-modal';\nimport { GlobalStateContext } from '../../context';\n\nconst editHeader = css`\n\tleft: 16rem;\n\tbackground: #fff;\n\tbox-shadow: inset 0px -1px #d8d8d8;\n\n\t.edit-wrapper {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t.title-wrap {\n\t\t\theight: 3rem;\n\t\t\tmargin-left: 3rem;\n\t\t\tdisplay: flex;\n\t\t\talign-self: center;\n\t\t\tflex-flow: column;\n\t\t}\n\t\t.title-subheading {\n\t\t\tdisplay: inline-flex;\n\t\t\t.bx--inline-loading {\n\t\t\t\twidth: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin-left: 10px;\n\t\t\t\ttop: -10px;\n\t\t\t}\n\t\t\t.date-wrap {\n\t\t\t\tfont-size: 12px;\n\t\t\t\tfont-style: italic;\n\t\t\t\tcolor: black;\n\t\t\t\tpadding-left: 12px;\n\t\t\t}\n\t\t}\n\t\t.fragment-title {\n\t\t\twhitespace: nowrap;\n\t\t\tfont-weight: bold;\n\t\t\tpadding-left: 12px;\n\t\t\tpadding-right: 16px;\n\t\t\tfloat: left;\n\t\t}\n\t\t.fragment-edit {\n\t\t\tmargin-top: 6px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and\n\t// store to local fragments checkbox to overlap.\n\t@media screen and (max-width: 67.0625rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-flow: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\t.edit-wrapper {\n\t\t\tflex-direction: column;\n\t\t\t.title-wrap {\n\t\t\t\tmargin-top: 10px;\n\t\t\t\talign-self: auto;\n\t\t\t}\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: row;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 0px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst toolBarSeparator = css`\n\tbackground-color: #e0e0e0;\n\theight: 100%;\n\twidth: 1px;\n\tdisplay: inline-block;\n    margin: auto 6px;\n`;\n\nconst actionIconStyle = css`\n\tcolor: black;\n\n\t.bx--btn--ghost:disabled & {\n\t\tcolor: #8d8d8d;\n\t}\n`;\n\nconst fragmentEditToolBar = css`\n\tdisplay: flex;\n\tmargin-right: 5rem;\n\tmargin-top: 8px;\n\tmargin-bottom: 8px;\n\tbutton {\n\t\theight: 3rem;\n\t}\n\t.toolBarButtons {\n\t\tmin-width: 13.75rem\n\t}\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\tmargin-left: 10px;\n\t\tflex-direction: row-reverse;\n\t\tplace-self: start;\n\t}\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\tmargin-left: 10px;\n\t\tmargin-top: 20px;\n\t\tflex-direction: column-reverse;\n\t\tplace-self: start;\n\t}\n`;\n\nexport const EditHeader = ({ fragment }: any) => {\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst {\n\t\tcanUndo,\n\t\tundoAction,\n\t\tcanRedo,\n\t\tredoAction\n\t} = useContext(GlobalStateContext);\n\n\treturn (\n\t\t<header\n\t\t\tclassName={editHeader}\n\t\t\taria-label={`Header for '${fragment.title}'`}\n\t\t\trole='banner'\n\t\t\ttabIndex={0}>\n\t\t\t<div className='edit-wrapper'>\n\t\t\t\t<div className='title-wrap'>\n\t\t\t\t\t<p className='fragment-title'>{fragment.title}</p>\n\n\t\t\t\t\t<div className='title-subheading'>\n\t\t\t\t\t\t<div className='date-wrap'>{`Last modified ${ fragment.lastModified}`}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={fragmentEditToolBar}>\n\t\t\t\t\t<div className='toolBarButtons'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Undo'\n\t\t\t\t\t\t\ttitle='Undo'\n\t\t\t\t\t\t\tdisabled={!canUndo()}\n\t\t\t\t\t\t\tonClick={() => undoAction()}>\n\t\t\t\t\t\t\t<Undo16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Redo'\n\t\t\t\t\t\t\ttitle='Redo'\n\t\t\t\t\t\t\tdisabled={!canRedo()}\n\t\t\t\t\t\t\tonClick={() => redoAction()}>\n\t\t\t\t\t\t\t<Redo16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<div className={toolBarSeparator} />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Duplicate fragment'\n\t\t\t\t\t\t\ttitle='Duplicate fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDuplicationModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Copy16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Delete fragment'\n\t\t\t\t\t\t\ttitle='Delete fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDeletionModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Delete16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Share fragment'\n\t\t\t\t\t\t\ttitle='Share fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setShareModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Share16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Fragment settings'\n\t\t\t\t\t\t\ttitle='Fragment settings'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setSettingsModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Settings16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<FragmentModal fragment={fragment} />\n\t\t</header>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { drag } from '../routes/edit/tools';\n\nconst elementTileStyle = css`\n\tborder: 1px solid #d8d8d8;\n\tmin-width: 127px;\n\theight: 127px;\n\tdisplay: inline-flex;\n\tmargin-bottom: 1rem;\n\tflex-direction: column;\n\n\timg {\n\t\tmargin: auto;\n\t}\n\n\t.title {\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tmargin: 0 1rem auto auto;\n\t}\n`;\n\nexport const ElementTile = ({children, componentObj}: any) => {\n\treturn (<div\n\t\tclassName={elementTileStyle}\n\t\tdraggable='true'\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj\n\t\t})}>\n\t\t{children}\n\t</div>);\n};\n","import React, { useContext, useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { Search } from 'carbon-components-react';\n\nimport { ElementTile } from '../../components/element-tile';\n\nimport { leftPane, leftPaneHeader } from '.';\nimport { allComponents } from '../../fragment-components';\nimport { GlobalStateContext } from '../../context';\n\nconst searchStyle = css`\n\tmargin-top: 15px;\n`;\n\nconst elementTileListStyle = css`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\tmargin-top: 100px;\n\twidth: 270px;\n`;\n\nexport const ElementsPane = ({isActive}: any) => {\n\tconst [filterString, setFilterString] = useState('');\n\tconst { fragments } = useContext(GlobalStateContext);\n\n\tconst microLayouts = fragments.filter((fragment: any) => fragment.labels?.includes('micro-layout'));\n\n\t/**\n\t * Returns true if element should show\n\t *\n\t * @param matches a list of strings that represent the component user might search for\n\t */\n\tconst shouldShow = (matches: string[]) => {\n\t\treturn !filterString || matches.some((match) => match.includes(filterString));\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\t<div className={leftPaneHeader}>\n\t\t\t\tElements\n\t\t\t\t<Search\n\t\t\t\t\tid='elements-search'\n\t\t\t\t\tclassName={searchStyle}\n\t\t\t\t\tlight\n\t\t\t\t\tlabelText='Filter elements'\n\t\t\t\t\tplaceholder='Filter elements'\n\t\t\t\t\tonChange={(event: any) => setFilterString(event.target.value)} />\n\t\t\t</div>\n\t\t\t<div className={elementTileListStyle}>\n\t\t\t\t{\n\t\t\t\t\tObject.values(allComponents)\n\t\t\t\t\t.filter((component: any) =>\n\t\t\t\t\t\t!component.componentInfo.hideFromElementsPane\n\t\t\t\t\t\t&& shouldShow(component.componentInfo.keywords))\n\t\t\t\t\t.map((component: any) =>\n\t\t\t\t\t\t<ElementTile componentObj={component.componentInfo.defaultComponentObj}>\n\t\t\t\t\t\t\t<img src={component.componentInfo.image} alt={component.componentInfo.name} />\n\t\t\t\t\t\t\t<span className='title'>{component.componentInfo.name}</span>\n\t\t\t\t\t\t</ElementTile>)\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tmicroLayouts && microLayouts.length > 0 && <>\n\t\t\t\t\t<h4>Micro layouts</h4>\n\t\t\t\t\t<div className={elementTileListStyle}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.values(microLayouts)\n\t\t\t\t\t\t\t// TODO prevent recursive adding\n\t\t\t\t\t\t\t.filter((component: any) => shouldShow([component.title, ...component.labels]))\n\t\t\t\t\t\t\t.map((component: any) =>\n\t\t\t\t\t\t\t\t<ElementTile componentObj={{type: 'fragment', id: component.id}}>\n\t\t\t\t\t\t\t\t\t{/* <img src={component.componentInfo.image} alt={component.title} /> */}\n\t\t\t\t\t\t\t\t\t<span className='title'>{component.title}</span>\n\t\t\t\t\t\t\t\t</ElementTile>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React, { useContext, useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { uniqueNamesGenerator, adjectives, colors, animals } from 'unique-names-generator';\nimport {\n\tButton,\n\tForm,\n\tSearch,\n\tTextArea,\n\tTextInput,\n\tTag\n} from 'carbon-components-react';\nimport { Add16 } from '@carbon/icons-react';\nimport { leftPane } from '.';\nimport { GlobalStateContext } from '../../context';\n\nconst searchContainerStyle = css`\n\tdisplay: flex;\n\tmargin-bottom: 1rem;\n\n\tbutton {\n\t\tborder-bottom: 1px solid #8d8d8d;\n\t}\n`;\n\nexport const StylePane = ({isActive}: any) => {\n\tconst [selectedStyleClassId, setSelectedStyleClassId] = useState('' as string);\n\tconst { styleClasses, setStyleClasses } = useContext(GlobalStateContext);\n\tconst [filterString, setFilterString] = useState('');\n\n\tconst getSelectedClass = () => styleClasses.find((c: any) => c.id === selectedStyleClassId) || {};\n\tconst getSelectedClassIndex = () => styleClasses.findIndex((c: any) => c.id === selectedStyleClassId);\n\n\tconst shouldShow = (styleClass: any) => {\n\t\tconst matches = [styleClass.name, styleClass.id];\n\t\treturn !filterString || matches.some((match) => match.includes(filterString));\n\t};\n\n\tconst getUniqueClass = (): any => {\n\t\tlet className = uniqueNamesGenerator({\n\t\t\tdictionaries: [adjectives, colors, animals],\n\t\t\tseparator: '-',\n\t\t\tlength: 3\n\t\t});\n\n\t\tif (!styleClasses.find((sc: any) => sc.id === className || sc.name === className)) {\n\t\t\treturn {\n\t\t\t\tid: className,\n\t\t\t\tname: className\n\t\t\t};\n\t\t}\n\n\t\treturn getUniqueClass();\n\t};\n\n\tconst updateSelectedClass = (newClass: any) => {\n\t\tconst selectedClassIndex = getSelectedClassIndex();\n\t\tif (selectedClassIndex < 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetStyleClasses([\n\t\t\t...styleClasses.slice(0, selectedClassIndex),\n\t\t\tnewClass,\n\t\t\t...styleClasses.slice(selectedClassIndex + 1)\n\t\t]);\n\t};\n\n\tconst updateSelectedClassContent = (content: string | undefined) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tcontent: content || ''\n\t\t});\n\t};\n\n\tconst updateSelectedClassName = (name: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tname\n\t\t});\n\t};\n\n\tconst updateSelectedClassId = (id: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tid\n\t\t});\n\t\tsetSelectedStyleClassId(id);\n\t};\n\n\tconst addNewStyleClass = () => {\n\t\tconst newStyleClass = getUniqueClass();\n\t\tsetStyleClasses([...styleClasses, newStyleClass]);\n\t\tsetSelectedStyleClassId(newStyleClass.id);\n\t};\n\n\tconst removeStyleClass = (styleClassId: string) => {\n\t\tsetStyleClasses(styleClasses.filter((sc: any) => sc.id !== styleClassId));\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tStyle <br /><br />\n\t\t\t<Form>\n\t\t\t\t<div className={searchContainerStyle}>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tid=\"styles-search\"\n\t\t\t\t\t\tlight\n\t\t\t\t\t\tlabelText=\"Filter classes\"\n\t\t\t\t\t\tplaceholder=\"Filter classes\"\n\t\t\t\t\t\tonChange={(event: any) => setFilterString(event.target.value)} />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkind=\"ghost\"x\n\t\t\t\t\t\trenderIcon={Add16}\n\t\t\t\t\t\ticonDescription=\"Add new class\"\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\tonClick={addNewStyleClass} />\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\tstyleClasses.filter(shouldShow).map((styleClass: any) => (\n\t\t\t\t\t\t<Tag\n\t\t\t\t\t\tfilter\n\t\t\t\t\t\tonClick={() => setSelectedStyleClassId(styleClass.id)}\n\t\t\t\t\t\tonClose={() => removeStyleClass(styleClass.id)}>\n\t\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t\t</Tag>\n\t\t\t\t\t))\n\t\t\t\t} <br />\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='Descriptive name'\n\t\t\t\t\thelperText='Name that appears in tags and search'\n\t\t\t\t\tvalue={getSelectedClass().name || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassName(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='CSS selector'\n\t\t\t\t\thelperText='Value used in development'\n\t\t\t\t\tvalue={getSelectedClass().id || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassId(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextArea\n\t\t\t\t\tvalue={getSelectedClass().content || ''}\n\t\t\t\t\tlabelText={getSelectedClass().id || 'Select a class first'}\n\t\t\t\t\thelperText='Put CSS properties for your class here'\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassContent(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { leftPane } from '.';\n\nexport const CodePane = ({isActive}: any) => {\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tCode\n\t\t\t<br /><br /> <strong>Comming soon!</strong>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { leftPane } from '.';\n\nexport const ExportPane = ({isActive}: any) => {\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tExport\n\t\t\t<br /><br /> <strong>Comming soon!</strong>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport { Breadcrumb, BreadcrumbItem } from 'carbon-components-react';\n\nimport { getParentComponent, getSelectedComponent } from '../../components/fragment';\nimport { useFragment } from '../../context';\n\nconst getAncestors = (state: any, component: any) => {\n\tconst ancestors: any[] = [];\n\n\t// there's probably a way to optimize this function\n\n\tif (state === component) {\n\t\treturn ancestors;\n\t}\n\n\tlet parent = component;\n\n\tdo {\n\t\tparent = getParentComponent(state, parent);\n\t\tancestors.unshift(parent)\n\t} while (parent !== state);\n\n\treturn ancestors;\n}\n\nexport const SelectedComponentBreadcrumbs = ({selectedComponent}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tif (!selectedComponent) {\n\t\tselectedComponent = getSelectedComponent(fragment);\n\t}\n\n\tconst selectComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: component.id\n\t\t}, true);\n\t};\n\n\treturn selectedComponent && <Breadcrumb noTrailingSlash>\n\t\t{getAncestors(fragment.data, selectedComponent).map(component =>\n\t\t\t<BreadcrumbItem\n\t\t\thref=\"#\"\n\t\t\tisCurrentPage={!component.type}\n\t\t\tonClick={(event: any) => {\n\t\t\t\tevent.nativeEvent.preventDefault();\n\t\t\t\tif (!component.type) {\n\t\t\t\t\t// happens when clicking root element\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tselectComponent(component)\n\t\t\t}}>\n\t\t\t\t{component.type || 'root'}\n\t\t\t</BreadcrumbItem>\n\t\t)}\n\t\t<BreadcrumbItem href=\"#\" onClick={(event: any) => event.nativeEvent.preventDefault()} isCurrentPage>\n\t\t\t{selectedComponent.type}\n\t\t</BreadcrumbItem>\n\t</Breadcrumb>;\n};\n","import React from 'react';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\n\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\n\nimport { allComponents } from '../../fragment-components';\n\nimport { SelectedComponentBreadcrumbs } from './selected-component-breadcrumbs';\n\nconst showComponentStyleOptions = (selectedComponent: any, setComponent: any) => {\n\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\t// Find the UI for editing style for our component\n\t\tif (selectedComponent.type === key) {\n\t\t\treturn <component.componentInfo.styleUI\n\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\tsetComponent={setComponent} />\n\t\t}\n\t}\n};\n\nexport const StyleContextPane = ({fragment, setFragment}: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any, updateActionHistory = true) => {\n\t\tsetFragment({\n\t\t\t\t...fragment,\n\t\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\t\ttype: 'update',\n\t\t\t\t\tcomponent\n\t\t\t\t})\n\t\t\t},\n\t\t\tupdateActionHistory\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tselectedComponent && <>\n\t\t\t\t\t<SelectedComponentBreadcrumbs\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\t\t\tsetFragment={setFragment} />\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className='context-pane-content'>\n\t\t\t\t\t\t{showComponentStyleOptions(selectedComponent, setComponent)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{\n\t\t\t\t!selectedComponent && <>\n\t\t\t\t\t<ComponentCssClassSelector componentObj={fragment} setComponent={setFragment} />\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tAComponentCodeUI,\n\tallComponents\n} from '../../fragment-components';\n\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\n\nconst showComponentCodeOptions = (selectedComponent: any, setComponent: any) => {\n\tfor (let [key, component] of Object.entries(allComponents)) {\n\t\t// Find the UI for editing code props for our component\n\t\tif (selectedComponent.type === key && component.componentInfo.codeUI) {\n\t\t\treturn <component.componentInfo.codeUI\n\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\tsetComponent={setComponent} />\n\t\t}\n\t}\n\treturn <AComponentCodeUI selectedComponent={selectedComponent} setComponent={setComponent} />;\n};\n\nexport const CodeContextPane = ({fragment, setFragment}: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent\n\t\t\t})\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='context-pane-content'>\n\t\t\t{selectedComponent && showComponentCodeOptions(selectedComponent, setComponent)}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tButton,\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSearch\n} from 'carbon-components-react';\n\nimport {\n\tAdd16,\n\tArrowsVertical16,\n\tCheckmarkFilled16\n\t// 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️\n\t// SettingsAdjust16\n} from '@carbon/icons-react';\n\nimport { css } from 'emotion';\n\nconst dashboardSearchWrapper = css`\n\tdisplay: flex;\n\twidth: 100%;\n\n\t// 520px is the point which the search bar becomes too small to display the full text, moves\n\t// the sort, share, and add button below the search bar at this point.\n\t@media screen and (max-width: 520px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst searchInput = css`\n\tinput {\n\t\tborder-bottom: none;\n\n\t\t@media screen and (max-width: 520px) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n`;\n\nconst sortButton = css`\n\theight: 3rem;\n\twidth: 3rem;\n\tbackground-color: #f4f4f4;\n`;\n\nconst sortOverflowItem = css`\n\tsvg {\n\t\ttransform: translate(7px, 1.5px);\n\t}\n`;\n\n// 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️\n// const shareButton = css`\n// \theight: 3rem;\n// \twidth: 3rem;\n// \tbackground-color: #f4f4f4;\n// `;\n\nexport enum SortDirection {\n\tAscending,\n\tDescending\n}\n\nexport const DashboardSearch = ({\n\tonSearchHandler,\n\tonSortHandler,\n\tdisplayWizard,\n\tsetDisplayWizard,\n\tsortDirection\n}: any) => (\n\t<div className={dashboardSearchWrapper}>\n\t\t<Search\n\t\t\tlabelText='Fragment'\n\t\t\tplaceHolderText='Search fragments'\n\t\t\tclassName={searchInput}\n\t\t\tonChange={(event: any) => onSearchHandler(event.target.value)} />\n\t\t<OverflowMenu\n\t\t\tclassName={sortButton}\n\t\t\tariaLabel='Sort fragment'\n\t\t\trenderIcon = {() => <ArrowsVertical16 />}\n\t\t\tonClick={(event: { stopPropagation: () => void; }) => { event.stopPropagation(); }}>\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tNewest to oldest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Ascending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => {onSortHandler(SortDirection.Ascending);}} />\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tOldest to newest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Descending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => {onSortHandler(SortDirection.Descending);}} />\n\t\t</OverflowMenu>\n\t\t{/* 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️ */}\n\t\t{/* <Button kind='ghost' className={shareButton}><SettingsAdjust16 /></Button> */}\n\t\t<Button\n\t\t\tonClick={() => { setDisplayWizard(!displayWizard); }}\n\t\t\ttitle='Add new fragment'\n\t\t\taria-label='Add new fragment'>\n\t\t\tNew fragment\n\t\t\t<Add16 className='bx--btn__icon'/>\n\t\t</Button>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\nimport { ContentSwitcher, Switch } from 'carbon-components-react';\n\n// keep the enum order same as the switch order so context switcher\n// knows to select the correct one. Shout if you have a cleaner alternative.\nexport enum FragmentGroupDisplayed {\n\tAllFragments,\n\tTemplates,\n\tLocalOnly\n}\n\nconst dashboardHeaderWrapper = css`\n\tdisplay: flex;\n\tmargin: 2rem 0;\n\n\t// 676px is when the content switcher becomes too small to show full text, moves the\n\t// content switcher below the title at this point.\n\t@media screen and (max-width: 676px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst fragmentTitle = css`\n\twidth: 100%;\n`;\n\nconst contentSwitcher = css`\n\twidth: 450px;\n`;\n\nexport const DashboardHeader = ({ onDisplayedSwitchHandler, fragmentGroupDisplayed }: any) => (\n\t<div className={dashboardHeaderWrapper}>\n\t\t<h2 className={fragmentTitle}>Fragments</h2>\n\t\t<ContentSwitcher\n\t\t\tclassName={contentSwitcher}\n\t\t\tonChange={(event: any) => onDisplayedSwitchHandler(event.name)}\n\t\t\tselectedIndex={fragmentGroupDisplayed}>\n\t\t\t<Switch name={FragmentGroupDisplayed.AllFragments} text='All fragments' />\n\t\t\t<Switch name={FragmentGroupDisplayed.Templates} text='Templates only' />\n\t\t</ContentSwitcher>\n\t</div>\n);\n","import React, { useContext, useState } from 'react';\n\nimport { FragmentWizardModals } from './fragment-wizard';\n\nimport { Modal } from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { generateNewFragment } from './generate-new-fragment';\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\n\nconst createFragmentTiles = css`\n\tdisplay: flex;\n\tmargin-top: 30px;\n\tmargin-left: 15px;\n\tmargin-right: 15px;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n`;\n\nconst createFragmentTile = css`\n\twidth: 48%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t}\n`;\n\nexport enum CreateOptions {\n\tCHOOSE_TEMPLATE,\n\tFROM_SCRATCH,\n\tIMPORT_JSON\n}\n\nexport interface CreateFragmentModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void\n}\n\nexport const CreateFragmentModal = (props: CreateFragmentModalProps) => {\n\tconst [selectedCreateOption, setSelectedCreateOption] = useState<CreateOptions | null>(null);\n\n\tconst { addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(\n\t\t\t{ items: [], id: 1 }\n\t\t);\n\n\t\taddFragment(generatedFragment);\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\thasForm\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tif (selectedCreateOption === CreateOptions.IMPORT_JSON) {\n\t\t\t\t\t// open modal with file upload\n\t\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.IMPORT_JSON_MODAL);\n\t\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (selectedCreateOption === CreateOptions.FROM_SCRATCH) {\n\t\t\t\t\tgenerateFragment();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Next'\n\t\t\tprimaryButtonDisabled={selectedCreateOption === null}\n\t\t\tsecondaryButtonText='Cancel'>\n\t\t\t<p>Start with a template or create a new fragment from scratch.</p>\n\t\t\t<div className={createFragmentTiles}>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.IMPORT_JSON); }}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.IMPORT_JSON}\n\t\t\t\t\tlabel='Import JSON'/>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.CHOOSE_TEMPLATE); }}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.CHOOSE_TEMPLATE}\n\t\t\t\t\tlabel='Pick a template'/>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => { setSelectedCreateOption(CreateOptions.FROM_SCRATCH); }}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.FROM_SCRATCH}\n\t\t\t\t\tlabel='Start from scratch'/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useEffect } from 'react';\n\nimport { Loading } from 'carbon-components-react';\n\nimport { css } from 'emotion';\nimport { getFragmentPreviewUrl } from '../utils/fragment-tools';\n\nconst fragmentImage = css`\n\twidth: auto;\n\theight: auto;\n\tmax-height: 173px;\n\tmax-width: 333px;\n\tdisplay: block;\n\tpadding-top: 8px;\n`;\nconst imagePlaceholderStyle = css`\n\theight: 173px;\n`;\nconst spinner = css`\n\tposition: absolute;\n\ttop: calc(50% - 44px - 32px);\n\twidth: calc(100% - 16px);\n\n\t.bx--loading {\n\t\tmargin: auto;\n\t}\n`;\n\nexport const FragmentPreview = ({ fragment, previewUrl, setPreviewUrl }: any) => {\n\tconst updatePreviewUrl = async () => {\n\t\tif (setPreviewUrl) {\n\t\t\tsetPreviewUrl(await getFragmentPreviewUrl(fragment));\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tupdatePreviewUrl();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [fragment])\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tpreviewUrl\n\t\t\t\t? <img\n\t\t\t\t\tloading='lazy'\n\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\talt={`fragment preview: ${fragment.title}`} />\n\t\t\t\t: <div className={imagePlaceholderStyle} />\n\t\t\t}\n\t\t\t<div className={spinner}>\n\t\t\t\t<Loading withOverlay={false} active={!previewUrl} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSkeletonText,\n\tTile\n} from 'carbon-components-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { FragmentPreview } from '../../components/fragment-preview';\nimport { getFragmentPreviewUrl } from '../../utils/fragment-tools';\nimport './fragment-tile.scss';\n\nexport const FragmentTile = ({\n\tfragment,\n\ttitle,\n\tto,\n\tlastModified,\n\tsetModalFragment\n}: any) => {\n\tconst history = useHistory();\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\tconst handleModalState = (modalAction: ModalActionType) => {\n\t\tsetModalFragment(fragment);\n\t\tdispatchModal({\n\t\t\ttype: modalAction,\n\t\t\tid: fragment.id\n\t\t});\n\t};\n\n\tconst resetPreview = async () => {\n\t\tsetPreviewUrl(await getFragmentPreviewUrl(fragment) as string);\n\t}\n\n\treturn (\n\t\t<div className='tile-wrapper'>\n\t\t\t<Tile className='tile-style' >\n\t\t\t\t<div className='tile-inner-wrapper'>\n\t\t\t\t\t<Link to={to}>\n\t\t\t\t\t\t<FragmentPreview\n\t\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\t\tpreviewUrl={previewUrl}\n\t\t\t\t\t\t\tsetPreviewUrl={setPreviewUrl}/>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className='fragment-info'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to={to} className='dashboard-link'>\n\t\t\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span>{lastModified ? lastModified : 'Last modified date unknown'}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<OverflowMenu\n\t\t\t\t\t\t\tclassName='fragment-overflow'\n\t\t\t\t\t\t\tariaLabel='Fragment options'\n\t\t\t\t\t\t\ticonDescription=''\n\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t(event: { stopPropagation: () => void; }) => { event.stopPropagation(); }\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Edit'\n\t\t\t\t\t\t\t\tonClick={() => { history.push(`/edit/${fragment.id}`); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Export'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setShareModal); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Duplicate'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setDuplicationModal); }}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Reset preview'\n\t\t\t\t\t\t\t\tonClick={resetPreview}/>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Remove'\n\t\t\t\t\t\t\t\tonClick={() => { handleModalState(ModalActionType.setDeletionModal); }}\n\t\t\t\t\t\t\t\tisDelete />\n\t\t\t\t\t\t</OverflowMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Tile>\n\t\t</div>\n\t);\n};\n\nexport const SkeletonFragmentTile = () => (\n\t<div className='tile-wrapper'>\n\t\t<Tile>\n\t\t\t<div className='tile-inner-wrapper-base'>\n\t\t\t\t<SkeletonText heading width='150px' />\n\t\t\t</div>\n\t\t</Tile>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { FragmentTile } from './fragment-tile';\n\n// import the img placeholder svg\nimport placeholder from './../../assets/dashboard-empty-state.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 150px;\n\talign-items: center;\n`;\n\nconst fragmentRowWrapper = css`\n\tmargin-top: 3rem;\n\tbackground: #f4f4f4;\n\tmin-width: 100%;\n\theight: 100%\n`;\n\nexport const FragmentTileList = ({ fragments, loaded, setModalFragment }: any) => {\n\tconst getTilesOrPlaceholder = () => {\n\t\tif ((!fragments || fragments.length === 0) && loaded) {\n\t\t\treturn (\n\t\t\t\t<div className={placeholderContainer}>\n\t\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t<img alt=\"No fragments exist\" src={placeholder} className={svgStyle} />\n\t\t\t\t\t\t<h3>You have no fragments here.</h3>\n\t\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\t\tTo build a new fragment, click <strong>New Fragment</strong>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn fragments.map((v: any) => (\n\t\t\t<FragmentTile\n\t\t\t\tkey={v.id}\n\t\t\t\t{...v}\n\t\t\t\tfragment={v}\n\t\t\t\tto={`/edit/${v.id}`}\n\t\t\t\t{...v.lastModified}\n\t\t\t\tsetModalFragment={setModalFragment}/>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className={fragmentRowWrapper}>\n\t\t\t{getTilesOrPlaceholder()}\n\t\t</div>\n\t);\n};\n","export const generateNewFragment = (\n\tfragment: any\n) => {\n\tconst fragmentID = `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\tconst fragmentName = 'New fragment';\n\n\treturn {\n\t\tid: fragmentID,\n\t\tlastModified: new Date().toISOString(),\n\t\ttitle: fragmentName,\n\t\tdata: fragment\n\t};\n};\n","import React, { useState } from 'react';\n\nimport { CreateFragmentModal } from './create-fragment-modal';\nimport { ChooseFragmentModal } from './choose-fragment-modal';\nimport { ImportJsonModal } from './import-json-modal';\n\nexport enum FragmentWizardModals {\n\tCREATE_FRAGMENT_MODAL,\n\tCHOOSE_FRAGMENT_MODAL,\n\tIMPORT_JSON_MODAL\n}\n\nexport const FragmentWizard = ({ shouldDisplay, setShouldDisplay }: any) => {\n\t// These are states which are shared amongst the three modals.\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<FragmentWizardModals | null>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t// This is used to indicate which modal was last visited and is used to go go back to the\n\t// correct previous modal.\n\tconst [lastVisitedModal, setLastVisitedModal]\n\t\t= useState<FragmentWizardModals>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\tconst [uploadedData, setUploadedData] = useState<any>({});\n\n\tconst modalSwitcher = () => {\n\t\tif (!shouldDisplay) {\n\t\t\treturn null;\n\t\t}\n\t\tswitch(displayedModal) {\n\t\t\tcase FragmentWizardModals.IMPORT_JSON_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ImportJsonModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CREATE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<CreateFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CHOOSE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ChooseFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData} />\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn modalSwitcher();\n};\n","import React, { useState } from 'react';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nimport { FragmentPreview } from '../../../components/fragment-preview';\nimport './choose-fragment-modal.scss';\n\nexport const ChooseFragmentModalTile = ({ fragment, selectedFragment, setSelectedFragment }: any) => {\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\n\treturn (\n\t\t<div className='modal-tile-wrapper' key={fragment.id}>\n\t\t\t<SelectableTile\n\t\t\t\tclassName='tile-style'\n\t\t\t\tonClick={() => setSelectedFragment(fragment)}\n\t\t\t\tselected={fragment === selectedFragment}>\n\t\t\t\t<div className='tile-inner-wrapper'>\n\t\t\t\t\t<FragmentPreview\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tpreviewUrl={previewUrl}\n\t\t\t\t\t\tsetPreviewUrl={setPreviewUrl} />\n\t\t\t\t\t<h3>{fragment.title}</h3>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{fragment.lastModified || 'Last modified date unknown'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</SelectableTile>\n\t\t</div>\n\t);\n};\n","import React, { useContext, useState } from 'react';\n\nimport {\n\tModal,\n\tInlineNotification,\n\tNotificationActionButton\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\n\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\nimport { warningNotificationProps } from '../../../utils/file-tools';\nimport { Col } from '../../../components';\nimport { getFragmentDuplicate, getFragmentTemplates } from '../../../utils/fragment-tools';\nimport './choose-fragment-modal.scss';\nimport { ChooseFragmentModalTile } from './choose-fragment-modal-tile';\n\nexport interface ChooseFragmentModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void,\n\tlastVisitedModal: FragmentWizardModals,\n\tuploadedData: any,\n\tsetUploadedData: (uploadedData: any) => void\n}\n\nexport const ChooseFragmentModal = (props: ChooseFragmentModalProps) => {\n\tconst [selectedFragment, setSelectedFragment] = useState<any>(null);\n\tconst { fragments, addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tif (selectedFragment === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentCopy = getFragmentDuplicate(\n\t\t\tfragments,\n\t\t\tselectedFragment,\n\t\t\t// When a new fragment is created from an existing template, it shouldn't\n\t\t\t// be a template by default.\n\t\t\t{ labels: selectedFragment?.labels?.filter((label: string) => label !== 'template') }\n\t\t);\n\n\t\taddFragment(fragmentCopy);\n\t\thistory.push(`/edit/${fragmentCopy.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tsize='lg'\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => { props.setShouldDisplay(false); }}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Done'\n\t\t\tprimaryButtonDisabled={!selectedFragment}\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t{\n\t\t\t\tprops.uploadedData.wasDataModified\n\t\t\t\t\t? <InlineNotification\n\t\t\t\t\t\t{ ...warningNotificationProps }\n\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<NotificationActionButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tUse demo data\n\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprops.uploadedData && props.uploadedData.originalData\n\t\t\t\t\t\t\t\t\t&& <NotificationActionButton\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\t\tdata: props.uploadedData.originalData,\n\t\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tUse unmodified data\n\t\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t} />\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<p>Choose a type of fragment and click done to start editing your new fragment</p>\n\t\t\t<div className='fragment-options'>\n\t\t\t\t<Col cols={{\n\t\t\t\t\tsm: 12,\n\t\t\t\t\tmd: 12,\n\t\t\t\t\tlg: 12\n\t\t\t\t}}>\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFragmentTemplates(fragments).map((fragment: any) => (\n\t\t\t\t\t\t\t<ChooseFragmentModalTile\n\t\t\t\t\t\t\t\tkey={fragment.id}\n\t\t\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\t\t\tselectedFragment={selectedFragment}\n\t\t\t\t\t\t\t\tsetSelectedFragment={setSelectedFragment} />\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Col>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { css } from 'emotion';\nimport {\n\tModal,\n\tFormItem,\n\tFileUploaderDropContainer,\n\tFileUploaderItem,\n\tTextArea\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\nimport { generateNewFragment } from './generate-new-fragment';\n\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\n\nconst fragmentOptions = css`\n\tmargin-left: 30px;\n\tmargin-right: 30px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\n\t// This is the viewport width that causes the selection tiles to overlap.\n\t@media screen and (max-width: 45rem) {\n\t\tflex-direction: column;\n\t}\n`;\n\nexport interface ImportJsonModalProps {\n\tshouldDisplay: boolean,\n\tsetShouldDisplay: (shouldDisplay: boolean) => void,\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void,\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void,\n\tlastVisitedModal: FragmentWizardModals,\n\tuploadedData: any,\n\tsetUploadedData: (uploadedData: any) => void,\n\tmultiple?: boolean\n}\n\nlet lastId = 0;\n\nconst uid = (prefix = 'id') => {\n\tlastId++;\n\treturn `${prefix}${lastId}`;\n}\n\nexport const ImportJsonModal = (props: ImportJsonModalProps) => {\n\tconst { addFragment } = useContext(GlobalStateContext);\n\tconst [files, setFiles] = useState([] as any[]);\n\tconst [jsonString, _setJsonString] = useState('');\n\tconst [fragmentJson, setFragmentJson] = useState('');\n\tconst [jsonParseError, setJsonParseError] = useState('');\n\n\tconst setJsonString = (js: string) => {\n\t\t_setJsonString(js);\n\n\t\ttry {\n\t\t\tif (js) {\n\t\t\t\tsetFragmentJson(JSON.parse(js));\n\t\t\t}\n\t\t\tsetJsonParseError('');\n\t\t} catch (e) {\n\t\t\tsetJsonParseError((e as any).toString());\n\t\t}\n\t};\n\n\tconst handleDrop = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tconst handleDragover = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('drop', handleDrop);\n\t\tdocument.addEventListener('dragover', handleDragover);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('drop', handleDrop);\n\t\t\tdocument.removeEventListener('dragover', handleDragover);\n\t\t};\n\t}, []);\n\n\tconst history = useHistory();\n\tconst uploadFile = async (fileToUpload: any) => {\n\t\t// file size validation\n\t\tif (fileToUpload.filesize > 512000) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'File size exceeds limit',\n\t\t\t\terrorBody: '500kb max file size. Select a new file and try again.',\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// file type validation\n\t\tif (fileToUpload.invalidFileType) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'Invalid file type',\n\t\t\t\terrorBody: `\"${fileToUpload.name}\" does not have a valid file type.`,\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// reading\n\t\tvar reader = new FileReader();\n\t\treader.readAsText(fileToUpload.file, \"UTF-8\");\n\t\treader.onload = (event) => {\n\t\t\tsetJsonString(event.target?.result as string);\n\t\t}\n\t\treader.onerror = function (evt) {\n\t\t\tconsole.log(\"oops\")\n\t\t}\n\n\t\tconst updatedFile = {\n\t\t\t...fileToUpload,\n\t\t\tstatus: 'complete',\n\t\t\ticonDescription: 'Upload complete',\n\t\t};\n\t\tsetFiles((files) =>\n\t\t\tfiles.map((file) =>\n\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t)\n\t\t);\n\n\t\t// show x icon after 1 second\n\t\tsetTimeout(() => {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t}, 1000);\n\t};\n\n\tconst onAddFiles = useCallback(\n\t\t(evt, { addedFiles }) => {\n\t\t\tevt.stopPropagation();\n\t\t\tconst newFiles = addedFiles.map((file: any) => ({\n\t\t\t\tuuid: uid(),\n\t\t\t\tfile: file,\n\t\t\t\tname: file.name,\n\t\t\t\tfilesize: file.size,\n\t\t\t\tstatus: 'uploading',\n\t\t\t\ticonDescription: 'Uploading',\n\t\t\t\tinvalidFileType: file.invalidFileType,\n\t\t\t}));\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\tif (props.multiple) {\n\t\t\t\tsetFiles([...files, ...newFiles]);\n\t\t\t\tnewFiles.forEach(uploadFile);\n\t\t\t} else if (newFiles[0]) {\n\t\t\t\tsetFiles([newFiles[0]]);\n\t\t\t\tuploadFile(newFiles[0]);\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[files, props.multiple]\n\t);\n\n\tconst handleFileUploaderItemClick = useCallback(\n\t\t(_, { uuid: clickedUuid }) =>\n\t\t\tsetFiles(files.filter(({ uuid }) => clickedUuid !== uuid)),\n\t\t[files]\n\t);\n\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(fragmentJson);\n\n\t\taddFragment(generateFragment);\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => { props.setShouldDisplay(false); }}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Import JSON'\n\t\t\tprimaryButtonText='Done'\n\t\t\tprimaryButtonDisabled={ !jsonString || jsonParseError }\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t<div className={fragmentOptions}>\n\t\t\t\t<FormItem>\n\t\t\t\t\t<p className='bx--file--label'>Upload file</p>\n\t\t\t\t\t<p className='bx--label-description'>\n\t\t\t\t\t\tMax file size is 500kb. Supported file type is .json\n\t\t\t\t\t</p>\n\t\t\t\t\t<FileUploaderDropContainer accept={['.json']} onAddFiles={onAddFiles} />\n\t\t\t\t\t<div className={'bx--file-container'} style={{ width: '100%' }}>\n\t\t\t\t\t\t{files.map(\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\tuuid,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tfilesize,\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\ticonDescription,\n\t\t\t\t\t\t\t\tinvalid,\n\t\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<FileUploaderItem\n\t\t\t\t\t\t\t\t\tkey={uid()}\n\t\t\t\t\t\t\t\t\tuuid={uuid}\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tfilesize={filesize}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t\t\t\t\t\tsize={500}\n\t\t\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t\t\t\ticonDescription={iconDescription}\n\t\t\t\t\t\t\t\t\tinvalid={invalid}\n\t\t\t\t\t\t\t\t\tonDelete={handleFileUploaderItemClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</FormItem>\n\t\t\t\t<code style={{ color: '#a00', marginBottom: '10pt', width: '100%' }}>\n\t\t\t\t\t<pre>{ jsonParseError }</pre>\n\t\t\t\t</code>\n\t\t\t\t<TextArea\n\t\t\t\t\tlabelText='JSON to load'\n\t\t\t\t\tplaceholder=\"{'your': 'json', 'goes': 'here'}\"\n\t\t\t\t\thelperText=''\n\t\t\t\t\tvalue={jsonString}\n\t\t\t\t\tonChange={(event: any) => setJsonString(event.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, {\n\tuseState,\n\tuseContext,\n\tuseEffect\n} from 'react';\nimport { css } from 'emotion';\nimport { DashboardSearch, SortDirection } from './dashboard-search';\nimport { FragmentGroupDisplayed, DashboardHeader } from './dashboard-header';\n\nimport {\n\tCol,\n\tMain,\n\tRow\n} from './../../components';\nimport { FragmentTileList } from './fragment-tile-list';\nimport { FragmentWizard } from './fragment-wizard/fragment-wizard';\nimport { FragmentModal } from '../edit/fragment-modal';\nimport { GlobalStateContext } from '../../context';\nimport { getFragmentTemplates } from '../../utils/fragment-tools';\n\nconst fragmentSort = (sortDirection: SortDirection) => function(a: any, b: any) {\n\tif (sortDirection === SortDirection.Descending) {\n\t\treturn Date.parse(a.lastModified) - Date.parse(b.lastModified);\n\t}\n\treturn Date.parse(b.lastModified) - Date.parse(a.lastModified);\n};\n\n// styles for the header (title and content switcher)\n// to override carbon styling for <main>\nconst headerRowSyles = css`\n\tbackground: white;\n\tpadding: 0 2rem;\n\tmargin: 0 -2rem;\n\tpadding-top: 2rem;\n\tmargin-top: -2rem;\n\t.bx--col {\n\t\tpadding: 0;\n\t}\n`;\n\n// additional styles for the search row\nconst searchRowStyles = css`\n\tpadding-right: 0;\n\tpadding-left: 1rem;\n\tmargin: 0 -2rem;\n\tborder-bottom: 1px solid #d6d6d6;\n\t.bx--col {\n\t\tpadding-right: 0;\n\t}\n`;\n\nexport const Dashboard = () => {\n\tconst { fragments, updateFragments } = useContext(GlobalStateContext);\n\tconst [fragmentGroupDisplayed, setFragmentGroupDisplayed] = useState(FragmentGroupDisplayed.LocalOnly);\n\tconst [fragmentTitleFilter, setFragmentTitleFilter] = useState('');\n\tconst [sortDirection, setSortDirection] = useState(SortDirection.Ascending);\n\tconst [displayWizard, setDisplayWizard] = useState(false);\n\n\tuseEffect(() => {\n\t\tupdateFragments(fragments);\n\t// we don't want to run this effect when fragments change because it creates a loop\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\tdocument.title = 'Carbon Components Builder • UI Fragments Composer';\n\t}, []);\n\n\tconst filterFragments = (fragments: any) => fragments.filter((fragment: any) => fragment?.title?.toLowerCase()\n\t\t?.includes(fragmentTitleFilter.toLowerCase()) && !fragment.hidden)\n\t\t?.sort(fragmentSort(sortDirection));\n\n\tlet displayedFragments;\n\n\tswitch (fragmentGroupDisplayed) {\n\t\tcase FragmentGroupDisplayed.Templates: {\n\t\t\tdisplayedFragments = filterFragments(getFragmentTemplates(fragments));\n\t\t\tbreak;\n\t\t}\n\t\tcase FragmentGroupDisplayed.AllFragments:\n\t\tdefault:\n\t\t\tdisplayedFragments = filterFragments(fragments);\n\t\t\tbreak;\n\t}\n\tconst [modalFragment, setModalFragment] = useState<any>(null);\n\n\treturn (\n\t\t<>\n\t\t\t<Main style={{ marginLeft: '0px' }}>\n\t\t\t\t<Row styles={headerRowSyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardHeader\n\t\t\t\t\t\t\tonDisplayedSwitchHandler={setFragmentGroupDisplayed}\n\t\t\t\t\t\t\tfragmentGroupDisplayed={fragmentGroupDisplayed} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row styles={searchRowStyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardSearch\n\t\t\t\t\t\t\tonSearchHandler={setFragmentTitleFilter}\n\t\t\t\t\t\t\tonSortHandler={setSortDirection}\n\t\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\t\tdisplayWizard={displayWizard}\n\t\t\t\t\t\t\tsetDisplayWizard={setDisplayWizard} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FragmentTileList\n\t\t\t\t\t\t\t\tfragments={displayedFragments}\n\t\t\t\t\t\t\t\tsetModalFragment={setModalFragment} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Main>\n\t\t\t<FragmentWizard\n\t\t\t\tshouldDisplay={displayWizard}\n\t\t\t\tsetShouldDisplay={setDisplayWizard} />\n\t\t\t{modalFragment && <FragmentModal fragment={modalFragment} />}\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport { useHistory } from 'react-router-dom';\nimport { Header } from '../components/header';\n// import the img placeholder svg\nimport placeholder from '../assets/chart-404.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 64px;\n\talign-items: center;\n`;\n\nexport const NotFound = () => {\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className={placeholderContainer}>\n\t\t\t\t<img alt=\"Fragment not found\" src={placeholder} className={svgStyle} />\n\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t<h3>404: Not found</h3>\n\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\tThis page does not exist, click  <strong>Go back</strong><br /> to return.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button style={{ marginTop: '1rem' }} onClick={() => history.goBack()}>Go back</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { ErrorInfo } from 'react';\nimport { NotFound } from './not-found';\n\n/* Currently, there lacks react hooks with equivalent\neffect of getDerivedStateFromError and componentDidCatch,\ncurrent component based on: https://gist.github.com/andywer/800f3f25ce3698e8f8b5f1e79fed5c9c,\nthis should be written once the above hooks mentioned above are released.\n*/\n\ntype ErrorHandler = (error: Error, info: ErrorInfo) => void\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => React.ReactNode\n\ntype ErrorState = { error?: Error }\n\nfunction Catch<Props extends {}>(\n\tcomponent: ErrorHandlingComponent<Props>,\n\terrorHandler?: ErrorHandler\n): React.ComponentType<Props> {\n\treturn class Boundary extends React.Component<Props, ErrorState> {\n\t\tstate: ErrorState = { error: undefined }\n\n\t\tstatic getDerivedStateFromError(error: Error) {\n\t\t\treturn { error };\n\t\t}\n\n\t\tcomponentDidCatch(error: Error, info: React.ErrorInfo) {\n\t\t\tif (errorHandler) {\n\t\t\t\terrorHandler(error, info);\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\treturn component(this.props, this.state.error);\n\t\t}\n\t};\n}\n\ntype Props = {\n\tchildren: React.ReactNode\n}\n\nexport const ErrorBoundary = Catch((props: Props, error?: Error) => {\n\tif (error) {\n\t\treturn <NotFound />;\n\t}\n\treturn <>{props.children}</>;\n});\n","import React, { useState } from 'react';\nimport { HeaderContainer } from 'carbon-components-react';\nimport { Header } from '../components/index';\n\nexport const UIShell = () => {\n\tconst [isSideNavExpanded, setIsSideNavExpanded] = useState(false);\n\n\treturn (\n\t\t<HeaderContainer\n\t\t\trender={() => (\n\t\t\t\t<>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tisSideNavExpanded={isSideNavExpanded}\n\t\t\t\t\t\tsetIsSideNavExpanded={setIsSideNavExpanded} />\n\t\t\t\t</>\n\t\t\t)} />\n\t);\n};\n","import React from 'react';\nimport {\n\tRoute, BrowserRouter as Router, Switch\n} from 'react-router-dom';\nimport { Notification } from './components/index';\nimport {\n\tDashboard,\n\tEdit,\n\tErrorBoundary,\n\tNotFound\n} from './routes';\nimport { GlobalStateContextProvider } from './context/global-state-context';\nimport { ModalContextProvider } from './context/modal-context';\nimport { NotificationContextProvider } from './context/notification-context';\nimport { UIShell } from './components/ui-shell';\nimport { css } from 'emotion';\n\nconst app = css`\n\tnav.bx--side-nav--expanded + div#edit-content {\n\t\tpadding-left: calc(2.25rem + 16rem);\n\t}\n\t// This is the viewport width that causes the edit header items to overlap\n\t@media screen and (max-width: 38.75rem) {\n\t\tnav.bx--side-nav--expanded + div#edit-content {\n\t\t\tpadding-left: 36px;\n\t\t}\n\t}\n`;\n\nexport const App = () => (\n\t<Router basename='carbon-components-builder'>\n\t\t<div className={app}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<GlobalStateContextProvider>\n\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t<UIShell />\n\t\t\t\t\t\t<Notification />\n\t\t\t\t\t\t<ModalContextProvider>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path='/' exact component={Dashboard} />\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath={['/edit', '/edit/:id']}\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tcomponent={Edit} />\n\t\t\t\t\t\t\t\t<Route path=\"*\" component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</ModalContextProvider>\n\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t</GlobalStateContextProvider>\n\t\t\t</ErrorBoundary>\n\t\t\t<span id=\"forkongithub\">\n\t\t\t\t<a href=\"https://github.com/IBM/carbon-components-builder\">Fork on GitHub</a>\n\t\t\t</span>\n\t\t</div>\n\t</Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// disable eslint beacuse reasons\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.UI_BASE_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if UI_BASE_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.UI_BASE_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line\nconst render = (Component: any) => ReactDOM.render(<Component/>, document.getElementById('root'));\n\nrender(App);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n\tmodule.hot.accept('./app', () => {\n\t\tconsole.info('App updated');\n\t\tconst Next = require('./app').App;\n\t\trender(Next);\n\t});\n}\n"],"sourceRoot":""}