{"version":3,"sources":["assets/component-icons/button.svg","assets/component-icons/accordion.svg","assets/component-icons/accordion-item.svg","assets/component-icons/checkbox.svg","assets/component-icons/grid.svg","assets/component-icons/number-input.svg","assets/component-icons/tag.svg","assets/component-icons/search.svg","assets/component-icons/text.svg","assets/component-icons/text-area.svg","assets/component-icons/text-input.svg","assets/component-icons/link.svg","assets/component-icons/tile.svg","assets/component-icons/tile-clickable.svg","assets/component-icons/tile-expandable.svg","assets/component-icons/tile-selectable.svg","assets/component-icons/tile-selectable-group.svg","assets/component-icons/tile-radio.svg","assets/dashboard-empty-state.svg","assets/chart-404.svg","routes/edit/tools.ts","context/global-state-context.tsx","context/notification-context.tsx","context/fragments-context-helper.ts","fragment-components/a-component.tsx","components/css-class-selector.tsx","utils/fragment-tools.ts","fragment-components/accordion/a-accordion.tsx","fragment-components/accordion/a-accordion-item.tsx","fragment-components/a-button.tsx","fragment-components/a-checkbox.tsx","fragment-components/a-column.tsx","fragment-components/a-fragment.tsx","fragment-components/a-grid.tsx","fragment-components/a-numberinput.tsx","fragment-components/a-row.tsx","fragment-components/a-tag.tsx","fragment-components/a-searchinput.tsx","fragment-components/a-text.tsx","fragment-components/a-textarea.tsx","fragment-components/a-textinput.tsx","fragment-components/a-link.tsx","fragment-components/tiles/tile-morphism.tsx","fragment-components/tiles/a-tile.tsx","fragment-components/tiles/a-clickable-tile.tsx","fragment-components/tiles/a-expandable-tile.tsx","fragment-components/tiles/a-tile-fold.tsx","fragment-components/tiles/a-selectable-tile.tsx","fragment-components/tiles/a-selectable-tile-group.tsx","fragment-components/tiles/a-radio-tile.tsx","fragment-components/tiles/a-radio-tile-group.tsx","fragment-components/index.ts","components/adder.tsx","components/header.tsx","components/header-menu-item-link.tsx","context/modal-context.tsx","components/link-button.tsx","styles.ts","components/main.tsx","components/fragment.tsx","components/grid.tsx","components/notification.tsx","routes/edit/share-options/share-options-modal.tsx","routes/edit/share-options/exports/create-fragment-sandbox.ts","routes/edit/share-options/exports/frameworks/react-fragment.ts","routes/edit/share-options/exports/frameworks/angular-fragment.ts","routes/edit/share-options/exports/frameworks/vanilla-fragment.ts","routes/edit/share-options/exports/frameworks/vue-fragment.ts","utils/file-tools.ts","routes/edit/share-options/exports/export-code-modal.tsx","components/selection-tile.tsx","routes/edit/share-options/exports/export-image-modal.tsx","routes/edit/index.tsx","routes/edit/duplicate-fragment-modal.tsx","routes/edit/delete-fragment-modal.tsx","routes/edit/fragment-modal.tsx","routes/edit/edit-header.tsx","components/element-tile.tsx","routes/edit/elements-pane.tsx","routes/edit/style-pane.tsx","routes/edit/code-pane.tsx","routes/edit/export-pane.tsx","routes/edit/selected-component-breadcrumbs.tsx","routes/edit/style-context-pane.tsx","routes/edit/code-context-pane.tsx","routes/dashboard/dashboard-search.tsx","routes/dashboard/dashboard-header.tsx","routes/dashboard/fragment-wizard/create-fragment-modal.tsx","components/fragment-preview.tsx","routes/dashboard/fragment-tile.tsx","routes/dashboard/fragment-tile-list.tsx","routes/dashboard/fragment-wizard/generate-new-fragment.ts","routes/dashboard/fragment-wizard/fragment-wizard.tsx","routes/dashboard/fragment-wizard/choose-fragment-modal-tile.tsx","routes/dashboard/fragment-wizard/choose-fragment-modal.tsx","routes/dashboard/fragment-wizard/import-json-modal.tsx","routes/dashboard/index.tsx","routes/not-found.tsx","routes/error-boundary.tsx","components/ui-shell.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","drag","event","dragObj","stopPropagation","dataTransfer","setData","JSON","stringify","GlobalStateContext","createContext","displayName","NotificationActionType","useFragment","id","context","useContext","history","useHistory","console","info","_","fragments","updateFragment","pathSegments","location","pathname","split","length","find","fragment","GlobalStateContextProvider","localFragments","children","useState","parse","localStorage","getItem","Array","isArray","filter","_setFragments","actionHistory","setActionHistory","actionHistoryIndex","setActionHistoryIndex","styleClasses","_setStyleClasses","setFragments","frags","setItem","addAction","action","newActionHistoryIndex","actionClone","slice","setStyleClasses","sc","updateActionHistory","csString","canUndo","updatedFragments","map","f","assign","setAction","newIndex","canRedo","fragmentHelpers","addFragment","duplicate","expandedFragments","concat","getFragment","fragmentId","updateFragments","some","actionFragment","updatedFragment","every","toggleFragmentVisibility","hidden","removeFragment","removeFragments","ids","remainingFragments","getFragmentHelpers","useEffect","filteredFragments","Provider","value","undoAction","redoAction","clearActionHistory","NotificationContext","initialState","notifications","notificationCounter","NotificationReducer","state","type","REMOVE_NOTIFICATION","notification","data","ADD_NOTIFICATION","NotificationContextProvider","useReducer","headerStyle","css","iconStyle","AComponentCodeUI","selectedComponent","className","dropStyle","dropStyleBefore","cx","dropStyleAfter","AComponent","componentObj","select","selected","remove","headingCss","setFragment","showDragOverIndicator","setShowDragOverIndicator","dragOverPosition","setDragOverPosition","holderRef","useRef","isDragOverBefore","current","offsetWidth","offsetHeight","ref","onClick","draggable","onDragStart","component","onDragEnter","onDragLeave","onDragOver","rect","currentTarget","getBoundingClientRect","pageX","left","pageY","top","onDrop","preventDefault","getData","updatedState","getParentComponent","items","indexOf","compareClasses","sc1","sc2","name","CssClassSelector","selectedClasses","setSelectedClasses","getAvailableClasses","ssc","sort","availableClasses","setAvailableClasses","style","marginTop","FormLabel","styleClass","Tag","key","onClose","c","deselectStyleClass","selectStyleClass","ComponentCssClassSelector","setComponent","cssClasses","sleep","ms","Promise","resolve","setTimeout","getFragmentPreview","props","a","element","document","createElement","position","zIndex","width","height","minHeight","ReactDOM","render","React","Fragment","body","appendChild","domtoimage","toBlob","imageBlob","getFragmentTemplates","labels","includes","getAllComponentStyleClasses","forEach","cssClass","co","coClasses","getAllFragmentStyleClasses","tagNameFromFragment","kebabCase","title","classNameFromFragment","upperFirst","camelCase","allClasses","Object","values","hasFragmentStyleClasses","hasComponentStyleClasses","item","getUniqueFragmentName","baseName","nameRegEx","RegExp","String","raw","nameMatch","match","count","nameBase","replace","Number","parseInt","names","push","highestNumber","n","isNaN","b","shift","getRandomId","Math","random","toString","getFragmentDuplicate","overrides","fragmentCopy","getFragmentPreviewUrl","renderProps","preview","format","reader","FileReader","readAsDataURL","Blob","onloadend","result","reactClassNamesFromComponentObj","cc","join","angularClassNamesFromComponentObj","nameStringToVariableString","AAccordionStyleUI","sizeItems","text","alignItems","Dropdown","label","titleText","initialSelectedItem","size","itemToString","onChange","selectedItem","align","AAccordion","rest","Accordion","componentInfo","styleUI","renderComponents","accordionItem","keywords","defaultComponentObj","image","codeExport","angular","inputs","json","codeContext","outputs","imports","code","jsonToTemplate","react","undefined","AAccordionItemStyleUI","TextInput","labelText","Checkbox","checked","disabled","AAccordionItem","parentComponent","addAccordionItem","offset","active","topAction","bottomAction","AccordionItem","hideFromElementsPane","child","AButtonStyleUI","kindItems","kind","AButton","Button","ACheckboxStyleUI","ACheckboxCodeUI","ACheckbox","codeUI","helpIconStyle","AColumnStyleUI","onNumInputchange","imaginaryTarget","isAccordionOpen","setIsAccordionOpen","small","smallSpan","smallOffset","medium","mediumSpan","mediumOffset","large","largeSpan","largeOffset","xLarge","xLargeSpan","xLargeOffset","max","maxSpan","maxOffset","href","target","rel","open","NumberInput","min","addStyle","addStyleLeft","addStyleRight","AColumn","addCell","Column","sm","span","md","lg","xlg","column","isNotDirectExport","AFragmentStyleUI","LinkButton","renderIcon","Edit32","to","showOutline","AFragmentCodeUI","showOutlineStyle","AFragment","pointerEvents","globalState","subFragment","otherImports","AGridStyleUI","condensed","fullWidth","narrow","AGrid","Grid","getCellAttributeString","cell","sizeShort","sizeLong","spanString","offsetString","spanAndOffset","row","getCellParamsString","ANumberInputStyleUI","hideLabel","helperText","step","warnText","invalidText","light","ANumberInputCodeUI","ANumberInput","warn","hideSteppers","readOnly","invalid","allowEmpty","round","ARowStyleUI","addStyleTop","addStyleBottom","ARow","addRow","ATagStyleUI","typeItems","ATag","defaultProps","ASearchInputStyleUI","inputSize","placeholder","defaultValue","ASearchInputCodeUI","ASearchInput","Search","ATextStyleUI","AText","ATextAreaStyleUI","ATextAreaCodeUI","ATextArea","TextArea","ATextInputStyleUI","inputType","ATextInputCodeUI","ATextInput","ALinkStyleUI","inline","ALinkCodeUI","ALink","Link","getExpandableTileItems","expandableTile","groupToSingle","tiles","tile","tileItems","defaultComponent","componentIndex","TileMorphism","tileTypes","expanded","outline","standalone","tileGroup","childDefaultComponent","legend","groupToGroup","formItemName","singleToGroup","singleToSingle","ATileStyleUI","ATileCodeUI","ATile","Tile","AClickableTileStyleUI","AClickableTileCodeUI","AClickableTile","AExpandableStyleUI","AExpandableTileCodeUI","AExpandableTile","getFoldObjects","aboveFold","belowFold","fold","ATileFoldStyleUI","ATileFold","classes","ASelectableTileStyleUI","ASelectableTileCodeUI","preventCheckEvent","ASelectableTile","addTile","tileElement","getElementById","labelElement","parentElement","querySelector","setAttribute","stateFunction","additionalCode","handleSelectableTileChange","ASelectableTileGroupStyleUI","ASelectableTileGroupCodeUI","ASelectableTileGroup","role","aria-label","ARadioTileStyleUI","defaultChecked","ARadioTileCodeUI","ARadioTile","addRadio","RadioTile","ARadioTileGroupStyleUI","ARadioTileGroupCodeUI","ARadioTileGroup","allComponents","accordion","accordionitem","button","checkbox","grid","tag","textarea","textinput","searchinput","numberinput","link","clickabletile","expandabletile","tilefold","selectabletile","selectableTileGroup","radiotile","radioTileGroup","componentHeaderZIndex","Adder","leftAction","rightAction","addButtonsCss","Header","isSideNavExpanded","setIsSideNavExpanded","headerName","tabIndex","isActive","prefix","onKeyDown","HeaderMenuItemLinkBase","this","Component","HeaderMenuItemLinkRouter","withRouter","forwardRef","ModalActionType","ModalType","main","Main","canvas","allowDrop","getSelectedComponent","getComponentById","i","selectedComponentId","stateWithoutComponent","componentId","findIndex","initializeIds","forceNewIds","updatedList","list","dropInIndex","dropInId","parent","SkeletonPlaceholder","drop","styles","content","Row","Col","cols","notificationStyle","minWidth","notificationAreaStyle","Notification","dispatch","lowContrast","aria-live","subtitle","message","caption","onCloseButtonClick","onNotificationClose","actions","actionFunction","actionText","ModalContext","ShareOptionsModals","Exports","ShowModal","FragmentID","modalReducer","setDuplicationModal","DUPLICATION","setDeletionModal","DELETION","setShareModal","SHARING","setExportModal","EXPORT","closeModal","ModalContextProvider","modal","createFragmentSandbox","fragmentTemplate","files","keys","filePath","LZString","compressToBase64","source","options","formatPrettier","formatOptions","plugins","parserBabel","trailingComma","useTabs","formatOptionsCss","parser","parserCss","addIfNotExist","arr","getAdditionalCodeAsString","collectedCode","getAdditionalCode","entries","otherImportsFromComponentObj","sortedUniq","generateTemplate","carbonImportsString","jsonToCarbonImports","reduce","string","curr","template","createReactApp","sharedComponents","jsonToSharedComponents","componentJs","componentScss","dependencies","emotion","formatOptionsTypescript","formatOptionsHtml","parserHtml","jsonToAngularImports","getComponentCode","componentCode","subFragments","getAllSubfragments","getAngularInputsFromJson","getOne","getAngularOutputsFromJson","createAngularApp","tagName","getAllComponentsCode","appComponentHtml","appModule","fragmentTagMap","dataAndOptions","saveBlob","blob","fileName","url","URL","createObjectURL","anchor","download","click","saveFile","revokeObjectURL","warningNotificationProps","notificationType","exportCodeModalStyle","codeSnippetWrapper","titleWrapper","codeSnippet","ExportCode","displayedModal","setDisplayedModal","modalState","dispatchModal","jsonCode","vanillaCode","fragmentData","fragmentType","d3","createVanillaApp","reactCode","angularCode","vueCode","vue","createVueApp","generateSandboxUrl","parameters","Modal","hasForm","CODE_EXPORTS","onRequestClose","primaryButtonText","secondaryButtonText","onRequestSubmit","onSecondarySubmit","SHARE_OPTIONS","modalHeading","Tabs","Tab","CodeSnippet","copyButtonDescription","tileFooter","SelectionTile","icon","exportSettingForm","exportSettingFormGroup","previewContainer","selectInputWH","selectInput","fragmentImage","updatePreviewUrl","log","handleResize","doInputChange","debounce","doUpdatePreviewSize","ExportModalSettings","handleChange","onDimensionChange","ratioLock","curRatio","toFixed","numInputOnchange","parseFloat","numInputOnClick","inputChange","Form","fragmentName","Select","unit","SelectItem","ExportImageModal","exportSettings","setInputs","previewUrl","setPreviewUrl","isPerformingAction","setIsPerformingAction","previewContainerRef","imageContainerSize","setImageContainerSize","window","addEventListener","removeEventListener","getPreviewSize","fitRatio","previewSize","imageUrl","onSubmit","mimeType","extension","then","IMAGE_EXPORTS","display","src","alt","Loading","exportOptionTileWrapper","exportOptionsWrapper","SelectedLeftPane","ShareOptionsModal","selectedExportOption","shareOptionsState","setShareOptionsState","handleExportSelection","CODE","IMAGE","primaryButtonDisabled","shareModalSwitcher","DuplicateFragmentModal","dispatchNotification","useLocation","DeleteFragmentModal","danger","FragmentModal","editHeader","toolBarSeparator","actionIconStyle","fragmentEditToolBar","EditHeader","lastModified","elementTileStyle","ElementTile","searchStyle","elementTileListStyle","ElementsPane","filterString","setFilterString","microLayouts","shouldShow","matches","leftPane","leftPaneHeader","searchContainerStyle","StylePane","selectedStyleClassId","setSelectedStyleClassId","getSelectedClass","updateSelectedClass","newClass","selectedClassIndex","Add16","iconDescription","hasIconOnly","newStyleClass","getUniqueClass","uniqueNamesGenerator","dictionaries","adjectives","colors","animals","separator","styleClassId","CodePane","ExportPane","SelectedComponentBreadcrumbs","Breadcrumb","noTrailingSlash","ancestors","unshift","getAncestors","BreadcrumbItem","isCurrentPage","nativeEvent","selectComponent","styleContextPaneStyle","StyleContextPane","showComponentStyleOptions","TooltipDefinition","tooltipText","direction","CodeContextPane","showComponentCodeOptions","transitionDetails","editPageContent","sideRail","rightPanel","actionsStyle","SortDirection","Edit","params","NONE","selectedLeftPane","setSelectedLeftPane","onRailClick","clickedLeftPane","ELEMENTS","STYLE","SideNav","isRail","SideNavItems","SideNavLink","Development16","ColorPalette16","Code16","Export16","Copy32","TrashCan32","dashboardSearchWrapper","searchInput","sortButton","sortOverflowItem","FragmentGroupDisplayed","DashboardSearch","onSearchHandler","onSortHandler","displayWizard","setDisplayWizard","sortDirection","placeHolderText","OverflowMenu","ariaLabel","OverflowMenuItem","itemText","Ascending","Descending","CreateOptions","dashboardHeaderWrapper","fragmentTitle","contentSwitcher","DashboardHeader","onDisplayedSwitchHandler","fragmentGroupDisplayed","ContentSwitcher","selectedIndex","Switch","AllFragments","Templates","imagePlaceholderStyle","spinner","FragmentPreview","loading","withOverlay","FragmentTile","setModalFragment","handleModalState","modalAction","resetPreview","isDelete","svgStyle","placeholderContainer","fragmentRowWrapper","FragmentTileList","loaded","v","textAlign","generateNewFragment","Date","toISOString","createFragmentTiles","createFragmentTile","FragmentWizardModals","CreateFragmentModal","selectedCreateOption","setSelectedCreateOption","shouldDisplay","shouldSubmitOnEnter","selectorPrimaryFocus","setShouldDisplay","setLastVisitedModal","CREATE_FRAGMENT_MODAL","IMPORT_JSON","IMPORT_JSON_MODAL","FROM_SCRATCH","CHOOSE_FRAGMENT_MODAL","generatedFragment","generateFragment","CHOOSE_TEMPLATE","ChooseFragmentModalTile","selectedFragment","setSelectedFragment","ChooseFragmentModal","lastVisitedModal","uploadedData","wasDataModified","setUploadedData","originalData","fragmentOptions","lastId","uid","ImportJsonModal","setFiles","jsonString","_setJsonString","fragmentJson","setFragmentJson","jsonParseError","setJsonParseError","setJsonString","js","e","handleDrop","handleDragover","uploadFile","fileToUpload","filesize","updatedFile","status","errorSubject","errorBody","file","uuid","invalidFileType","readAsText","onload","onerror","onAddFiles","useCallback","evt","addedFiles","newFiles","multiple","handleFileUploaderItemClick","clickedUuid","FormItem","FileUploaderDropContainer","accept","FileUploaderItem","onDelete","color","marginBottom","FragmentWizard","modalSwitcher","headerRowSyles","searchRowStyles","Dashboard","LocalOnly","setFragmentGroupDisplayed","fragmentTitleFilter","setFragmentTitleFilter","setSortDirection","displayedFragments","filterFragments","toLowerCase","fragmentSort","modalFragment","marginLeft","NotFound","goBack","errorHandler","ErrorBoundary","error","UIShell","HeaderContainer","app","Boolean","hostname","basename","path","exact","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.166d835e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.f75955a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/accordion.86ae9a9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/accordion-item.9c9ebfb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.d3c186e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/grid.d052e9f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/number-input.7c0b9515.svg\";","module.exports = __webpack_public_path__ + \"static/media/tag.e8c392a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.d4e4d083.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.e9252250.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-area.947a0503.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-input.e389934c.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.bd08bf66.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile.3a252328.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-clickable.2c08592b.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-expandable.84f6f4fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-selectable.cdaf5fdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-selectable-group.bd4342ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-radio.342a2a36.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard-empty-state.5e050054.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart-404.9bc8debd.svg\";","export const drag = (event: any, dragObj: any) => {\n\tevent.stopPropagation();\n\tevent.dataTransfer.setData('drag-object', JSON.stringify(dragObj));\n};\n","import React, {\n\tcreateContext,\n\tuseEffect,\n\tuseContext,\n\tuseState\n} from 'react';\nimport { useHistory } from 'react-router';\nimport assign from 'lodash/assign';\nimport { getFragmentHelpers } from './fragments-context-helper';\n\nconst GlobalStateContext: React.Context<any> = createContext(null);\nGlobalStateContext.displayName = 'GlobalStateContext';\n\nexport const useFragment = (id?: string) => {\n\tconst context = useContext(GlobalStateContext);\n\tconst history = useHistory();\n\n\tif (!context) {\n\t\t// this happens when rendering, which is fine because it's used\n\t\t// in AComponent to update the state of the whole fragment due to\n\t\t// user interaction - functionality not needed for render only\n\t\tconsole.info(\"Rendering only, won't be able to update context\");\n\t\treturn [{}, (_: any) => { }];\n\t}\n\n\tconst { fragments, updateFragment } = context;\n\n\tif (!id) {\n\t\tconst location = history.location.pathname;\n\t\tconst pathSegments = location.split('/');\n\t\tid = pathSegments[pathSegments.length - 1];\n\t}\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\tconst setFragment = (fragment: any) => {\n\t\tupdateFragment(fragment);\n\t};\n\treturn [fragment, setFragment];\n};\n\nconst validInitialFragments = (localFragments: any[] | undefined) => {\n\tif (!localFragments || !Array.isArray(localFragments)) {\n\t\treturn [];\n\t}\n\n\treturn localFragments.filter((fragment: any) => !!fragment.id && typeof fragment.id === 'string');\n};\n\nconst GlobalStateContextProvider = ({ children }: any) => {\n\tconst [fragments, _setFragments] = useState<any[]>(\n\t\tvalidInitialFragments(JSON.parse(localStorage.getItem('localFragments') as string)) || []\n\t);\n\tconst [actionHistory, setActionHistory] = useState([] as any[]);\n\tconst [actionHistoryIndex, setActionHistoryIndex] = useState(-1);\n\n\tconst [styleClasses, _setStyleClasses] = useState(JSON.parse(localStorage.getItem('globalStyleClasses') as string || '[]') as any[]);\n\n\tconst setFragments = (frags: any[]) => {\n\t\t_setFragments(frags);\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(frags));\n\t};\n\n\tconst addAction = (action: any) => {\n\t\tconst newActionHistoryIndex = actionHistoryIndex + 1;\n\t\tsetActionHistoryIndex(newActionHistoryIndex);\n\n\t\tconst actionClone = JSON.parse(JSON.stringify(action));\n\n\t\tsetActionHistory([...actionHistory.slice(0, newActionHistoryIndex), actionClone]);\n\t};\n\n\tconst setStyleClasses = (sc: any, updateActionHistory = true) => {\n\t\tconst csString = JSON.stringify(sc);\n\t\tlocalStorage.setItem('globalStyleClasses', csString);\n\t\t_setStyleClasses(sc);\n\t\tif (updateActionHistory) {\n\t\t\taddAction({\n\t\t\t\tstyleClasses: JSON.parse(csString)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst canUndo = () => actionHistoryIndex > 0;\n\n\tconst updateFragment = (fragment: any, updateActionHistory = true) => {\n\t\tif (!fragments.length) {\n\t\t\tsetFragments([fragment]);\n\t\t\treturn;\n\t\t}\n\t\tconst updatedFragments = fragments.map((f: any) => {\n\t\t\tif (f.id === fragment.id) {\n\t\t\t\t// Cannot use merge because removing datasets or labels will not\n\t\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\t\treturn assign({}, f, fragment);\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\n\t\tsetFragments(updatedFragments);\n\n\t\tif (updateActionHistory) {\n\t\t\taddAction({ fragment });\n\t\t}\n\t};\n\n\tconst setAction = (newIndex: number) => {\n\t\tif (newIndex < 0 || newIndex > actionHistory.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst action = actionHistory[newIndex];\n\t\t// if there was a change in fragment\n\t\tif (action.fragment) {\n\t\t\tupdateFragment(action.fragment, false);\n\t\t}\n\n\t\t// if there was a change in styleClasses\n\t\tif (action.styleClasses) {\n\t\t\tsetStyleClasses(action.styleClasses, false);\n\t\t}\n\n\t\tsetActionHistoryIndex(newIndex);\n\t};\n\n\tfunction undoAction() {\n\t\tif (!canUndo()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAction(actionHistoryIndex - 1);\n\t}\n\n\tconst canRedo = () => actionHistoryIndex < actionHistory.length - 1;\n\n\tconst redoAction = () => {\n\t\tif (!canRedo()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAction(actionHistoryIndex + 1);\n\t};\n\n\tconst clearActionHistory = () => {\n\t\tsetActionHistoryIndex(-1);\n\t\tsetActionHistory([]);\n\t};\n\n\tconst fragmentHelpers = getFragmentHelpers({ fragments, setFragments });\n\n\tuseEffect(() => {\n\t\tconst localFragments = JSON.parse(localStorage.getItem('localFragments') as string || '[]');\n\t\t// clean up the hidden fragments (those marked for deletion but failed to be deleted)\n\t\tconst filteredFragments = localFragments.filter((fragment: any) => !fragment.hidden);\n\t\tfragmentHelpers.updateFragments(filteredFragments);\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(filteredFragments));\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<GlobalStateContext.Provider value={{\n\t\t\t// FRAGMENTS\n\t\t\tfragments,\n\t\t\tsetFragments,\n\t\t\tupdateFragment,\n\t\t\t...fragmentHelpers,\n\n\t\t\t// STYLE CLASSES\n\t\t\tstyleClasses,\n\t\t\tsetStyleClasses,\n\n\t\t\t// ACTION HISTORY\n\t\t\tactionHistory,\n\t\t\tactionHistoryIndex,\n\t\t\tsetActionHistory,\n\t\t\tsetActionHistoryIndex,\n\t\t\taddAction,\n\t\t\tcanUndo,\n\t\t\tundoAction,\n\t\t\tcanRedo,\n\t\t\tredoAction,\n\t\t\tclearActionHistory\n\t\t}}>\n\t\t\t{children}\n\t\t</GlobalStateContext.Provider>\n\t);\n};\n\nexport {\n\tGlobalStateContext,\n\tGlobalStateContextProvider\n};\n","import React, { createContext, useReducer } from 'react';\n\nconst NotificationContext: React.Context<any> = createContext({});\n\nNotificationContext.displayName = 'NotificationContext';\n\nexport type NotificationData = {\n\tkind: string;\n\ttitle: string;\n\tmessage: string;\n\tid: number;\n\taction?: any;\n};\nexport interface BaseNotificationAction {\n\ttype: NotificationActionType;\n\tdata: NotificationData;\n\taction?: Action;\n}\n\nexport type NotificationAction =\n\tNotificationActionAdd |\n\tNotificationActionRemove;\n\nexport enum NotificationActionType {\n\tADD_NOTIFICATION,\n\tREMOVE_NOTIFICATION\n}\n\nexport interface NotificationActionAdd extends BaseNotificationAction {\n\ttype: NotificationActionType.ADD_NOTIFICATION;\n}\n\nexport interface NotificationActionRemove extends BaseNotificationAction {\n\ttype: NotificationActionType.REMOVE_NOTIFICATION;\n}\n\ninterface Action {\n\tactionText: string;\n\tactionFunction: any;\n\tonNotificationClose: any;\n}\n\nexport interface NotificationState {\n\tnotifications: NotificationData[];\n}\n\nconst initialState = { notifications: [] };\nlet notificationCounter = 0;\n\nconst NotificationReducer = (state: NotificationState, action: NotificationAction) => {\n\tswitch (action.type) {\n\t\tcase NotificationActionType.REMOVE_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: state.notifications.filter(\n\t\t\t\t\t(notification: NotificationData) => notification.id !== action.data.id\n\t\t\t\t)\n\t\t\t};\n\t\tcase NotificationActionType.ADD_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: [\n\t\t\t\t\t...state.notifications,\n\t\t\t\t\t{\n\t\t\t\t\t\t...action.data,\n\t\t\t\t\t\tid: notificationCounter++\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\tdefault: return state;\n\t}\n};\n\nconst NotificationContextProvider = ({ children }: any) => {\n\tconst notification = useReducer(NotificationReducer, initialState);\n\treturn (\n\t\t<NotificationContext.Provider value={notification}>\n\t\t\t{children}\n\t\t</NotificationContext.Provider>\n\t);\n};\n\nexport {\n\tNotificationContext,\n\tNotificationContextProvider\n};\n","import assign from 'lodash/assign';\n\nexport const getFragmentHelpers = ({ fragments, setFragments }: any) => {\n\tconst addFragment = (fragment: any) => {\n\t\tconst duplicate = assign({}, fragment);\n\t\tconst expandedFragments = fragments.concat(duplicate);\n\t\tsetFragments(expandedFragments);\n\t};\n\n\tconst getFragment = (fragmentId: string) => fragments.find((f: any) => f.id === fragmentId);\n\n\tconst updateFragments = (frags: any[]) => {\n\t\tif (!fragments || !fragments.length) {\n\t\t\tsetFragments(frags);\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove fragments which are in the original state but not in the payload.\n\t\tconst filteredFragments = fragments\n\t\t\t.filter((fragment: any) => frags.some((actionFragment: any) => actionFragment.id === fragment.id));\n\t\t// If fragments already exist in the state, we need to merge any changes to the fragments with\n\t\t// the current matching fragments and add any new fragments (if any) to the state.\n\t\tconst mergedFragments = filteredFragments.map((fragment: any) => {\n\t\t// Find the fragment in the payload containing the same id as the current state's fragments\n\t\t// to merge updated changes with.\n\t\t\tconst updatedFragment = frags.find((actionFragment: any) => fragment.id === actionFragment.id);\n\t\t\t// Can not use merge because removing datasets or labels will not\n\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\treturn assign({}, fragment, updatedFragment);\n\t\t});\n\t\t// Adds any fragments in the payload which do not match any id in the current state's fragments.\n\t\tconst updatedFragments = mergedFragments\n\t\t\t.concat(frags.filter((actionFragment: any) => (\n\t\t\t\tfragments.every((fragment: any) => fragment.id !== actionFragment.id)\n\t\t\t)));\n\n\t\tsetFragments(updatedFragments);\n\t};\n\n\tconst toggleFragmentVisibility = (id: string, hidden = false) => {\n\t\tconst updatedFragments = fragments.map((f: any) => {\n\t\t\tif (f.id === id) {\n\t\t\t\treturn { ...f, hidden };\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\n\t\tsetFragments(updatedFragments);\n\t};\n\n\tconst removeFragment = (id: string) => {\n\t\tsetFragments(fragments.filter((fragment: any) => fragment.id !== id));\n\t};\n\n\tconst removeFragments = (ids: string[]) => {\n\t\tconst remainingFragments = fragments.filter((fragment: any) => (\n\t\t\t!ids.some((actionFragment: any) => actionFragment.id === fragment.id)\n\t\t));\n\t\tsetFragments(remainingFragments);\n\t};\n\n\treturn {\n\t\taddFragment,\n\t\tgetFragment,\n\t\tupdateFragments,\n\t\ttoggleFragmentVisibility,\n\t\tremoveFragment,\n\t\tremoveFragments\n\t};\n};\n","import { css, cx } from 'emotion';\nimport React, { useRef, useState } from 'react';\n\nimport { Draggable32, TrashCan32 } from '@carbon/icons-react';\nimport { drag } from '../routes/edit/tools';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\n\nexport const componentHeaderZIndex = 999;\n\nconst headerStyle = css`\n\tposition: absolute;\n\tmargin-top: -26px;\n\tpadding-left: 6px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: ${componentHeaderZIndex};\n`;\n\nconst iconStyle = css`height: 1rem; width: 1rem; float: right`;\n\nexport const AComponentCodeUI = ({ selectedComponent }: any) => {\n\treturn <span className={css`overflow-wrap: anywhere`}>\n\t\t{JSON.stringify(selectedComponent)}\n\t</span>;\n};\n\nconst dropBorderStyle = '2px solid #0f62fe';\n\nconst dropStyle = css`\n\tposition: absolute;\n\twidth: 15px;\n\theight: 15px;\n\tline-height: 21px;\n\tz-index: 2;\n`;\n\nconst dropStyleBefore = cx(dropStyle, css`\n\tmargin-left: -4px;\n\tmargin-top: -4px;\n\tborder-left: ${dropBorderStyle};\n\tborder-top: ${dropBorderStyle};\n`);\n\nconst dropStyleAfter = cx(dropStyle, css`\n\tmargin-left: calc(100% - 11px);\n\tborder-right: ${dropBorderStyle};\n\tborder-bottom: ${dropBorderStyle};\n\tbottom: -4px;\n`);\n\nexport interface ComponentInfo {\n\ttype: string;\n\tcomponent: any;\n\tkeywords: string[];\n\tname: string;\n\tdefaultComponentObj: any;\n\timage: any; // whatever fits in the <img src=\"here\">\n\tstyleUI: any;\n\tcodeUI?: any;\n\trender?: (props: ComponentInfoRenderProps) => any;\n\thideFromElementsPane?: boolean;\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (props: { json: any }) => string;\n\t\t\toutputs: (props: { json: any }) => string;\n\t\t\timports: string[];\n\t\t\tisNotDirectExport?: boolean;\n\t\t\tcode: (props: {json: any; jsonToTemplate: (json: any, fragments: any[]) => string; fragments: any[]}) => string;\n\t\t};\n\t\treact: {\n\t\t\timports: string[];\n\t\t\totherImports?: (props: {json: any; fragments?: any[]}) => string;\n\t\t\tisNotDirectExport?: boolean;\n\t\t\tcode: (props: {json: any; jsonToTemplate: (json: any, fragments: any[]) => string; fragments: any[]}) => string;\n\t\t\tadditionalCode?: (componentObj: any) => any;\n\t\t};\n\t};\n}\n\nexport interface ComponentInfoRenderProps {\n\tcomponentObj: any;\n\tselect: () => void;\n\tremove: () => void;\n\tselected: boolean;\n\tonDragOver: (event: any) => void;\n\tonDrop: (event: any) => any;\n\trenderComponents: (componentObj: any) => any;\n}\n\nexport const AComponent = ({\n\tchildren,\n\tcomponentObj,\n\tselect,\n\tselected,\n\tremove,\n\theadingCss,\n\tclassName\n}: any) => {\n\t// TODO use fragments context instead of passing in `remove`?\n\tconst [fragment, setFragment] = useFragment();\n\tconst [showDragOverIndicator, setShowDragOverIndicator] = useState(false);\n\tconst [dragOverPosition, setDragOverPosition] = useState([] as any[]);\n\tconst holderRef = useRef(null as any);\n\n\tconst isDragOverLeft = () => dragOverPosition[0] < holderRef.current.offsetWidth / 2;\n\t// const isDragOverRight = () => !isDragOverLeft();\n\tconst isDragOverTop = () => dragOverPosition[1] < holderRef.current.offsetHeight / 2;\n\t// const isDragOverBottom = () => !isDragOverTop();\n\tconst isDragOverBefore = () => isDragOverLeft() || isDragOverTop();\n\tconst isDragOverAfter = () => !isDragOverBefore();\n\n\tconst onDrop = (event: any) => {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\tsetShowDragOverIndicator(false);\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData('drag-object'));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(\n\t\t\t\tfragment.data,\n\t\t\t\tdragObj,\n\t\t\t\tcomponentObj.id,\n\t\t\t\tgetParentComponent(fragment.data, componentObj).items.indexOf(componentObj) + (isDragOverBefore() ? 0 : 1)\n\t\t\t)\n\t\t});\n\t};\n\n\treturn (\n\t\t<span\n\t\tclassName={className}\n\t\tref={holderRef}\n\t\tonClick={(event) => {\n\t\t\tevent.stopPropagation();\n\t\t\tselect();\n\t\t}}\n\t\tdraggable='true' // TODO make Draggable32 the drag handle and this element as preview\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj,\n\t\t\ttype: 'move'\n\t\t})}\n\t\tonDragEnter={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(true);\n\t\t}}\n\t\tonDragLeave={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(false);\n\t\t}}\n\t\tonDragOver={(event) => {\n\t\t\tconst rect = event.currentTarget.getBoundingClientRect();\n\t\t\tsetDragOverPosition([event.pageX - rect.left, event.pageY - rect.top]);\n\t\t}}\n\t\tonDrop={onDrop}>\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleBefore,\n\t\t\t\tshowDragOverIndicator && isDragOverBefore() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleAfter,\n\t\t\t\tshowDragOverIndicator && isDragOverAfter() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(headerStyle, headingCss, selected ? css`` : css`display: none`)}>\n\t\t\t\t<span className={css`margin-right: 1rem`}>\n\t\t\t\t\t{componentObj && componentObj.type ? componentObj.type : 'Header'}\n\t\t\t\t</span>\n\t\t\t\t<Draggable32 className={iconStyle} />\n\t\t\t\t<TrashCan32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif (remove) {\n\t\t\t\t\t\tremove();\n\t\t\t\t\t}\n\t\t\t\t}} className={iconStyle} />\n\t\t\t</span>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n\tFormLabel,\n\tTag\n} from 'carbon-components-react';\nimport { GlobalStateContext } from '../context';\n\nconst compareClasses = (sc1: any, sc2: any) => sc1.name < sc2.name ? -1 : 1;\n\nexport const CssClassSelector = ({ selectedClasses, setSelectedClasses }: any) => {\n\tconst { styleClasses } = useContext(GlobalStateContext);\n\n\tconst getAvailableClasses = () => {\n\t\t// available is anything in styleClasses, not yet in selecteClasses, sorted\n\t\treturn styleClasses\n\t\t\t.filter((sc: any) => !selectedClasses?.find((ssc: any) => ssc.id === sc.id))\n\t\t\t.sort(compareClasses);\n\t};\n\n\tconst [availableClasses, setAvailableClasses] = useState(getAvailableClasses());\n\n\tuseEffect(() => {\n\t\tif (!selectedClasses) {\n\t\t\tsetSelectedClasses([]);\n\t\t}\n\t}, [selectedClasses, setSelectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update available classes based on styleClasses and selectedClasses\n\t\tsetAvailableClasses(getAvailableClasses());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses, selectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update the contents of selected classes when needed\n\t\tsetSelectedClasses(\n\t\t\tstyleClasses.filter((sc: any) => !!selectedClasses?.find((ssc: any) => ssc.id === sc.id)),\n\t\t\tfalse\n\t\t);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses]);\n\n\tconst selectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses([...selectedClasses, styleClass]);\n\t\tsetAvailableClasses(availableClasses.filter((c: any) => c.id !== styleClass.id));\n\t};\n\n\tconst deselectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses(selectedClasses.filter((c: any) => c.id !== styleClass.id));\n\t\tsetAvailableClasses([...availableClasses, styleClass].sort(compareClasses));\n\t};\n\n\treturn (\n\t\t<div style={{ marginTop: '1rem' }}>\n\t\t\t<p>Custom CSS classes</p>\n\t\t\t<FormLabel>Selected classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tselectedClasses?.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tkey={styleClass.name}\n\t\t\t\t\tfilter\n\t\t\t\t\tonClose={() => deselectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t\t<br />\n\t\t\t<FormLabel>Available classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tavailableClasses.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tkey={styleClass.name}\n\t\t\t\t\tonClick={() => selectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport const ComponentCssClassSelector = ({ componentObj, setComponent }: any) => {\n\tconst setSelectedClasses = (cssClasses: any[], updateActionHistory = true) => {\n\t\tsetComponent(\n\t\t\t{\n\t\t\t\t...componentObj,\n\t\t\t\tcssClasses\n\t\t\t},\n\t\t\tupdateActionHistory\n\t\t);\n\t};\n\n\treturn (\n\t\t<CssClassSelector\n\t\t\tselectedClasses={componentObj.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t);\n};\n","import React from 'react';\nimport domtoimage from 'dom-to-image';\nimport ReactDOM from 'react-dom';\nimport { Fragment } from '../components';\nimport { camelCase, kebabCase, upperFirst } from 'lodash';\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport interface RenderProps {\n\tid: string;\n\tname: string;\n\twidth?: number;\n\theight?: number;\n\tformat?: string;\n\tpreview?: { // only sent for preview\n\t\tformat?: string; // optional\n\t\twidth: number;\n\t\theight: number;\n\t};\n}\n\nexport const getFragmentPreview = async (fragment: any, props: RenderProps) => {\n\tconst element = document.createElement('div');\n\telement.className = 'render-preview';\n\n\t(element as HTMLElement).style.position = 'absolute';\n\t(element as HTMLElement).style.top = '0';\n\t(element as HTMLElement).style.left = '0';\n\t(element as HTMLElement).style.zIndex = '-1';\n\t(element as HTMLElement).style.width = `${props.width || 800}px`;\n\t(element as HTMLElement).style.height = `${props.height || 400}px`;\n\t(element as HTMLElement).style.minHeight = `${props.height || 400}px`;\n\tReactDOM.render(React.createElement(Fragment, { fragment }), element);\n\tdocument.body.appendChild(element);\n\n\tawait sleep(100); // wait for render to finish\n\n\tconst imageBlob = await domtoimage.toBlob(element as Node);\n\t(element as HTMLElement).remove();\n\treturn imageBlob;\n};\n\nexport const getFragmentTemplates = (fragments: any[]) => (\n\tfragments.filter((fragment: any) => !!fragment.labels?.includes('template'))\n);\n\nexport const getAllComponentStyleClasses = (componentObj: any, fragments: any[]) => {\n\tlet styleClasses: any = {};\n\n\t// convert into an object so all classes are unique\n\tcomponentObj.cssClasses?.forEach((cssClass: any) => {\n\t\t// NOTE do we need to merge them deeply?\n\t\tstyleClasses[cssClass.id] = cssClass;\n\t});\n\n\tcomponentObj.items?.map((co: any) => {\n\t\tconst coClasses = getAllComponentStyleClasses(co, fragments);\n\t\tstyleClasses = {\n\t\t\t...styleClasses,\n\t\t\t...coClasses\n\t\t};\n\n\t\tif (co.type === 'fragment') {\n\t\t\tconst fragment = fragments.find(f => f.id === co.id);\n\n\t\t\tstyleClasses = {\n\t\t\t\t...styleClasses,\n\t\t\t\t// we can't avoid this without a messy declare+reassign+export\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\t\t...getAllFragmentStyleClasses(fragment || {}, fragments)\n\t\t\t};\n\t\t}\n\t});\n\n\treturn styleClasses;\n};\n\nexport const tagNameFromFragment = (fragment: any) => {\n\t// TODO fragment can have a tag name?\n\treturn kebabCase(fragment.title);\n};\n\nexport const classNameFromFragment = (fragment: any) => {\n\t// TODO fragment can have a class name?\n\treturn upperFirst(camelCase(fragment.title));\n};\n\nexport const getAllFragmentStyleClasses = (fragment: any, fragments: any[] = []) => {\n\tif (!fragment || !fragment.data) {\n\t\treturn [];\n\t}\n\n\tconst allClasses = {\n\t\t...getAllComponentStyleClasses(fragment, fragments),\n\t\t...getAllComponentStyleClasses(fragment.data, fragments)\n\t};\n\treturn Object.values(allClasses);\n};\n\nexport const hasComponentStyleClasses = (componentObj: any) => {\n\tif (componentObj.cssClasses) {\n\t\treturn true;\n\t}\n\n\tif (componentObj.items) {\n\t\treturn componentObj.items.some((item: any) => hasComponentStyleClasses(item));\n\t}\n\n\treturn false;\n};\n\nexport const hasFragmentStyleClasses = (fragment: any) => {\n\tif (!fragment || !fragment.data) {\n\t\treturn false;\n\t}\n\n\treturn hasComponentStyleClasses(fragment.data);\n};\n\nexport const getUniqueFragmentName = (fragments: Array<any>, baseName: string) => {\n\tconst nameRegEx = new RegExp(String.raw`(.*)\\s+(copy)*(\\s+(\\d+))?$`);\n\tconst nameMatch = baseName.match(nameRegEx);\n\tlet count = 0;\n\n\tlet nameBase = baseName;\n\t// If match, increment the count and update name base and new name\n\tif (nameMatch) {\n\t\tnameBase = baseName.replace(nameRegEx, '$1');\n\t\tcount = Number.parseInt(baseName.replace(nameRegEx, '$4'), 10);\n\t\tif (!count) {\n\t\t\tcount = 0;\n\t\t}\n\t}\n\n\t// Get a list containing names of all duplicates of original fragment\n\t// e.g. [ \"Fragment copy\", \"Fragment copy 1\", \"Fragment copy 7\", ...]\n\tconst names: string[] = [];\n\tfragments.forEach((fragment) => {\n\t\tif (fragment.title.includes(nameBase)) {\n\t\t\tnames.push(fragment.title);\n\t\t}\n\t});\n\n\tif (names.length <= 1) {\n\t\t// because the fragment we're copying is already in there\n\t\treturn `${nameBase} copy`;\n\t}\n\n\tconst highestNumber = names\n\t\t.map((n) => Number.parseInt(n.replace(nameRegEx, '$4'), 10))\n\t\t.filter((n) => !isNaN(n)).sort((a, b) => b - a)\n\t\t.shift();\n\n\treturn `${nameBase} copy ${highestNumber && count < highestNumber ? highestNumber + 1 : count + 1}`;\n};\n\nexport const getRandomId = () => `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\nexport const getFragmentDuplicate = (fragments: any, fragment: any, overrides = {}) => {\n\t// copy current fragment and change fragment title\n\tconst fragmentCopy = JSON.parse(JSON.stringify(fragment));\n\tfragmentCopy.title = getUniqueFragmentName(fragments, fragmentCopy.title);\n\tfragmentCopy.id = getRandomId();\n\treturn { ...fragmentCopy, ...overrides };\n};\n\nexport const getFragmentPreviewUrl = async (fragment: any) => {\n\tconst renderProps: RenderProps = {\n\t\tid: fragment.id,\n\t\tname: fragment.title,\n\t\twidth: 800,\n\t\theight: 400,\n\t\tpreview: {\n\t\t\tformat: 'png',\n\t\t\twidth: 330,\n\t\t\theight: 200\n\t\t}\n\t};\n\n\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\treturn new Promise((resolve) => {\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => resolve(reader.result ? reader.result.toString() : '');\n\t});\n};\n\nexport const reactClassNamesFromComponentObj = (componentObj: any) =>\n\tcomponentObj.cssClasses\n\t\t&& Array.isArray(componentObj.cssClasses)\n\t\t&& componentObj.cssClasses.length > 0\n\t\t? `className='${componentObj.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t\t: '';\n\nexport const angularClassNamesFromComponentObj = (componentObj: any) =>\n\tcomponentObj.cssClasses\n\t\t&& Array.isArray(componentObj.cssClasses)\n\t\t&& componentObj.cssClasses.length > 0\n\t\t? `class='${componentObj.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t\t: '';\n\nexport const nameStringToVariableString = (name: string) => camelCase(name);\n","import React from 'react';\nimport { Accordion, Dropdown } from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\n\nimport image from '../../assets/component-icons/accordion.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const AAccordionStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'lg', text: 'Large' }\n\t];\n\n\tconst alignItems = [\n\t\t{ id: 'end', text: 'End' },\n\t\t{ id: 'start', text: 'Start' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t})}/>\n\t\t<Dropdown\n\t\t\tlabel='Alignment of accordion heading'\n\t\t\ttitleText='Alignment'\n\t\t\titems={alignItems}\n\t\t\tinitialSelectedItem={alignItems.find(item => item.id === selectedComponent.align)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\talign: event.selectedItem.id\n\t\t})}/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AAccordion = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Accordion\n\t\t\talign={componentObj.align}\n\t\t\tsize={componentObj.size}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Accordion>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AAccordion,\n\tstyleUI: AAccordionStyleUI,\n\trender: ({ componentObj, select, remove, selected, renderComponents }) => <AAccordion\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.items.map((accordionItem: any) => renderComponents(accordionItem))}\n\t</AAccordion>,\n\tkeywords: ['accordion'],\n\tname: 'Accordion',\n\ttype: 'accordion',\n\tdefaultComponentObj: {\n\t\ttype: 'accordion',\n\t\talign: 'end',\n\t\tsize: 'md',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'accordion-item',\n\t\t\t\ttitle: 'Accordion item',\n\t\t\t\titems: [{ type: 'text', text: 'Accordion item content' }]\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Align = \"${json.align}\";`,\n\t\t\toutputs: () => '',\n\t\t\timports: ['AccordionModule'],\n\t\t\t// NOTE: Angular accordion does not support size yet.\n\t\t\t// Issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2022\n\t\t\t// NOTE: Angular accordion align end does not behave as expected.\n\t\t\t// Issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2023\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-accordion\n\t\t\t\t\t[align]=\"${nameStringToVariableString(json.codeContext?.name)}Align\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-accordion>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Accordion'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<Accordion\n\t\t\t\t\t${json.align !== undefined ? `align='${json.align}'` : ''}\n\t\t\t\t\t${json.size !== undefined ? `size='${json.size}'` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</Accordion>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tAccordionItem,\n\tCheckbox,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\n\nimport image from '../../assets/component-icons/accordion-item.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\nimport { useFragment } from '../../context';\nimport {\n\tAdder,\n\tgetParentComponent,\n\tupdatedState\n} from '../../components';\n\nexport const AAccordionItemStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.title}\n\t\t\tlabelText='Title'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}} />\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AAccordionItem = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\tconst addAccordionItem = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'accordionitem',\n\t\t\t\t\ttitle: 'New accordion item',\n\t\t\t\t\titems: [{ type: 'text', text: 'New accordion item content' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t<Adder\n\t\tactive={selected}\n\t\ttopAction={() => addAccordionItem()}\n\t\tbottomAction={() => addAccordionItem(1)}>\n\t\t\t<AComponent\n\t\t\t{...rest}\n\t\t\tcomponentObj={componentObj}\n\t\t\tselected={selected}>\n\t\t\t\t<AccordionItem\n\t\t\t\ttitle={componentObj.title}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t\t{children}\n\t\t\t\t</AccordionItem>\n\t\t\t</AComponent>\n\t\t</Adder>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AAccordionItem,\n\thideFromElementsPane: true,\n\tstyleUI: AAccordionItemStyleUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AAccordionItem\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}\n\t\tselected={selected}>\n\t\t\t{componentObj.items.map((child: any) => renderComponents(child))}\n\t</AAccordionItem>,\n\tkeywords: ['accordion', 'item'],\n\tname: 'Accordion item',\n\ttype: 'accordion-item',\n\tdefaultComponentObj: {\n\t\ttype: 'accordionitem',\n\t\ttitle: 'Accordion item',\n\t\tdisabled: false,\n\t\titems: [{ type: 'text', text: 'Accordion item content' }]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Title = \"${json.title}\";`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Selected = new EventEmitter();`,\n\t\t\timports: ['AccordionModule'],\n\t\t\t// NOTE: Angular accordion item currently does not support 'disabled'.\n\t\t\t// issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2021\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-accordion-item\n\t\t\t\t\t[title]=\"${nameStringToVariableString(json.codeContext?.name)}Title\"\n\t\t\t\t\t(selected)=\"${nameStringToVariableString(json.codeContext?.name)}Selected.emit($event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-accordion-item>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['AccordionItem'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<AccordionItem\n\t\t\t\t\ttitle=\"${json.title || ''}\"\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</AccordionItem>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tButton,\n\tDropdown,\n\tTextInput\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/button.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const AButtonStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst kindItems = [\n\t\t{ id: 'primary', text: 'Primary' },\n\t\t{ id: 'secondary', text: 'Secondary' },\n\t\t{ id: 'tertiary', text: 'Tertiary' },\n\t\t{ id: 'danger', text: 'Danger' },\n\t\t{ id: 'danger--tertiary', text: 'Danger tertiary' },\n\t\t{ id: 'danger--ghost', text: 'Danger ghost' },\n\t\t{ id: 'ghost', text: 'Ghost' }\n\t];\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\ttext: event.currentTarget.value\n\t\t\t})} />\n\t\t<Dropdown\n\t\t\tlabel='Kind'\n\t\t\ttitleText='Kind'\n\t\t\titems={kindItems}\n\t\t\tinitialSelectedItem={kindItems.find(item => item.id === selectedComponent.kind)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tkind: event.selectedItem.id\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AButton = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={css`position: relative; display: inline-flex`}\n\t\t{...rest}>\n\t\t\t<Button\n\t\t\tkind={componentObj.kind}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Button>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AButton,\n\tstyleUI: AButtonStyleUI,\n\trender: ({ componentObj, select, remove, selected }) => <AButton\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</AButton>,\n\tkeywords: ['button'],\n\tname: 'Button',\n\ttype: 'button',\n\tdefaultComponentObj: {\n\t\ttype: 'button',\n\t\tkind: 'primary',\n\t\ttext: 'Button'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Clicked = new EventEmitter();`,\n\t\t\timports: ['ButtonModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<button\n\t\t\t\t\t${json.kind ? `ibmButton='${json.kind}'` : 'ibmButton'}\n\t\t\t\t\t(click)='${nameStringToVariableString(json.codeContext?.name)}Clicked.emit()'\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.text}\n\t\t\t\t</button>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Button'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Button${json.kind && ` kind=\"${json.kind}\"`} ${reactClassNamesFromComponentObj(json)}>${json.text}</Button>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Checkbox, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/checkbox.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ACheckboxStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ACheckboxCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ACheckbox = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<Checkbox\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ACheckbox,\n\tstyleUI: ACheckboxStyleUI,\n\tcodeUI: ACheckboxCodeUI,\n\tkeywords: ['checkbox', 'check box'],\n\tname: 'Checkbox',\n\ttype: 'checkbox',\n\tdefaultComponentObj: {\n\t\ttype: 'checkbox',\n\t\tlabel: 'Checkbox'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Checked: boolean;`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}CheckedChange = new EventEmitter<boolean>();`,\n\t\t\timports: ['CheckboxModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-checkbox\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\t[(checked)]=\"${nameStringToVariableString(json.codeContext?.name)}Checked\"\n\t\t\t\t\t(checkedChange)=\"${nameStringToVariableString(json.codeContext?.name)}CheckedChange.emit($event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.label}\n\t\t\t\t</ibm-checkbox>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Checkbox'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Checkbox\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\tchecked={state[\"${json.codeContext?.name}\"]?.checked}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={(checked) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\tvalue: checked\n\t\t\t\t\t\t}\n\t\t\t\t\t})} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n\tAccordion,\n\tAccordionItem,\n\tColumn,\n\tNumberInput\n} from 'carbon-components-react';\nimport { Add32, Help32 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { AComponent } from './a-component';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nconst helpIconStyle = css`\n\tcolor: #525252;\n\tposition: absolute;\n\tright: 1rem;\n\tz-index: 1;\n\tbackground: white;\n\n\tsvg {\n\t\twidth: 1rem;\n\t\theight: 1rem;\n\t}\n`;\n\nexport const AColumnStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst onNumInputchange = (event: any) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\t[event.imaginaryTarget.name]: Number(event.imaginaryTarget.value)\n\t\t});\n\t};\n\n\tconst [isAccordionOpen, setIsAccordionOpen] = useState({} as any);\n\n\tuseEffect(() => {\n\t\tsetIsAccordionOpen({\n\t\t\tsmall: selectedComponent.smallSpan || selectedComponent.smallOffset,\n\t\t\tmedium: selectedComponent.mediumSpan || selectedComponent.mediumOffset,\n\t\t\tlarge: selectedComponent.largeSpan || selectedComponent.largeOffset,\n\t\t\txLarge: selectedComponent.xLargeSpan || selectedComponent.xLargeOffset,\n\t\t\tmax: selectedComponent.maxSpan || selectedComponent.maxOffset\n\t\t});\n\t}, [selectedComponent]);\n\n\treturn <>\n\t\t<a\n\t\thref='https://www.carbondesignsystem.com/guidelines/2x-grid/implementation/'\n\t\ttarget='_blank'\n\t\trel='noopener noreferrer'\n\t\tclassName={helpIconStyle}>\n\t\t\t<Help32 />\n\t\t</a>\n\t\t<Accordion align='start'>\n\t\t\t<AccordionItem title='Small' open={isAccordionOpen.small}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='smallSpan'\n\t\t\t\t\tvalue={selectedComponent.smallSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={3}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='smallOffset'\n\t\t\t\t\tvalue={selectedComponent.smallOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Medium' open={isAccordionOpen.medium}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={8}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='mediumSpan'\n\t\t\t\t\tvalue={selectedComponent.mediumSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={7}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='mediumOffset'\n\t\t\t\t\tvalue={selectedComponent.mediumOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Large' open={isAccordionOpen.large}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='largeSpan'\n\t\t\t\t\tvalue={selectedComponent.largeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='largeOffset'\n\t\t\t\t\tvalue={selectedComponent.largeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Extra large' open={isAccordionOpen.xLarge}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='xLargeSpan'\n\t\t\t\t\tvalue={selectedComponent.xLargeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='xLargeOffset'\n\t\t\t\t\tvalue={selectedComponent.xLargeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Max' open={isAccordionOpen.max}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='maxSpan'\n\t\t\t\t\tvalue={selectedComponent.maxSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='maxOffset'\n\t\t\t\t\tvalue={selectedComponent.maxOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-top: -2px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: 1;\n`;\n\nconst addStyleLeft = cx(addStyle, css`\n\tmargin-left: -30px;\n`);\n\nconst addStyleRight = cx(addStyle, css`\n\tmargin-left: calc(100% - 30px);\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const AColumn = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addCell = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\titems: [{ type: 'text', text: 'New cell' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<Column\n\t\tonDrop={onDrop}\n\t\tclassName={cx(componentObj.cssClasses?.map((cc: any) => cc.id).join(' '), css`position: relative`)}\n\t\tsm={{\n\t\t\tspan: componentObj.smallSpan || undefined,\n\t\t\toffset: componentObj.smallOffset || undefined\n\t\t}}\n\t\tmd={{\n\t\t\tspan: componentObj.mediumSpan || undefined,\n\t\t\toffset: componentObj.mediumOffset || undefined\n\t\t}}\n\t\tlg={{\n\t\t\tspan: componentObj.largeSpan || undefined,\n\t\t\toffset: componentObj.largeOffset || undefined\n\t\t}}\n\t\txlg={{\n\t\t\tspan: componentObj.xLargeSpan || undefined,\n\t\t\toffset: componentObj.xLargeOffset || undefined\n\t\t}}\n\t\tmax={{\n\t\t\tspan: componentObj.maxSpan || undefined,\n\t\t\toffset: componentObj.maxOffset || undefined\n\t\t}}>\n\t\t\t<span className={cx(addStyleLeft, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell();\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<span className={cx(addStyleRight, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell(1);\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\tclassName={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t{children}\n\t\t\t</AComponent>\n\t\t</Column>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AColumn,\n\tstyleUI: AColumnStyleUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AColumn\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((column: any) => (\n\t\t\t\trenderComponents(column)\n\t\t\t))}\n\t</AColumn>,\n\tkeywords: ['column', 'grid'],\n\tname: 'Column',\n\ttype: 'column',\n\thideFromElementsPane: true,\n\tdefaultComponentObj: undefined,\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t},\n\t\treact: {\n\t\t\timports: ['Column'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t}\n\t}\n};\n","import React, { useContext } from 'react';\nimport {\n\tCheckbox,\n\tTextInput\n} from 'carbon-components-react';\nimport { Edit32 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/button.svg';\nimport { GlobalStateContext } from '../context';\nimport { classNameFromFragment, tagNameFromFragment } from '../utils/fragment-tools';\nimport { LinkButton } from '../components';\n\nexport const AFragmentStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<LinkButton\n\t\tkind='secondary'\n\t\tsize='sm'\n\t\trenderIcon={Edit32}\n\t\tclassName={css`margin-bottom: 1rem`}\n\t\tto={selectedComponent.id}>\n\t\t\tEdit fragment\n\t\t</LinkButton>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='fragment-showOutline'\n\t\t\tchecked={selectedComponent.showOutline}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tshowOutline: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AFragmentCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nconst showOutlineStyle = css`\n\toutline: 1px dashed #78a9ff;\n`;\n\nexport const AFragment = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={css`position: relative; display: inline-flex`}\n\t\t{...rest}>\n\t\t\t<div\n\t\t\tstyle={{ pointerEvents: 'none' }}\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcomponentObj.showOutline ? showOutlineStyle : ''\n\t\t\t)}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AFragment,\n\tstyleUI: AFragmentStyleUI,\n\trender: ({ componentObj, select, remove, selected, renderComponents }) => {\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tconst globalState = useContext(GlobalStateContext); // used for fetching subcomponents/microlayouts\n\t\tconst subFragment = globalState?.getFragment(componentObj.id);\n\n\t\tif (!subFragment) {\n\t\t\treturn ''; // NOTE should we also remove it from the fragment?\n\t\t}\n\n\t\treturn <AFragment\n\t\t\tcomponentObj={componentObj}\n\t\t\tselect={select}\n\t\t\tremove={remove}\n\t\t\tselected={selected}>\n\t\t\t\t{renderComponents(subFragment.data)}\n\t\t</AFragment>;\n\t},\n\tkeywords: ['fragment'],\n\tname: 'Fragment',\n\thideFromElementsPane: true,\n\ttype: 'fragment',\n\tdefaultComponentObj: {\n\t\ttype: 'fragment'\n\t},\n\timage,\n\tcodeExport: { // TODO exports\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: [],\n\t\t\tcode: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `<app-${tagNameFromFragment(fragment)}></app-${tagNameFromFragment(fragment)}>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\totherImports: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `import {${classNameFromFragment(fragment)}} from \"/src/shared/${tagNameFromFragment(fragment)}.js\";`;\n\t\t\t},\n\t\t\tcode: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `<${classNameFromFragment(fragment)} state={state} setState={setState} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Checkbox, Grid } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css, cx } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/grid.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const AGridStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='grid-showOutline'\n\t\t\tchecked={selectedComponent.showOutline}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tshowOutline: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Full width'\n\t\t\tid='grid-fullWidth'\n\t\t\tchecked={selectedComponent.fullWidth}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tfullWidth: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nconst showOutlineStyle = css`\n\t.bx--col {\n\t\toutline: 1px dashed #78a9ff;\n\t}\n`;\n\nexport const AGrid = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<Grid\n\t\t\tclassName={cx(\n\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\tcomponentObj.showOutline ? showOutlineStyle : ''\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tfullWidth={componentObj.fullWidth}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t{children}\n\t\t\t</Grid>\n\t\t</AComponent>\n\t);\n};\n\nconst getCellAttributeString = (cell: any, sizeShort: string, sizeLong: string) => {\n\tconst span = cell[`${sizeLong}Span`];\n\tconst offset = cell[`${sizeLong}Offset`];\n\n\tif (!span && ! offset) {\n\t\treturn '';\n\t}\n\n\tconst spanString = `span: ${span}`;\n\tconst offsetString = `offset: ${offset}`;\n\n\tconst spanAndOffset = `{\n\t\t${span ? spanString : ''}${span && offset ? ',' : ''}\n\t\t${offset ? offsetString : ''}\n\t}`;\n\n\treturn `${sizeShort}={${!offset ? span : spanAndOffset}}`;\n};\n\nconst getCellParamsString = (cell: any) => {\n\treturn `\n\t\t${getCellAttributeString(cell, 'sm', 'small')}\n\t\t${getCellAttributeString(cell, 'md', 'medium')}\n\t\t${getCellAttributeString(cell, 'lg', 'large')}\n\t\t${getCellAttributeString(cell, 'xlg', 'xLarge')}\n\t\t${getCellAttributeString(cell, 'max', 'max')}\n\t`;\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AGrid,\n\tstyleUI: AGridStyleUI,\n\tkeywords: ['grid', 'row', 'column'],\n\tname: 'Grid',\n\ttype: 'grid',\n\tdefaultComponentObj: {\n\t\ttype: 'grid',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'A' }] },\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'B' }] }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'C' }] },\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'D' }] }\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<div ibmGrid ${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.items.map((row: any) => `<div ibmRow ${angularClassNamesFromComponentObj(row)}>\n\t\t\t\t\t\t${row.items.map((cell: any) => `<div ibmCol ${angularClassNamesFromComponentObj(cell)}>\n\t\t\t\t\t\t\t\t${jsonToTemplate(cell, fragments)}\n\t\t\t\t\t\t</div>`).join('\\n')}\n\t\t\t\t\t</div>`).join('\\n')}\n\t\t\t\t</div>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Grid', 'Column', 'Row'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<Grid ${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.items.map((row: any) => `<Row ${reactClassNamesFromComponentObj(row)}>\n\t\t\t\t\t\t${row.items.map((cell: any) => `<Column ${getCellParamsString(cell)} ${reactClassNamesFromComponentObj(cell)}>\n\t\t\t\t\t\t\t\t${jsonToTemplate(cell, fragments)}\n\t\t\t\t\t\t</Column>`).join('\\n')}\n\t\t\t\t\t</Row>`).join('\\n')}\n\t\t\t\t</Grid>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tTextInput,\n\tNumberInput\n} from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/number-input.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ANumberInputStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'lg', text: 'Large' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Hide label'\n\t\t\tid='hide-label'\n\t\t\tchecked={selectedComponent.hideLabel}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thideLabel: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.min}\n\t\t\tlabel='Min'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tmin: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.max}\n\t\t\tlabel='Max'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tmax: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.step}\n\t\t\tlabel='Step'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tstep: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.warnText}\n\t\t\tlabelText='Warning text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\twarnText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.invalidText}\n\t\t\tlabelText='Invalid text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tinvalidText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ANumberInputCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ANumberInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<NumberInput\n\t\t\t\tsize={componentObj.size}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\twarn={componentObj.warn}\n\t\t\t\twarnText={componentObj.warnText}\n\t\t\t\tlabel={componentObj.label}\n\t\t\t\thideLabel={componentObj.hideLabel}\n\t\t\t\thideSteppers={componentObj.hideSteppers}\n\t\t\t\tmin={componentObj.min}\n\t\t\t\tmax={componentObj.max}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\treadOnly={componentObj.readOnly}\n\t\t\t\tinvalid={componentObj.invalid}\n\t\t\t\tinvalidText={componentObj.invalidText}\n\t\t\t\tlight={componentObj.light}\n\t\t\t\tallowEmpty={componentObj.allowEmpty}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest}\n\t\t\t\ttype='number' />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ANumberInput,\n\tstyleUI: ANumberInputStyleUI,\n\tcodeUI: ANumberInputCodeUI,\n\tkeywords: ['number', 'input'],\n\tname: 'Number input',\n\ttype: 'number-input',\n\tdefaultComponentObj: {\n\t\ttype: 'number-input',\n\t\tsize: 'md',\n\t\tlabel: 'Number input label',\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tstep: 10,\n\t\thelperText: 'Helper text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) =>\n\t\t\t\t`@Input() ${nameStringToVariableString(json.codeContext?.name)}HelperText = \"${json.helperText}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Value = ${Math.round((json.min + json.max) / 2)};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Label = \"${json.label}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Theme = \"${json.light ? 'light' : ''}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Min = ${json.min};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Max = ${json.max};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Step = ${json.step};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Invalid = ${!!json.invalid};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}InvalidText = ${json.invalidText};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Warn = ${json.warn};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}WarnText = ${json.warnText};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Size = \"${json.size}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled};`,\n\t\t\toutputs: ({ json }) =>\n\t\t\t\t`@Output() ${nameStringToVariableString(json.codeContext?.name)}ValueChange = new EventEmitter<number>();\n\t\t\t\t@Output() ${nameStringToVariableString(json.codeContext?.name)}Change = new EventEmitter<any>();`,\n\t\t\timports: ['NumberModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-number\n\t\t\t\t\t[helperText]=\"${nameStringToVariableString(json.codeContext?.name)}HelperText\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t[value]=\"${nameStringToVariableString(json.codeContext?.name)}Value\"\n\t\t\t\t\t(change)=\"${nameStringToVariableString(json.codeContext?.name)}ValueChange.emit($event.value) || numberinput78Change.emit($event)\"\n\t\t\t\t\t[label]=\"${nameStringToVariableString(json.codeContext?.name)}Label\"\n\t\t\t\t\t[theme]=\"${nameStringToVariableString(json.codeContext?.name)}Theme\"\n\t\t\t\t\t[min]=\"${nameStringToVariableString(json.codeContext?.name)}Min\"\n\t\t\t\t\t[max]=\"${nameStringToVariableString(json.codeContext?.name)}Max\"\n\t\t\t\t\t[step]=\"${nameStringToVariableString(json.codeContext?.name)}Step\"\n\t\t\t\t\t[invalid]=\"${nameStringToVariableString(json.codeContext?.name)}Invalid\"\n\t\t\t\t\t[invalidText]=\"${nameStringToVariableString(json.codeContext?.name)}InvalidText\"\n\t\t\t\t\t[warn]=\"${nameStringToVariableString(json.codeContext?.name)}Warn\"\n\t\t\t\t\t[warnText]=\"${nameStringToVariableString(json.codeContext?.name)}WarnText\"\n\t\t\t\t\t[size]=\"${nameStringToVariableString(json.codeContext?.name)}Size\"\n\t\t\t\t\t[disabled]=\"${nameStringToVariableString(json.codeContext?.name)}Disabled\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t</ibm-number>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['NumberInput'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<NumberInput\n\t\t\t\t\tsize=\"${json.size}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tmin=\"${json.min}\"\n\t\t\t\t\tmax=\"${json.max}\"\n\t\t\t\t\tstep=\"${json.step}\"\n\t\t\t\t\tlabel=\"${json.label}\"\n\t\t\t\t\t${json.warnText !== undefined && json.warnText !== '' ? `warnText=\"${json.warnText}\"` : ''}\n\t\t\t\t\t${json.warn !== undefined ? `warn=\"${json.warn}\"` : ''}\n\t\t\t\t\t${json.hideLabel !== undefined ? `hideLabel=\"${json.hideLabel}\"` : ''}\n\t\t\t\t\t${json.hideSteppers !== undefined ? `hideSteppers=\"${json.hideSteppers}\"` : ''}\n\t\t\t\t\t${json.disabled !== undefined ? `disabled=\"${json.disabled}\"` : ''}\n\t\t\t\t\t${json.readOnly !== undefined ? `readOnly=\"${json.readOnly}\"` : ''}\n\t\t\t\t\t${json.invalid !== undefined ? `invalid=\"${json.invalid}\"` : ''}\n\t\t\t\t\t${json.invalidText !== undefined ? `invalidText=\"${json.invalidText}\"` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${json.allowEmpty !== undefined ? `allowEmpty=\"${json.allowEmpty}\"` : ''}\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tRow,\n\tCheckbox\n} from 'carbon-components-react';\nimport { Add32 } from '@carbon/icons-react';\nimport { AComponent } from './a-component';\nimport { getParentComponent, updatedState } from '../components';\nimport { css, cx } from 'emotion';\nimport { useFragment } from '../context';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nexport const ARowStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-left: calc(50% - 10px);\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n`;\n\nconst addStyleTop = cx(addStyle, css`\n\ttop: -20px;\n`);\n\nconst addStyleBottom = cx(addStyle, css`\n\tbottom: -20px;\n\tz-index: 1;\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const ARow = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addRow = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 1' }] },\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 2' }] }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<AComponent componentObj={componentObj} selected={selected} {...rest}>\n\t\t\t<Row\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcss`position: relative`\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t<span className={cx(addStyleTop, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow();\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t<span className={cx(addStyleBottom, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow(1);\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ARow,\n\tstyleUI: ARowStyleUI,\n\tkeywords: ['grid', 'row'],\n\tname: 'Row',\n\thideFromElementsPane: true,\n\tdefaultComponentObj: undefined,\n\ttype: 'row',\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t},\n\t\treact: {\n\t\t\timports: ['Row'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tTag,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/tag.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const ATagStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst typeItems = [\n\t\t{ id: 'gray', text: 'Gray' },\n\t\t{ id: 'red', text: 'Red' },\n\t\t{ id: 'magenta', text: 'Magenta' },\n\t\t{ id: 'purple', text: 'Purple' },\n\t\t{ id: 'blue', text: 'Blue' },\n\t\t{ id: 'cyan', text: 'Cyan' },\n\t\t{ id: 'teal', text: 'Teal' },\n\t\t{ id: 'green', text: 'Green' },\n\t\t{ id: 'cool-gray', text: 'Cool gray' },\n\t\t{ id: 'warm-gray', text: 'Warm gray' },\n\t\t{ id: 'high-contrast', text: 'High contrast' },\n\t\t{ id: 'outline', text: 'Outline' }\n\t];\n\n\tconst sizeItems = [\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'sm', text: 'Small' }\n\t];\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.title}\n\t\t\tlabelText='Title'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<Dropdown\n\t\t\tlabel='Type'\n\t\t\ttitleText='Type'\n\t\t\titems={typeItems}\n\t\t\tinitialSelectedItem={typeItems.find(item => item.id === selectedComponent.kind)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tkind: event.selectedItem.id\n\t\t\t})}\n\t\t/>\n\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t\t})}\n\t\t/>\n\n\t\t<Checkbox\n\t\t\tlabelText='Is filter'\n\t\t\tid='filter'\n\t\t\tchecked={selectedComponent.filter}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tfilter: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATag = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Tag\n\t\t\ttype={componentObj.kind}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tsize={componentObj.size}\n\t\t\tfilter={componentObj.filter}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Tag>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATag,\n\tstyleUI: ATagStyleUI,\n\trender: ({ componentObj, select, remove, selected }) => <ATag\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.title}\n\t</ATag>,\n\tkeywords: ['tag'],\n\tname: 'Tag',\n\ttype: 'tag',\n\tdefaultComponentObj: {\n\t\ttype: 'tag',\n\t\t// This field is `type` in the `Tag` component\n\t\tkind: 'gray',\n\t\tsize: 'md',\n\t\tfilter: false,\n\t\tdisabled: false,\n\t\ttitle: 'Tag'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Title = \"${json.title}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Type = \"${json.kind}\";`,\n\t\t\toutputs: ({ json }) => `${json.filter\n\t\t\t\t? `@Output() ${nameStringToVariableString(json.codeContext?.name)}Close = new EventEmitter();`\n\t\t\t\t: ''\n\t\t\t}`,\n\t\t\timports: ['TagModule'],\n\t\t\t// NOTE: Angular tag does not support 'disabled' yet. Filtered tag is able to take in 'disabled' as an input\n\t\t\t// but it doesn't do anything.\n\t\t\t// Issue is being tracked here: https://github.com/IBM/carbon-components-angular/issues/2061\n\t\t\tcode: ({ json }) => {\n\t\t\t\tconst defaultProps = `\n\t\t\t\t\t[type]=\"${nameStringToVariableString(json.codeContext?.name)}Type\"\n\t\t\t\t\t[title]=\"${nameStringToVariableString(json.codeContext?.name)}Title\"\n\t\t\t\t\t${`size='${json.size ? json.size : 'md'}'`}\n\t\t\t\t`;\n\t\t\t\tif (json.filter) {\n\t\t\t\t\treturn `<ibm-tag-filter\n\t\t\t\t\t\t${defaultProps}\n\t\t\t\t\t\t(close)='${nameStringToVariableString(json.codeContext?.name)}Close.emit()'\n\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t[disabled]='${json.disabled}'>\n\t\t\t\t\t\t\t${json.title}\n\t\t\t\t\t</ibm-tag-filter>\n\t\t\t\t\t`;\n\t\t\t\t}\n\n\t\t\t\treturn `<ibm-tag\n\t\t\t\t\t${defaultProps}\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.title}\n\t\t\t\t</ibm-tag>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Tag'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Tag\n\t\t\t\t\t${json.kind && ` type=\"${json.kind}\"`}\n\t\t\t\t\t${`size='${json.size ? json.size : 'md'}'`}\n\t\t\t\t\tdisabled={${json.disabled}}\n\t\t\t\t\tfilter={${json.filter}}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.title}\n\t\t\t\t</Tag>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput, Dropdown, Search } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/search.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ASearchInputStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'lg', text: 'Large' },\n\t\t{ id: 'xl', text: 'Extra large' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.inputSize)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinputSize: event.selectedItem.id\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.defaultValue}\n\t\t\tlabelText='Default value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultValue: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ASearchInputCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ASearchInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<Search\n\t\t\t\tsize={componentObj.inputSize}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ASearchInput,\n\tstyleUI: ASearchInputStyleUI,\n\tcodeUI: ASearchInputCodeUI,\n\tkeywords: ['search', 'search input'],\n\tname: 'Search',\n\ttype: 'search',\n\tdefaultComponentObj: {\n\t\ttype: 'search',\n\t\tlabel: 'Search',\n\t\tplaceholder: 'Search',\n\t\tinputSize: 'lg'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['SearchModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-search\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\">\n\t\t\t\t</ibm-search>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Search'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Search\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AText = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t{...rest}>\n\t\t\t{children}\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AText,\n\tstyleUI: ATextStyleUI,\n\trender: ({ componentObj, select, remove, selected }) => <AText\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</AText>,\n\tkeywords: ['text'],\n\tname: 'Text',\n\ttype: 'text',\n\tdefaultComponentObj: {\n\t\ttype: 'text',\n\t\ttext: 'Text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: [],\n\t\t\tcode: ({ json }) => {\n\t\t\t\tif (json.cssClasses) {\n\t\t\t\t\treturn `<span ${angularClassNamesFromComponentObj(json)}>${json.text}</span>`;\n\t\t\t\t}\n\t\t\t\treturn json.text;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\tcode: ({ json }) => {\n\t\t\t\tif (json.cssClasses) {\n\t\t\t\t\treturn `<span ${reactClassNamesFromComponentObj(json)}>${json.text}</span>`;\n\t\t\t\t}\n\t\t\t\treturn json.text;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextArea, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text-area.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextAreaStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATextAreaCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ATextArea = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<TextArea\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATextArea,\n\tstyleUI: ATextAreaStyleUI,\n\tcodeUI: ATextAreaCodeUI,\n\tkeywords: ['textarea', 'text area', 'input'],\n\tname: 'Text area',\n\ttype: 'text-area',\n\tdefaultComponentObj: {\n\t\ttype: 'text-area',\n\t\tlabel: 'Text area label',\n\t\tplaceholder: 'Text area placeholder',\n\t\thelperText: 'Helper text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['InputModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-label\n\t\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t\t${json.label}\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tibmTextArea\n\t\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\t\tplaceholder=\"${json.placeholder}\"></textarea>\n\t\t\t\t</ibm-label>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TextArea'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<TextArea\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput, Dropdown } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text-input.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextInputStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst typeItems = [\n\t\t{ id: 'text', text: 'Text' },\n\t\t{ id: 'email', text: 'Email' },\n\t\t{ id: 'password', text: 'Password' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Type'\n\t\t\ttitleText='Type'\n\t\t\titems={typeItems}\n\t\t\tinitialSelectedItem={typeItems.find(item => item.id === selectedComponent.inputType)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinputType: event.selectedItem.id\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.defaultValue}\n\t\t\tlabelText='Default value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultValue: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATextInputCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ATextInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<TextInput\n\t\t\t\ttype={componentObj.inputType}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATextInput,\n\tstyleUI: ATextInputStyleUI,\n\tcodeUI: ATextInputCodeUI,\n\tkeywords: ['text', 'text', 'input'],\n\tname: 'Text input',\n\ttype: 'text-input',\n\tdefaultComponentObj: {\n\t\ttype: 'text-input',\n\t\tlabel: 'Text input label',\n\t\tplaceholder: 'Text input placeholder',\n\t\thelperText: 'Helper text',\n\t\tinputType: 'text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['InputModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-label\n\t\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t\t${json.label}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tibmText\n\t\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\t\tplaceholder=\"${json.placeholder}\">\n\t\t\t\t</ibm-label>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TextInput'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<TextInput\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Link, Checkbox, TextInput } from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/link.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const ALinkStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disable-label'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Inline'\n\t\t\tid='Inline-select'\n\t\t\tchecked={selectedComponent.inline}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tinline: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ALinkCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.href || ''}\n\t\t\tlabelText='href'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\thref: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\nexport const ALink = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Link\n\t\t\tinline={componentObj.inline}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Link>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ALink,\n\tstyleUI: ALinkStyleUI,\n\tcodeUI: ALinkCodeUI,\n\trender: ({ componentObj, select, remove, selected }) => <ALink\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</ALink>,\n\tkeywords: ['link'],\n\tname: 'Link',\n\ttype: 'link',\n\tdefaultComponentObj: {\n\t\ttype: 'link',\n\t\ttext: 'Link',\n\t\tinline: false,\n\t\tdisabled: false,\n\t\tcodeContext: {\n\t\t\thref: '#'\n\t\t}\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Inline = ${json.inline};\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled};\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Href = '${json.codeContext?.href}'`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Clicked = new EventEmitter();`,\n\t\t\timports: ['LinkModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<a\n\t\t\t\t\tibmLink\n\t\t\t\t\t[inline]=\"${nameStringToVariableString(json.codeContext?.name)}Inline\"\n\t\t\t\t\t[disabled]=\"${nameStringToVariableString(json.codeContext?.name)}Disabled\"\n\t\t\t\t\t[href]=\"${nameStringToVariableString(json.codeContext?.name)}Href\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.text}\n\t\t\t\t</a>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Link'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Link\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${json.inline !== undefined ? `inline={${json.inline}}` : ''}\n\t\t\t\t\t${json.codeContext?.href !== undefined && json.codeContext?.href !== '' ? `href='${json.codeContext?.href}'` : ''}\n\t\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.text}\n\t\t\t\t</Link>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { getParentComponent, updatedState } from '../../components';\nimport { useFragment } from '../../context';\n\n// Combine all items from 'top' & 'bottom' folds into a single array\nconst getExpandableTileItems = (expandableTile: any) => {\n\tconst items: any = [];\n\texpandableTile.items.forEach((item: any) => {\n\t\tif (item.type === 'tile-fold') {\n\t\t\titems.push(...item.items);\n\t\t} else {\n\t\t\titems.push({ ...item });\n\t\t}\n\t});\n\n\treturn items;\n};\n\n/**\n *  Morph parent (Group) & children to other group type\n */\nconst groupToGroup = (selectedItem: any, component: any) => {\n\treturn {\n\t\t...component,\n\t\t...selectedItem.defaultComponent,\n\t\titems: component.items.map((tile: any) => ({\n\t\t\t...tile,\n\t\t\t...selectedItem.childDefaultComponent\n\t\t}))\n\t};\n};\n\n/**\n * Takes the children tiles of the group, converts them & places them in current components position\n */\nconst groupToSingle = (selectedItem: any, component: any, parentComponent: any) => {\n\tconst tiles = component.items.map((tile: any) => {\n\t\tconst tileItems = [...tile.items];\n\n\t\t// Adds empty bottom fold\n\t\tif (selectedItem.id === 'expandabletile') {\n\t\t\ttileItems.push(...selectedItem.defaultComponent.items);\n\t\t}\n\n\t\treturn {\n\t\t\t...tile,\n\t\t\t...selectedItem.defaultComponent,\n\t\t\titems: tileItems\n\t\t};\n\t});\n\n\t// We are not destructuring entire component object since we do not want tile `group` specific attributes\n\tconst componentIndex = parentComponent.items.indexOf(component);\n\tconst items = [\n\t\t...parentComponent.items.slice(0, componentIndex),\n\t\t...tiles,\n\t\t...parentComponent.items.slice(componentIndex + 1)\n\t];\n\n\treturn {\n\t\t...parentComponent,\n\t\titems\n\t};\n};\n\n/**\n * Sets current component as a wrapper & passes a single tile as an item (child)\n */\nconst singleToGroup = (selectedItem: any, component: any) => {\n\treturn {\n\t\t...component,\n\t\t...selectedItem.defaultComponent,\n\t\titems: [\n\t\t\t{\n\t\t\t\t...selectedItem.childDefaultComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tformItemName: component.codeContext?.name\n\t\t\t\t},\n\t\t\t\titems: (component.type === 'expandable-tile') ? getExpandableTileItems(component) : [...component.items]\n\t\t\t}\n\t\t],\n\t\ttileGroup: true\n\t};\n};\n\n/**\n * Majority of the atrributes are the same, so they will be overwrriten to default state\n */\nconst singleToSingle = (selectedItem: any, component: any) => {\n\tconst items = [];\n\n\tif (component.type === 'expandable-tile') {\n\t\titems.push(...getExpandableTileItems(component));\n\t} else if (selectedItem.id === 'expandabletile') {\n\t\titems.push(...component.items, ...selectedItem.defaultComponent.items);\n\t} else {\n\t\titems.push(...component.items);\n\t}\n\n\treturn {\n\t\t...component,\n\t\t...selectedItem.defaultComponent,\n\t\titems\n\t};\n};\n\n/**\n * Dropdown component to morph between different tiles\n */\nexport const TileMorphism = ({ component, setComponent }: any) => {\n\tconst tileTypes = [\n\t\t{\n\t\t\tid: 'tile',\n\t\t\ttext: 'Tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'tile'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'clickabletile',\n\t\t\ttext: 'Clickable tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'clickable-tile'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'expandabletile',\n\t\t\ttext: 'Expandable tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'expandable-tile',\n\t\t\t\texpanded: true,\n\t\t\t\toutline: false,\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'tile-fold',\n\t\t\t\t\t\titems: []\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'selectabletile',\n\t\t\ttext: 'Standalone selectable tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tstandalone: true,\n\t\t\t\tdisabled: false,\n\t\t\t\tselected: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'selectableTileGroup',\n\t\t\ttext: 'Multiselect tiles',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'selectable-tile-group',\n\t\t\t\ttileGroup: true\n\t\t\t},\n\t\t\tchildDefaultComponent: {\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tselected: false,\n\t\t\t\tstandalone: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'radioTileGroup',\n\t\t\ttext: 'Radio tiles',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'radio-tile-group',\n\t\t\t\tlegend: 'Radio Tile Group',\n\t\t\t\ttileGroup: true\n\t\t\t},\n\t\t\tchildDefaultComponent: {\n\t\t\t\ttype: 'radio-tile'\n\t\t\t}\n\t\t}\n\t];\n\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst convert = ({ selectedItem }: any) => {\n\t\t// Conversion to different types\n\t\tif (component?.tileGroup && selectedItem.defaultComponent?.tileGroup) {\n\t\t\tsetComponent(\n\t\t\t\tgroupToGroup(selectedItem, component)\n\t\t\t);\n\t\t} else if (component?.tileGroup && !selectedItem.defaultComponent?.tileGroup) {\n\t\t\tconst parentComponent: any = getParentComponent(fragment.data, component);\n\n\t\t\tsetFragment({\n\t\t\t\t...fragment,\n\t\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\t\ttype: 'update',\n\t\t\t\t\tcomponent: groupToSingle(selectedItem, component, parentComponent)\n\t\t\t\t})\n\t\t\t});\n\t\t} else if (!component.tileGroup && selectedItem.defaultComponent?.tileGroup) {\n\t\t\tsetComponent(\n\t\t\t\tsingleToGroup(selectedItem, component)\n\t\t\t);\n\t\t} else {\n\t\t\tsetComponent(\n\t\t\t\tsingleToSingle(selectedItem, component)\n\t\t\t);\n\t\t}\n\t};\n\n\treturn <Dropdown\n\t\tid=\"tile-morpher\"\n\t\tlabel=\"Convert to another tile type\"\n\t\ttitleText=\"Tile type\"\n\t\tinitialSelectedItem={tileTypes.find(item => item.id === component.type)}\n\t\titems={tileTypes}\n\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\tonChange={convert}\n\t/>;\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tTextInput,\n\tTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '../';\nimport image from '../../assets/component-icons/tile.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ATileStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\tvalue={selectedComponent.codeContext?.name}\n\t\tlabelText='Input name'\n\t\tonChange={(event: any) => {\n\t\t\tsetComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t}\n\t\t\t});\n\t\t}}\n\t/>;\n};\n\nexport const ATile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tselected={selected}\n\t\t{...rest}>\n\t\t\t<Tile\n\t\t\tonDrop={onDrop}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\tlight={componentObj.light}>\n\t\t\t\t{children}\n\t\t\t</Tile>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATile,\n\tstyleUI: ATileStyleUI,\n\tkeywords: ['tile', 'card'],\n\tname: 'Tile',\n\ttype: 'tile',\n\tdefaultComponentObj: {\n\t\ttype: 'tile',\n\t\titems: [\n\t\t\t{ type: 'text', text: 'A simple tile' }\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ATile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t{componentObj.items.map((tile: any) => renderComponents(tile))}\n\t</ATile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Theme = '${json.light ? 'light' : ''}';`,\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-tile\n\t\t\t\t\t[theme]=\"${nameStringToVariableString(json.codeContext?.name)}Theme\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Tile'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<Tile\n\t\t\t\t\t${json.light !== undefined ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</Tile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tClickableTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport image from '../../assets/component-icons/tile-clickable.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const AClickableTileStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AClickableTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.href || ''}\n\t\t\tlabelText='href for clickable UI'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\thref: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\nexport const AClickableTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\t// Prevent users from being redirected\n\tconst onClick = (event: any) => {\n\t\tevent.preventDefault();\n\t};\n\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tselected={selected}\n\t\t{...rest}>\n\t\t\t<ClickableTile\n\t\t\tonClick={onClick}\n\t\t\tonDrop={onDrop}\n\t\t\tlight={componentObj.light}\n\t\t\thref={componentObj.codeContext?.href}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\tdisabled={componentObj.disabled}>\n\t\t\t\t{children}\n\t\t\t</ClickableTile>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AClickableTile,\n\tstyleUI: AClickableTileStyleUI,\n\tcodeUI: AClickableTileCodeUI,\n\tkeywords: ['tile', 'clickable', 'card'],\n\tname: 'Clickable tile',\n\ttype: 'clickable-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'clickable-tile',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'text',\n\t\t\t\ttext: 'A clickable tile'\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AClickableTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</AClickableTile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Href = '${json.href}';\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled || false}`,\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-clickable-tile\n\t\t\t\t\t[href]=${nameStringToVariableString(json.codeContext?.name)}Href\n\t\t\t\t\t[disabled]=${nameStringToVariableString(json.codeContext?.name)}Disabled\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-clickable-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['ClickableTile'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ClickableTile\n\t\t\t\t\t${json.codeContext?.href !== undefined && json.codeContext?.href !== '' ? `href='${json.codeContext?.href}'` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ClickableTile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tExpandableTile,\n\tTileAboveTheFoldContent,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport image from '../../assets/component-icons/tile-expandable.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const AExpandableStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Expanded'\n\t\t\tid='expanded'\n\t\t\tchecked={selectedComponent.expanded}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\texpanded: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='outline'\n\t\t\tchecked={selectedComponent.outline}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\toutline: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AExpandableTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>;\n};\n\nconst showOutlineStyle = css`\n\tspan.bx--tile-content__above-the-fold,\n\tspan.bx--tile-content__below-the-fold {\n\t\tmin-height: 16px;\n\t\toutline: 1px dashed #78a9ff;\n\t}\n`;\n\nexport const AExpandableTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tselected={selected}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<ExpandableTile\n\t\t\tlight={componentObj.light}\n\t\t\tclassName={`${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} ${componentObj.outline ? showOutlineStyle : ''}`}\n\t\t\texpanded={componentObj.expanded}>\n\t\t\t\t<TileAboveTheFoldContent onDrop={onDrop}>\n\t\t\t\t\t{children.filter(({ props }: any) => props && props.componentObj.type !== 'tilefold')}\n\t\t\t\t</TileAboveTheFoldContent>\n\t\t\t\t{\n\t\t\t\t\t// Renders bottom fold component\n\t\t\t\t\tchildren.filter(({ props }: any) => props && props.componentObj.type === 'tilefold')\n\t\t\t\t}\n\t\t\t</ExpandableTile>\n\t\t</AComponent>\n\t);\n};\n\n// Splits data into folds - all exports will have a common approach\nconst getFoldObjects = (json: any) => {\n\treturn {\n\t\taboveFold: json.items.filter((item: any) => item.type !== 'tilefold'),\n\t\tbelowFold: json.items.filter((item: any) => item.type === 'tilefold')\n\t};\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AExpandableTile,\n\tstyleUI: AExpandableStyleUI,\n\tkeywords: ['tile', 'fold', 'expandable'],\n\tname: 'Expandable tile',\n\ttype: 'expandable-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'expandable-tile',\n\t\tlight: false,\n\t\texpanded: true,\n\t\toutline: false,\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'text',\n\t\t\t\ttext: 'Above fold'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'tile-fold',\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: 'Below fold'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AExpandableTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t{componentObj.items.map((fold: any) => renderComponents(fold))}\n\t</AExpandableTile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Expanded = ${json.expanded}`,\n\t\t\toutputs: () => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\tconst { aboveFold, belowFold } = getFoldObjects(json);\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-expandable-tile\n\t\t\t\t\t${json.expanded !== undefined ? `[expanded]=\"${nameStringToVariableString(json.codeContext?.name)}Expanded\"` : ''}\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t<span class=\"bx--tile-content__above-the-fold\">\n\t\t\t\t\t\t\t${aboveFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t${belowFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-expandable-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['ExpandableTile', 'TileAboveTheFoldContent', 'TileBelowTheFoldContent'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\tconst { aboveFold, belowFold } = getFoldObjects(json);\n\t\t\t\treturn `<ExpandableTile\n\t\t\t\t\t${json.light !== undefined && !!json.light ? `light={${json.light}}` : ''}\n\t\t\t\t\t${json.expanded !== undefined && !!json.expanded ? `expanded={${json.expanded}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t<TileAboveTheFoldContent>\n\t\t\t\t\t\t\t${aboveFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t\t</TileAboveTheFoldContent>\n\t\t\t\t\t\t${belowFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ExpandableTile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tTileBelowTheFoldContent\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport {\n\tangularClassNamesFromComponentObj,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ATileFoldStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />;\n};\n\nexport const ATileFold = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<TileBelowTheFoldContent onDrop={onDrop}>{children}</TileBelowTheFoldContent>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATileFold,\n\tstyleUI: ATileFoldStyleUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ATileFold\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</ATileFold>,\n\tkeywords: ['tile', 'tile fold', 'fold'],\n\tname: 'tilefold',\n\thideFromElementsPane: true,\n\timage: undefined,\n\ttype: 'tile-fold',\n\tdefaultComponentObj: {\n\t\ttype: 'tile-fold',\n\t\titems: []\n\t},\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: () => '',\n\t\t\toutputs: () => '',\n\t\t\timports: [],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t// Appends below the fold class to class list\n\t\t\t\tlet classes = angularClassNamesFromComponentObj(json);\n\t\t\t\tif (classes) {\n\t\t\t\t\tclasses = classes.split('=\"').join('=\"bx--tile-content__below-the-fold ');\n\t\t\t\t} else {\n\t\t\t\t\tclasses = 'class=\"bx--tile-content__below-the-fold\"';\n\t\t\t\t}\n\n\t\t\t\treturn `<span ${classes}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<TileBelowTheFoldContent\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t</TileBelowTheFoldContent>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tSelectableTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport image from '../../assets/component-icons/tile-selectable.svg';\nimport {\n\tAdder,\n\tgetParentComponent,\n\tupdatedState\n} from '../../components';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ASelectableTileStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t{\n\t\t\tselectedComponent.standalone && <>\n\t\t\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabelText='Light theme'\n\t\t\t\t\tid='theme-select'\n\t\t\t\t\tchecked={selectedComponent.light}\n\t\t\t\t\tonChange={(checked: any) => {\n\t\t\t\t\t\tsetComponent({\n\t\t\t\t\t\t\t...selectedComponent,\n\t\t\t\t\t\t\tlight: checked\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</>\n\t\t}\n\t\t<Checkbox\n\t\t\tlabelText='Selected'\n\t\t\tid='selected'\n\t\t\tchecked={selectedComponent.selected}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tselected: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ASelectableTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.title || ''}\n\t\t\tlabelText='Title'\n\t\t\tplaceholder='Title attribute'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.value || ''}\n\t\t\tlabelText='Value'\n\t\t\tplaceholder='Tile value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tvalue: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\n// Prevent users from clicking on the selectable tile\nconst preventCheckEvent = css`\n\tpointer-events: none;\n\t.bx--tile-content {\n\t\tpointer-events: initial;\n\t}\n`;\n\nexport const ASelectableTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\tconst addTile = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\tstandalone: false,\n\t\t\t\t\ttype: 'selectable-tile',\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tformItemName: componentObj.codeContext?.formItemName\n\t\t\t\t\t},\n\t\t\t\t\t...(componentObj.light !== undefined ? { light: componentObj.light } : ''),\n\t\t\t\t\titems: [{ type: 'text', text: 'New selectable tile' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\t// Removing `for` attribute so users can select text and other non-form elements.\n\tuseEffect(() => {\n\t\tconst tileElement = document.getElementById(componentObj.codeContext.name);\n\t\tconst labelElement = tileElement?.parentElement?.querySelector('label.bx--tile.bx--tile--selectable');\n\t\t// Setting to empty instead of removing so users can select non-form elements within tile when a form element is present\n\t\t// Although form elements should never be added within another\n\t\tlabelElement?.setAttribute('for', '');\n\t}, [componentObj.codeContext]);\n\n\treturn (\n\t\t<Adder\n\t\t\tactive={parentComponent?.tileGroup && selected}\n\t\t\ttopAction={() => addTile()}\n\t\t\tbottomAction={() => addTile(1)}\n\t\t\tkey={componentObj.id}>\n\t\t\t<AComponent\n\t\t\t\tcomponentObj={componentObj}\n\t\t\t\theadingCss={css`display: block;`}\n\t\t\t\tclassName={css`cursor: pointer;`}\n\t\t\t\tselected={selected}\n\t\t\t\t{...rest}>\n\t\t\t\t\t<SelectableTile\n\t\t\t\t\tid={componentObj.codeContext?.name}\n\t\t\t\t\tname={componentObj.codeContext?.formItemName || componentObj.codeContext?.name}\n\t\t\t\t\ttitle={componentObj.title}\n\t\t\t\t\tvalue={componentObj.value}\n\t\t\t\t\tlight={componentObj.light}\n\t\t\t\t\tselected={componentObj.selected}\n\t\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\t\tclassName={`${preventCheckEvent} ${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}`}\n\t\t\t\t\tonDrop={onDrop}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</SelectableTile>\n\t\t\t</AComponent>\n\t\t</Adder>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ASelectableTile,\n\tstyleUI: ASelectableTileStyleUI,\n\tcodeUI: ASelectableTileCodeUI,\n\tkeywords: ['tile', 'card', 'multi', 'selectable'],\n\tname: 'Selectable tile',\n\ttype: 'selectable-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'selectable-tile',\n\t\tstandalone: true,\n\t\tdisabled: false,\n\t\tselected: false,\n\t\titems: [\n\t\t\t{ type: 'text', text: 'A standalone selectable tile' }\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ASelectableTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</ASelectableTile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Selected = ${json.selected || false};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Value = '${json.value}';`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Change = new EventEmitter<Event>();`,\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light & disabled\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-selection-tile\n\t\t\t\t\t[value]=\"${nameStringToVariableString(json.codeContext?.name)}Value\"\n\t\t\t\t\t[selected]=\"${nameStringToVariableString(json.codeContext?.name)}Selected\"\n\t\t\t\t\t${json.standalone ? `(change)=\"${nameStringToVariableString(json.codeContext?.name)}Change.emit($event)\"` : ''}\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t</ibm-selection-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['SelectableTile'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\tconst stateFunction = json.standalone ?\n\t\t\t\t\t`() => {\n\t\t\t\t\t\thandleInputChange({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\t\tvalue: \"${json.codeContext?.value}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t})}` :\n\t\t\t\t\t`() =>\n\t\t\t\t\t\thandleSelectableTileChange(\n\t\t\t\t\t\t\t\"${json.codeContext?.formItemName}\",\n\t\t\t\t\t\t\t\"${json.codeContext?.name}\"\n\t\t\t\t\t\t)\n\t\t\t\t\t`;\n\n\t\t\t\treturn `<SelectableTile\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\t${(json.codeContext?.value !== undefined && json.codeContext?.value !== '') ? `value=\"${json.codeContext?.value}\"` : ''}\n\t\t\t\t\t${(json.codeContext?.title !== undefined && json.codeContext?.title !== '') ? `title=\"${json.codeContext?.title}\"` : ''}\n\t\t\t\t\t${\n\t\t\t\t\t\t(json.codeContext?.formItemName !== undefined && !json.standalone)\n\t\t\t\t\t\t\t? `name=\"${json.codeContext?.formItemName}\"` : `name=\"${json.codeContext?.name}\"`\n\t\t\t\t\t}\n\t\t\t\t\t${json.selected !== undefined ? `selected={${json.selected}}` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light={${json.light}}` : ''}\n\t\t\t\t\t${json.disabled !== undefined && !!json.disabled ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonClick={${stateFunction}}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</SelectableTile>`;\n\t\t\t},\n\t\t\tadditionalCode: (json) => {\n\t\t\t\tif(json.standalone) {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\thandleSelectableTileChange: `const handleSelectableTileChange = (name, id) => {\n\t\t\t\t\t\thandleInputChange({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t...state[name],\n\t\t\t\t\t\t\t\t\t[id]: !state[name]?.[id]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};`\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport { TextInput, Checkbox } from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { getParentComponent, updatedState } from '../../components';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\n\nimport image from '../../assets/component-icons/tile-selectable-group.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ASelectableTileGroupStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\t/**\n\t\t\t\t * It usually is not common for users to have different theme for each tile,\n\t\t\t\t * this approach will ensure users don't have to go through each child `tile` & update theme\n\t\t\t\t */\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked,\n\t\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t\t...tile,\n\t\t\t\t\t\tlight: checked\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ASelectableTileGroupCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\tvalue={selectedComponent.codeContext?.name}\n\t\tlabelText='Input name'\n\t\tonChange={(event: any) => {\n\t\t\tsetComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t},\n\t\t\t\t// Grouped form elements (Radio) within a fieldset should have the same name\n\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...tile.codeContext,\n\t\t\t\t\t\t// Selectable Tiles (Children) use formItemName\n\t\t\t\t\t\tformItemName: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t});\n\t\t}}\n\t/>;\n};\n\nexport const ASelectableTileGroup = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\t// Initialize the child tiles with the form item name\n\t// We use the name property because it unique by default\n\tuseEffect(() => {\n\t\tconst parentComponent: any = getParentComponent(fragment.data, componentObj);\n\t\tconst componentIndex = parentComponent.items.indexOf(componentObj);\n\t\tconst items = [\n\t\t\t...parentComponent.items.slice(0, componentIndex),\n\t\t\t{\n\t\t\t\t...componentObj,\n\t\t\t\titems: componentObj.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: { ...tile.codeContext, formItemName: componentObj.codeContext?.name }\n\t\t\t\t}))\n\t\t\t},\n\t\t\t...parentComponent.items.slice(componentIndex + 1)\n\t\t];\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent: {\n\t\t\t\t\t...parentComponent,\n\t\t\t\t\titems\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t\t// Disabling since we want to call this only once to initialize children `formItemName` attribute in code context\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\theadingCss={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t<div\n\t\t\t\trole=\"group\"\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\taria-label=\"Selectable tiles\">\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ASelectableTileGroup,\n\tstyleUI: ASelectableTileGroupStyleUI,\n\tcodeUI: ASelectableTileGroupCodeUI,\n\tkeywords: ['tile', 'card', 'multi', 'select'],\n\tname: 'Selectable tile group',\n\ttype: 'selectable-tile-group',\n\tdefaultComponentObj: {\n\t\ttype: 'selectable-tile-group',\n\t\ttileGroup: true,\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 1'\n\t\t\t\t},\n\t\t\t\tstandalone: false,\n\t\t\t\tselected: false,\n\t\t\t\titems: [{ type: 'text', text: 'Selectable tile A' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 2'\n\t\t\t\t},\n\t\t\t\tstandalone: false,\n\t\t\t\tselected: false,\n\t\t\t\titems: [{ type: 'text', text: 'Selectable tile B' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 3'\n\t\t\t\t},\n\t\t\t\tstandalone: false,\n\t\t\t\tselected: false,\n\t\t\t\titems: [{ type: 'text', text: 'Selectable tile C' }]\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ASelectableTileGroup\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((tile: any) => renderComponents(tile))}\n\t</ASelectableTileGroup>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: () => '',\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Selected = new EventEmitter<Event>();`,\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-tile-group\n\t\t\t\t\t(selected)=\"${nameStringToVariableString(json.codeContext?.name)}Selected.emit($event)\"\n\t\t\t\t\t[multiple]=\"true\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-tile-group>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<div\n\t\t\t\t\trole=\"group\"\n\t\t\t\t\taria-label=\"Selectable tiles\"\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</div>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tRadioTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport {\n\tAdder,\n\tgetParentComponent,\n\tupdatedState\n} from '../../components';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ARadioTileStyleUI = ({ selectedComponent, setComponent }: any) => {\n\tconst [fragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, selectedComponent);\n\n\t// Removes checkmark from siblings and checks current\n\tconst updateParentDefaultChecked = (checked: boolean) => {\n\t\t// Deleting attribute to prevent from being in export\n\t\tif (!checked && parentComponent.defaultChecked) {\n\t\t\tdelete parentComponent.defaultChecked;\n\t\t} else {\n\t\t\tparentComponent.items.forEach((item: any) => {\n\t\t\t\titem.defaultChecked = false;\n\t\t\t});\n\n\t\t\tparentComponent.defaultChecked = selectedComponent.value;\n\t\t}\n\t};\n\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Default checked'\n\t\t\tid='default-checked'\n\t\t\tchecked={selectedComponent.defaultChecked}\n\t\t\tonChange={(defaultChecked: any) => {\n\t\t\t\tupdateParentDefaultChecked(defaultChecked);\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultChecked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ARadioTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.value || ''}\n\t\t\tlabelText='Value*'\n\t\t\tplaceholder='Tile value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tvalue: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\nexport const ARadioTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\t// Removing `for` attribute so users can select text and other non-form elements.\n\tuseEffect(() => {\n\t\tconst tileElement = document.getElementById(componentObj.codeContext?.name);\n\t\tconst labelElement = tileElement?.parentElement?.querySelector('label.bx--tile.bx--tile--selectable');\n\t\t// Setting to empty instead of removing so users can select non-form elements within tile when a form element is present\n\t\t// Although form elements should never be added within another\n\t\tlabelElement?.setAttribute('for', '');\n\t}, [componentObj.codeContext]);\n\n\tconst addRadio = (offset = 0) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(\n\t\t\t\tfragment.data,\n\t\t\t\t{\n\t\t\t\t\ttype: 'insert',\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\ttype: 'radio-tile',\n\t\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t\tvalue: 'Tile',\n\t\t\t\t\t\t\tformItemName: componentObj.codeContext?.formItemName\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...(componentObj.light !== undefined ? { light: componentObj.light } : ''),\n\t\t\t\t\t\titems: [{ type: 'text', text: 'New radio tile' }]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparentComponent.id,\n\t\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t\t)\n\t\t});\n\t};\n\n\treturn (\n\t\t<Adder\n\t\tactive={selected}\n\t\ttopAction={() => addRadio()}\n\t\tbottomAction={() => addRadio(1)}\n\t\tkey={componentObj.id}>\n\t\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\theadingCss={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t<RadioTile\n\t\t\t\tid={componentObj.codeContext?.name}\n\t\t\t\tname={componentObj.codeContext?.formItemName}\n\t\t\t\tlight={componentObj.light}\n\t\t\t\tchecked={componentObj.defaultChecked}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tvalue={componentObj.codeContext?.value}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\tonDrop={onDrop}>\n\t\t\t\t\t{children}\n\t\t\t\t</RadioTile>\n\t\t\t</AComponent>\n\t\t</Adder>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ARadioTile,\n\tstyleUI: ARadioTileStyleUI,\n\tcodeUI: ARadioTileCodeUI,\n\tkeywords: ['tile', 'card', 'radio', 'selectable'],\n\tname: 'Radio tile',\n\ttype: 'radio-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'radio-tile',\n\t\tdisabled: false,\n\t\tdefaultChecked: false,\n\t\titems: []\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ARadioTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</ARadioTile>,\n\t/**\n\t * Can only be added by adding tile-group or by clicking `plus` icon on top or bottom\n\t * of existing RadioTile\n\t */\n\thideFromElementsPane: true,\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Checked = ${json.checked || false};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Value = '${json.value}';`,\n\t\t\toutputs: () => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light & disabled\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-selection-tile\n\t\t\t\t\t[value]=\"${nameStringToVariableString(json.codeContext?.name)}Value\"\n\t\t\t\t\t[selected]=\"${nameStringToVariableString(json.codeContext?.name)}Selected\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-selection-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['RadioTile'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<RadioTile\n\t\t\t\t\t${\n\t\t\t\t\t\t(json.codeContext?.formItemName !== undefined && json.codeContext?.formItemName !== '')\n\t\t\t\t\t\t\t? `name=\"${json.codeContext?.formItemName}\"` : ''\n\t\t\t\t\t}\n\t\t\t\t\t${(json.codeContext?.value !== undefined && json.codeContext?.value !== '') ? `value=\"${json.codeContext?.value}\"` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light={${json.light}}` : ''}\n\t\t\t\t\t${json.defaultChecked ? `checked={${json.defaultChecked}}` : ''}\n\t\t\t\t\t${json.disabled !== undefined && !!json.disabled ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</RadioTile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport { TextInput, Checkbox } from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { getParentComponent, updatedState } from '../../components';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '../';\n\nimport image from '../../assets/component-icons/tile-radio.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ARadioTileGroupStyleUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.legend}\n\t\t\tlabelText='Legend name'\n\t\t\tplaceholder='Fieldset header'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlegend: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\t/**\n\t\t\t\t * It usually is not common for users to have different theme for each tile,\n\t\t\t\t * this approach will ensure users don't have to go through each child `tile` & update theme\n\t\t\t\t */\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked,\n\t\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t\t...tile,\n\t\t\t\t\t\tlight: checked\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ARadioTileGroupCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\tvalue={selectedComponent.codeContext?.name}\n\t\tlabelText='Input name'\n\t\tonChange={(event: any) => {\n\t\t\tsetComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t},\n\t\t\t\t// Radio form elements within a fieldset should have the same name\n\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...tile.codeContext,\n\t\t\t\t\t\t// Radio Tiles (Children) use formItemName\n\t\t\t\t\t\tformItemName: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t});\n\t\t}}\n\t/>;\n};\n\nexport const ARadioTileGroup = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\t// Initialize the child tiles with the form item name\n\t// We use the name property because it unique by default\n\tuseEffect(() => {\n\t\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\t\tconst componentIndex = parentComponent.items.indexOf(componentObj);\n\t\tconst items = [\n\t\t\t...parentComponent.items.slice(0, componentIndex),\n\t\t\t{\n\t\t\t\t...componentObj,\n\t\t\t\titems: componentObj.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: { ...tile.codeContext, formItemName: componentObj.codeContext?.name }\n\t\t\t\t}))\n\t\t\t},\n\t\t\t...parentComponent.items.slice(componentIndex + 1)\n\t\t];\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent: {\n\t\t\t\t\t...parentComponent,\n\t\t\t\t\titems\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t\t// Disabling since we want to call this only once to initialize children `formItemName` attribute in code context\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\theadingCss={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t<fieldset\n\t\t\t\tclassName={`bx--tile-group ${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}`}\n\t\t\t\tdisabled={componentObj.disabled}>\n\t\t\t\t\t{(componentObj.legend !== undefined && componentObj.legend !== '') &&\n\t\t\t\t\t<legend className=\"bx--label\">\n\t\t\t\t\t\t{componentObj.legend}\n\t\t\t\t\t</legend>}\n\t\t\t\t\t{children}\n\t\t\t\t</fieldset>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ARadioTileGroup,\n\tstyleUI: ARadioTileGroupStyleUI,\n\tcodeUI: ARadioTileGroupCodeUI,\n\tkeywords: ['tile', 'card', 'radio', 'select'],\n\tname: 'Radio tile group',\n\ttype: 'radio-tile-group',\n\tdefaultComponentObj: {\n\t\ttype: 'radio-tile-group',\n\t\ttileGroup: true,\n\t\tlegend: 'Radio Tile Group',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'radio-tile',\n\t\t\t\tdefaultChecked: false,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 1'\n\t\t\t\t},\n\t\t\t\titems: [{ type: 'text', text: 'Radio tile A' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'radio-tile',\n\t\t\t\tdefaultChecked: false,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 2'\n\t\t\t\t},\n\t\t\t\titems: [{ type: 'text', text: 'Radio tile B' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'radio-tile',\n\t\t\t\tdefaultChecked: false,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 3'\n\t\t\t\t},\n\t\t\t\titems: [{ type: 'text', text: 'Radio tile C' }]\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ARadioTileGroup\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((tile: any) => renderComponents(tile))}\n\t</ARadioTileGroup>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: () => '',\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Selected = new EventEmitter<Event>();`,\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-tile-group\n\t\t\t\t\t(selected)=\"${nameStringToVariableString(json.codeContext?.name)}Selected.emit($event)\"\n\t\t\t\t\t[multiple]=\"false\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-tile-group>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TileGroup'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<TileGroup\n\t\t\t\t\t${json.legend !== undefined && json.legend !== '' ? `legend=\"${json.legend}\"` : ''}\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={(radio) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\tvalue: radio\n\t\t\t\t\t\t}\n\t\t\t\t\t})}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</TileGroup>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","// Accordion\nimport * as accordion from './accordion/a-accordion';\nimport * as accordionitem from './accordion/a-accordion-item';\nimport * as button from './a-button';\nimport * as checkbox from './a-checkbox';\nimport * as column from './a-column';\nimport * as fragment from './a-fragment';\nimport * as grid from './a-grid';\nimport * as numberinput from './a-numberinput';\nimport * as row from './a-row';\nimport * as tag from './a-tag';\nimport * as searchinput from './a-searchinput';\nimport * as text from './a-text';\nimport * as textarea from './a-textarea';\nimport * as textinput from './a-textinput';\nimport * as link from './a-link';\n// Tiles\nimport * as tile from './tiles/a-tile';\nimport * as clickabletile from './tiles/a-clickable-tile';\nimport * as expandabletile from './tiles/a-expandable-tile';\nimport * as tilefold from './tiles/a-tile-fold';\nimport * as selectabletile from './tiles/a-selectable-tile';\nimport * as selectableTileGroup from './tiles/a-selectable-tile-group';\nimport * as radiotile from './tiles/a-radio-tile';\nimport * as radioTileGroup from './tiles/a-radio-tile-group';\n\n// Accordion\nexport { AAccordion, AAccordionStyleUI } from './accordion/a-accordion';\nexport { AAccordionItem, AAccordionItemStyleUI } from './accordion/a-accordion-item';\nexport { AButton, AButtonStyleUI } from './a-button';\nexport { ACheckbox, ACheckboxStyleUI, ACheckboxCodeUI } from './a-checkbox';\nexport { AColumn, AColumnStyleUI } from './a-column';\nexport * from './a-component';\nexport { AFragment, AFragmentStyleUI, AFragmentCodeUI } from './a-fragment';\nexport { AGrid, AGridStyleUI } from './a-grid';\nexport { ARow, ARowStyleUI } from './a-row';\nexport { ATag, ATagStyleUI } from './a-tag';\nexport { AText, ATextStyleUI } from './a-text';\nexport { ATextArea, ATextAreaStyleUI, ATextAreaCodeUI } from './a-textarea';\nexport { ATextInput, ATextInputStyleUI, ATextInputCodeUI } from './a-textinput';\nexport { ASearchInput, ASearchInputStyleUI, ASearchInputCodeUI } from './a-searchinput';\nexport { ANumberInput, ANumberInputStyleUI, ANumberInputCodeUI } from './a-numberinput';\nexport { ALink, ALinkStyleUI, ALinkCodeUI } from './a-link';\n// Tiles\nexport { ATile, ATileCodeUI, ATileStyleUI } from './tiles/a-tile';\nexport { AClickableTile, AClickableTileCodeUI, AClickableTileStyleUI } from './tiles/a-clickable-tile';\nexport { AExpandableTile, AExpandableTileCodeUI, AExpandableStyleUI } from './tiles/a-expandable-tile';\nexport { ATileFold, ATileFoldStyleUI } from './tiles/a-tile-fold';\nexport { ASelectableTile, ASelectableTileCodeUI, ASelectableTileStyleUI } from './tiles/a-selectable-tile';\nexport { ASelectableTileGroup, ASelectableTileGroupCodeUI, ASelectableTileGroupStyleUI } from './tiles/a-selectable-tile-group';\nexport { ARadioTile, ARadioTileCodeUI, ARadioTileStyleUI } from './tiles/a-radio-tile';\nexport { ARadioTileGroup, ARadioTileGroupCodeUI, ARadioTileGroupStyleUI } from './tiles/a-radio-tile-group';\n\nexport const allComponents = {\n\taccordion,\n\taccordionitem,\n\tbutton,\n\tcheckbox,\n\tcolumn,\n\tfragment,\n\tgrid,\n\trow,\n\ttag,\n\ttext,\n\ttextarea,\n\ttextinput,\n\tsearchinput,\n\tnumberinput,\n\tlink,\n\t// Tiles\n\ttile,\n\tclickabletile,\n\texpandabletile,\n\ttilefold,\n\tselectabletile,\n\tselectableTileGroup,\n\tradiotile,\n\tradioTileGroup\n};\n","import React from 'react';\nimport { Add16 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { componentHeaderZIndex } from '../fragment-components';\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-top: -2px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: ${componentHeaderZIndex + 1};\n`;\n\nconst addStyleTop = cx(addStyle, css`\n\tmargin-top: -18px;\n`);\n\nconst addStyleRight = cx(addStyle, css`\n\tright: 0;\n\tmargin-right: -21px;\n`);\n\nconst addStyleLeft = cx(addStyle, css`\n\tleft: 0;\n\tmargin-left: -21px;\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer;\n`;\n\nexport const Adder = ({\n\tactive,\n\tchildren,\n\ttopAction,\n\tbottomAction,\n\tleftAction,\n\trightAction,\n\taddButtonsCss\n}: any) => <>\n\t{\n\t\tactive && topAction && <span className={cx(addStyleTop, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\ttopAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{\n\t\tactive && leftAction && <span className={cx(addStyleLeft, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tleftAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{\n\t\tactive && rightAction && <span className={cx(addStyleRight, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\trightAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{children}\n\t{\n\t\tactive && bottomAction && <span className={cx(addStyle, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tbottomAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n</>;\n","import React from 'react';\nimport {\n\tHeaderMenuButton,\n\tHeaderName,\n\tHeader as ShellHeader\n} from 'carbon-components-react/lib/components/UIShell';\nimport { css } from 'emotion';\nimport { useHistory } from 'react-router-dom';\n\nexport const Header = ({ isSideNavExpanded, setIsSideNavExpanded }: any) => {\n\tconst history = useHistory();\n\n\tconst headerName = css`\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<ShellHeader aria-label=\"IBM Carbon Components Builder\" role='banner' tabIndex={0}>\n\t\t\t<HeaderMenuButton\n\t\t\t\taria-label={`${isSideNavExpanded ? 'Close menu' : 'Open menu'}`}\n\t\t\t\tisActive={isSideNavExpanded}\n\t\t\t\tonClick={() => setIsSideNavExpanded(!isSideNavExpanded)} />\n\t\t\t<HeaderName\n\t\t\t\tprefix=\"IBM\"\n\t\t\t\ttabIndex={0}\n\t\t\t\ttitle='Carbon Components Builder home'\n\t\t\t\tclassName={headerName}\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t\tonKeyDown={(event: any) => event.key === 'Enter' && history.push('/')}>\n\t\t\t\tCarbon Components Builder {process.env.NODE_ENV === 'development' ? 'Dev' : ''}\n\t\t\t</HeaderName>\n\t\t</ShellHeader>\n\t);\n};\n","import React, {\n\tComponent,\n\tComponentPropsWithRef,\n\tforwardRef\n} from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { HeaderMenuItem } from 'carbon-components-react/lib/components/UIShell';\n\ninterface HeaderMenuItemLinkInterface extends RouteComponentProps, ComponentPropsWithRef<any> { }\n\nclass HeaderMenuItemLinkBase extends Component<HeaderMenuItemLinkInterface> {\n\trender() {\n\t\tconst {\n\t\t\thistory,\n\t\t\tto,\n\t\t\t...rest\n\t\t} = this.props as any;\n\t\treturn (\n\t\t\t<HeaderMenuItem\n\t\t\t\tonClick={() => history.push(to)}\n\t\t\t\tonKeyDown={(event: any) => {\n\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\thistory.push(to);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t{...rest} />\n\t\t);\n\t}\n}\n\nexport const HeaderMenuItemLinkRouter = withRouter(HeaderMenuItemLinkBase);\n\nexport const HeaderMenuItemLink = forwardRef<HTMLElement, HeaderMenuItemLinkInterface>(\n\t(props) => <HeaderMenuItemLinkRouter {...props} />\n);\n\n// explicitly set display name\nHeaderMenuItemLink.displayName = 'HeaderMenuItemLink';\n","import React, { createContext, useReducer } from 'react';\n\nconst ModalContext: React.Context<any> = createContext({});\n\nModalContext.displayName = 'ModalContext';\n\nexport enum ModalActionType {\n\tsetDuplicationModal,\n\tsetDeletionModal,\n\tsetShareModal,\n\tsetExportModal,\n\tcloseModal\n}\n\nexport enum ModalType {\n\tDUPLICATION,\n\tDELETION,\n\tSHARING,\n\tEXPORT\n}\n\nexport type ModalAction = BaseModalAction;\n\nexport interface BaseModalAction {\n\ttype: ModalActionType;\n\tid: string;\n}\n\nexport interface ModalState {\n\tShowModal: boolean;\n\tModalType: any;\n\tFragmentID: string;\n}\n\nconst initialState = {\n\tShowModal: false,\n\tModalType: null,\n\tFragmentID: ''\n};\n\nconst modalReducer = (state: ModalState, action: BaseModalAction) => {\n\tswitch(action.type) {\n\t\tcase ModalActionType.setDuplicationModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DUPLICATION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setDeletionModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DELETION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setShareModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.SHARING,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setExportModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.EXPORT,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.closeModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst ModalContextProvider = ({ children }: any) => {\n\tconst modal = useReducer(modalReducer, initialState);\n\n\treturn (\n\t\t<ModalContext.Provider value={modal}>\n\t\t\t{children}\n\t\t</ModalContext.Provider>\n\t);\n};\n\nexport {\n\tModalContext,\n\tModalContextProvider\n};\n","import React from 'react';\nimport { Button } from 'carbon-components-react';\nimport { withRouter } from 'react-router-dom';\n\nexport const LinkButton = withRouter((props: any) => {\n\tconst {\n\t\thistory,\n\t\tto,\n\t\t...rest\n\t} = props;\n\treturn <Button onClick={() => history.push(to)} {...rest} />;\n});\n","import { css, cx } from 'emotion';\n\nexport const main = cx(\n\t'bx--content',\n\t'bx--grid',\n\tcss`\n\t\tpadding-top: 0;\n\t\tbackground: #f4f4f4;\n\t\tmin-height: 100vh;\n\t\tmax-width: unset;\n`);\n\nexport const marginTop = (margin = '1rem') => css`margin-top: ${margin};`;\n","import React from 'react';\nimport { main } from '../styles';\n\nexport const Main = ({ ...props }) => (\n\t<main className={main} {...props}/>\n);\n","import React, { useContext } from 'react';\nimport { SkeletonPlaceholder } from 'carbon-components-react';\nimport './fragment-preview.scss';\nimport { css, cx } from 'emotion';\nimport { allComponents, ComponentInfoRenderProps } from '../fragment-components';\nimport { getAllFragmentStyleClasses, getRandomId } from '../utils/fragment-tools';\nimport { GlobalStateContext } from '../context';\n\nconst canvas = css`\n\tborder: 2px solid #d8d8d8;\n\tbackground-color: white;\n\tposition: relative;\n`;\n\nconst allowDrop = (event: any) => {\n\tevent.preventDefault();\n};\n\nexport const getComponentById = (componentObj: any, id: number) => {\n\tif (!componentObj || !id) {\n\t\treturn undefined;\n\t}\n\n\tif (componentObj.id === id) {\n\t\treturn componentObj;\n\t}\n\n\tif (componentObj.items) {\n\t\tfor (let i = 0; i < componentObj.items.length; i++) {\n\t\t\tconst component: any = getComponentById(componentObj.items[i], id);\n\t\t\tif (component) {\n\t\t\t\treturn component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\nexport const getSelectedComponent = (fragment: any) => {\n\tif (!fragment) {\n\t\treturn undefined;\n\t}\n\n\treturn getComponentById(fragment.data, fragment.selectedComponentId);\n};\n\nexport const stateWithoutComponent = (state: any, componentId: number) => {\n\tif (state.items) {\n\t\tconst componentIndex = state.items.findIndex((component: any) => component.id === componentId);\n\t\tif (componentIndex >= 0) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: [...state.items.slice(0, componentIndex), ...state.items.slice(componentIndex + 1)]\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t...state,\n\t\t\titems: state.items.map((item: any) => stateWithoutComponent(item, componentId))\n\t\t};\n\t}\n\n\treturn { ...state };\n};\n\nexport const initializeIds = (componentObj: any, forceNewIds = false) => {\n\tlet id = null;\n\tif (forceNewIds) {\n\t\tid = getRandomId();\n\t}\n\tid = id || componentObj.id || getRandomId();\n\t// name is used in form items and for angular inputs and outputs variable names\n\tconst name = componentObj.codeContext?.name || `${componentObj.type}-${id}`;\n\n\treturn {\n\t\t...componentObj,\n\t\tid,\n\t\titems: componentObj.items ? componentObj.items.map((co: any) => initializeIds(co)) : undefined,\n\t\tcodeContext: {\n\t\t\t...componentObj.codeContext,\n\t\t\tname\n\t\t}\n\t};\n};\n\nconst updatedList = (list: any[], item: any, dropInIndex?: number) => {\n\tif (dropInIndex === undefined) {\n\t\treturn [...list, item];\n\t}\n\n\treturn [...list.slice(0, dropInIndex), item, ...list.slice(dropInIndex)];\n};\n\nexport const updatedState = (state: any, dragObj: any, dropInId?: number, dropInIndex?: number) => {\n\tif (!state) { // NOTE is this needed?\n\t\treturn;\n\t}\n\n\t// give unique ids to newly dropped components\n\tdragObj.component = initializeIds(dragObj.component);\n\n\t// only update\n\tif (dragObj.type === 'update') {\n\t\tif (state.id && state.id === dragObj.component.id) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...dragObj.component\n\t\t\t};\n\t\t}\n\t\tif (state.items) {\n\t\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t\t}\n\n\t\treturn { ...state };\n\t}\n\n\tif (dragObj.type === 'move') {\n\t\tstate = stateWithoutComponent(state, dragObj.component.id);\n\t\tdragObj.type = 'insert';\n\t}\n\n\tif (state.items) {\n\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t}\n\n\tif (!dropInId) {\n\t\treturn state.items && !state.type ? {\n\t\t\t...state,\n\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t\t} : { ...state };\n\t}\n\t/// ////////// TODO NOTE clean the container items with 1 item //////////////\n\tif (state.id && state.id === dropInId) {\n\t\t// add data into state\n\t\tif (state.items) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex),\n\t\t\t\tid: state.id\n\t\t\t};\n\t\t}\n\n\t\t// convert into a list of components, move current component into list\n\t\treturn {\n\t\t\t// TODO should this be a `type: container`?\n\t\t\tid: getRandomId(),\n\t\t\titems: updatedList([{ ...state }], dragObj.component, dropInIndex)\n\t\t};\n\t}\n\n\tif (dropInId) { // probably don't wanna add it here since it didn't match anything and it should somewhere\n\t\treturn { ...state };\n\t}\n\n\treturn state.items ? {\n\t\t...state,\n\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t} : { ...state };\n};\n\nexport const getParentComponent = (state: any, child: any) => {\n\tif (state && state.items) {\n\t\tif (state.items.includes(child)) {\n\t\t\treturn state;\n\t\t}\n\t\tfor (let i = 0; i < state.items.length; i++) {\n\t\t\tconst component = state.items[i];\n\t\t\tconst parent: any = getParentComponent(component, child);\n\t\t\tif (parent) {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport const Fragment = ({ fragment, setFragment }: any) => {\n\tconst globalState = useContext(GlobalStateContext);\n\n\tif (!fragment || !fragment.data) {\n\t\treturn <SkeletonPlaceholder />;\n\t}\n\n\tconst { fragments } = globalState || {};\n\n\tconst drop = (event: any, dropInId?: number) => {\n\t\tevent.preventDefault();\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData('drag-object'));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, dragObj, dropInId)\n\t\t});\n\t};\n\n\tconst select = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: componentObj.id\n\t\t}, true);\n\t};\n\n\tconst remove = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: stateWithoutComponent(fragment.data, componentObj.id)\n\t\t});\n\t};\n\n\tconst renderComponents = (componentObj: any): any => {\n\t\tif (typeof componentObj === 'string' || !componentObj) {\n\t\t\treturn componentObj;\n\t\t}\n\n\t\tfor (const component of Object.values(allComponents)) {\n\t\t\tif (componentObj.type === component.componentInfo.type) {\n\t\t\t\tif (component.componentInfo.render) {\n\t\t\t\t\treturn component.componentInfo.render({\n\t\t\t\t\t\tcomponentObj,\n\t\t\t\t\t\tselect: () => select(componentObj),\n\t\t\t\t\t\tremove: () => remove(componentObj),\n\t\t\t\t\t\tselected: fragment.selectedComponentId === componentObj.id,\n\t\t\t\t\t\tonDragOver: allowDrop,\n\t\t\t\t\t\tonDrop: (event: any) => {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tdrop(event, componentObj.id);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trenderComponents\n\t\t\t\t\t} as ComponentInfoRenderProps);\n\t\t\t\t}\n\t\t\t\treturn <component.componentInfo.component\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}>\n\t\t\t\t\t\t{componentObj.items && componentObj.items.map((row: any) => renderComponents(row))}\n\t\t\t\t</component.componentInfo.component>;\n\t\t\t}\n\t\t}\n\n\t\tif (componentObj.items) {\n\t\t\treturn componentObj.items.map((item: any) => renderComponents(item));\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst styles = css`${\n\t\tgetAllFragmentStyleClasses(fragment, fragments).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t${styleClass.content}\n\t\t}`)\n\t}`;\n\t// TODO add fragment.width and fragment.height to database\n\treturn (\n\t\t<div\n\t\tclassName={cx(\n\t\t\tcanvas,\n\t\t\tstyles,\n\t\t\tcss`width: ${fragment.width || '800px'}; height: ${fragment.height || '600px'}`\n\t\t)}\n\t\tonDragOver={allowDrop}\n\t\tonDrop={(event: any) => drop(event, fragment.data.id)}>\n\t\t\t<div className={`${fragment.cssClasses ? fragment.cssClasses.map((cc: any) => cc.id).join(' ') : ''}`}>\n\t\t\t\t{renderComponents(fragment.data)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","// TODO: Delete this when the carbon grid components are actually available\nimport React, { PropsWithChildren } from 'react';\nimport { cx } from 'emotion';\n\nexport type RowProps = PropsWithChildren<{\n\tstyles?: any;\n}>;\n\nexport const Row = ({ styles, children }: RowProps) => (\n\t<div className={cx('bx--row', styles)}>{children}</div>\n);\n\nexport interface ColDefinition {\n\tsm?: number;\n\tmd?: number;\n\tlg?: number;\n}\n\nexport type ColProps = PropsWithChildren<{\n\tcols?: ColDefinition;\n\trender?: (props: PropsWithChildren<any>) => JSX.Element;\n}>;\n\nexport const Col = ({ cols, render, children }: ColProps) => {\n\tconst baseRender = render ?? ((props) => <div {...props} />);\n\tconst classes = cx({\n\t\t[`bx--col-sm-${cols?.sm}`]: !!cols?.sm ?? false,\n\t\t[`bx--col-md-${cols?.md}`]: !!cols?.md ?? false,\n\t\t[`bx--col-lg-${cols?.lg}`]: !!cols?.lg ?? false,\n\t\t'bx--col': !!cols\n\t});\n\treturn baseRender({\n\t\tclassName: classes,\n\t\tchildren\n\t});\n};\n","import React, { useContext } from 'react';\nimport { InlineNotification, NotificationActionButton } from 'carbon-components-react';\nimport {\n\tNotificationContext,\n\tNotificationActionType,\n\tNotificationData\n} from '../context/notification-context';\nimport { css } from 'emotion';\n\nconst notificationStyle = { minWidth: '30rem' };\n\nconst notificationAreaStyle = css`\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tposition: absolute;\n\tz-index: 2;\n\tmin-width: 30rem;\n\ttop: 2rem;\n`;\n\nexport const Notification = () => {\n\tconst [state, dispatch] = useContext(NotificationContext);\n\treturn (\n\t\t<div className={notificationAreaStyle} role=\"alert\">\n\t\t\t{state.notifications.map((notification: NotificationData) => (\n\t\t\t\t<InlineNotification\n\t\t\t\t\tlowContrast\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\tkind={notification.kind}\n\t\t\t\t\ttitle={notification.title}\n\t\t\t\t\tsubtitle={notification.message}\n\t\t\t\t\tcaption={null}\n\t\t\t\t\tkey={notification.id}\n\t\t\t\t\tonCloseButtonClick={() => {\n\t\t\t\t\t\tif (notification.action) {\n\t\t\t\t\t\t\tnotification.action.onNotificationClose();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={notificationStyle}\n\t\t\t\t\tactions={notification.action\n\t\t\t\t\t\t? <NotificationActionButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnotification.action.actionFunction();\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{notification.action.actionText}\n\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t: undefined}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React, { useState, useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { Image32, Code32 } from '@carbon/icons-react';\n\nimport { css } from 'emotion';\nimport {\n\tModalActionType,\n\tModalContext\n} from '../../../context/modal-context';\nimport { ExportCode } from './exports/export-code-modal';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { ExportImageModal } from './exports/export-image-modal';\n\nconst exportOptionTileWrapper = css`\n\twidth: 50%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tp {\n\t\t\tposition: absolute;\n\t\t\tbottom: 15px;\n\t\t}\n\t}\n`;\n\nconst exportOptionsWrapper = css`\n\tdisplay: flex;\n\tdiv:first-child {\n\t\tmargin-right: 20px;\n\t}\n`;\n\nexport enum ShareOptionsModals {\n\tSHARE_OPTIONS,\n\tCODE_EXPORTS,\n\tIMAGE_EXPORTS\n}\n\nenum Exports {\n\tCODE,\n\tIMAGE\n}\n\ninterface ShareOptionsModalState {\n\tselectedExportOption: Exports | null;\n}\n\nexport const ShareOptionsModal = ({ fragment }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<ShareOptionsModals | null>(ShareOptionsModals.SHARE_OPTIONS);\n\n\t// This contains all the states that control the share options modal.\n\tconst [shareOptionsState, setShareOptionsState] = useState<ShareOptionsModalState>({\n\t\tselectedExportOption: null\n\t});\n\n\tconst handleExportSelection = () => {\n\t\tif (shareOptionsState.selectedExportOption === Exports.CODE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.CODE_EXPORTS);\n\t\t} else if (shareOptionsState.selectedExportOption === Exports.IMAGE) {\n\t\t\tsetDisplayedModal(ShareOptionsModals.IMAGE_EXPORTS);\n\t\t}\n\t};\n\n\tconst shareModalSwitcher = () => {\n\t\tswitch (displayedModal) {\n\t\t\tcase ShareOptionsModals.SHARE_OPTIONS:\n\t\t\t\treturn (\n\t\t\t\t\t<Modal\n\t\t\t\t\t\thasForm\n\t\t\t\t\t\tonRequestSubmit={handleExportSelection}\n\t\t\t\t\t\topen={modalState.ShowModal && displayedModal === ShareOptionsModals.SHARE_OPTIONS}\n\t\t\t\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\t\t\t\tprimaryButtonText='Done'\n\t\t\t\t\t\tprimaryButtonDisabled={shareOptionsState.selectedExportOption === null}\n\t\t\t\t\t\tsecondaryButtonText='Cancel'\n\t\t\t\t\t\tmodalHeading={`Share '${fragment.title}'`}>\n\t\t\t\t\t\t<div className={exportOptionsWrapper}>\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.CODE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Code32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.CODE}\n\t\t\t\t\t\t\t\tlabel='Code' />\n\t\t\t\t\t\t\t<SelectionTile\n\t\t\t\t\t\t\t\tstyles={exportOptionTileWrapper}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetShareOptionsState({\n\t\t\t\t\t\t\t\t\t\t...shareOptionsState,\n\t\t\t\t\t\t\t\t\t\tselectedExportOption: Exports.IMAGE\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ticon={<Image32 />}\n\t\t\t\t\t\t\t\tselected={shareOptionsState.selectedExportOption === Exports.IMAGE}\n\t\t\t\t\t\t\t\tlabel='Image' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal>\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.CODE_EXPORTS:\n\t\t\t\treturn (\n\t\t\t\t\t<ExportCode\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal} />\n\t\t\t\t);\n\t\t\tcase ShareOptionsModals.IMAGE_EXPORTS:\n\t\t\tdefault:\n\t\t\t\treturn <ExportImageModal\n\t\t\t\t\tfragment={fragment}\n\t\t\t\t\tdisplayedModal={displayedModal}\n\t\t\t\t\tsetDisplayedModal={setDisplayedModal} />;\n\t\t}\n\t};\n\n\treturn shareModalSwitcher();\n};\n","import LZString from 'lz-string';\n\nexport const createFragmentSandbox = (fragmentTemplate: any) => {\n\tconst files: Record<string, any> = {};\n\n\tObject.keys(fragmentTemplate)\n\t\t.forEach((filePath: string) => files[filePath] = { content: fragmentTemplate[filePath] });\n\n\treturn LZString.compressToBase64(JSON.stringify({ files }))\n\t\t.replace(/\\+/g, '-') // '+' -> '-'\n\t\t.replace(/\\//g, '_') // '/' -> '_'\n\t\t.replace(/=+$/, ''); // Remove ending '='\n};\n","import { sortedUniq } from 'lodash';\nimport { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserCss from 'prettier/parser-postcss';\nimport { allComponents } from '../../../../../fragment-components';\nimport { classNameFromFragment, getAllFragmentStyleClasses, hasFragmentStyleClasses, tagNameFromFragment } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst formatOptions: Options = {\n\tplugins: [parserBabel],\n\ttrailingComma: 'none',\n\tuseTabs: true\n};\n\nconst formatOptionsCss: Options = {\n\tparser: 'css',\n\tplugins: [parserCss]\n};\n\nconst addIfNotExist = (arr: any[], items: any[]) => {\n\titems.forEach(item => {\n\t\tif (!arr.includes(item)) {\n\t\t\tarr.push(item);\n\t\t}\n\t});\n\treturn arr;\n};\n\nconst jsonToCarbonImports = (json: any) => {\n\tconst imports: any[] = [];\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type) {\n\t\t\taddIfNotExist(imports, component.componentInfo.codeExport.react.imports);\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\tjson.items.forEach((item: any) => {\n\t\t\taddIfNotExist(imports, jsonToCarbonImports(item));\n\t\t});\n\t}\n\n\treturn imports;\n};\n\nexport const jsonToTemplate = (json: any, fragments: any[]) => {\n\tif (typeof json === 'string' || !json) {\n\t\treturn json;\n\t}\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type && !component.componentInfo.codeExport.react.isNotDirectExport) {\n\t\t\treturn component.componentInfo.codeExport.react.code({ json, jsonToTemplate, fragments });\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\treturn json.items.map((item: any) => jsonToTemplate(item, fragments)).join('\\n');\n\t}\n};\n\nexport const getAdditionalCode = (componentObj: any, fragments: any[]) => {\n\tif (typeof componentObj === 'string' || !componentObj) {\n\t\treturn componentObj;\n\t}\n\tlet collectedCode = {};\n\n\tfor (const [key, component] of Object.entries(allComponents)) {\n\t\tif (componentObj.type === key && !component.componentInfo.codeExport.react.isNotDirectExport) {\n\t\t\tif (component.componentInfo.codeExport.react.additionalCode) {\n\t\t\t\tcollectedCode = { ...collectedCode, ...component.componentInfo.codeExport.react.additionalCode(componentObj) };\n\t\t\t}\n\t\t}\n\t}\n\n\tif (componentObj.items) {\n\t\tcomponentObj.items.forEach((item: any) => {\n\t\t\tcollectedCode = { ...collectedCode, ...getAdditionalCode(item, fragments) };\n\t\t});\n\t}\n\n\treturn collectedCode;\n};\n\nconst getAdditionalCodeAsString = (componentObj: any, fragments: any[]) => {\n\tconst collectedCode = getAdditionalCode(componentObj, fragments);\n\treturn Object.values(collectedCode).join('\\n');\n};\n\nconst otherImportsFromComponentObj = (json: any, fragments?: any[]) => {\n\tlet imports = '';\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type) {\n\t\t\tif (component.componentInfo.codeExport.react.otherImports) {\n\t\t\t\timports += component.componentInfo.codeExport.react.otherImports({ json, fragments });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\timports += json.items.map((item: any) => otherImportsFromComponentObj(item, fragments)).join('\\n');\n\t}\n\n\t// remove duplicate imports\n\timports = sortedUniq(imports.split('\\n')).join('\\n');\n\n\treturn imports;\n};\n\nconst generateTemplate = (json: any, fragments: any[]) => {\n\tconst carbonImports = jsonToCarbonImports(json);\n\tconst carbonImportsString = carbonImports.reduce((string: string, curr: string) => (\n\t\tstring += `${curr}, `\n\t), '');\n\treturn {\n\t\timports: `import { ${carbonImportsString} } from 'carbon-components-react';\n\t\t\t${otherImportsFromComponentObj(json, fragments)}`,\n\t\ttemplate: jsonToTemplate(json, fragments),\n\t\tadditionalCode: getAdditionalCodeAsString(json, fragments)\n\t};\n};\n\nconst jsonToSharedComponents = (json: any, fragments: any[]) => {\n\tlet sharedComponents: any = {};\n\n\tif (json.type === 'fragment') {\n\t\tconst fragment = fragments.find(f => f.id === json.id);\n\t\tconst fragmentTemplate = generateTemplate(fragment.data, fragments);\n\n\t\tsharedComponents[`src/shared/${tagNameFromFragment(fragment)}.js`] = format(`import React from 'react';\n\t\t\t${fragmentTemplate.imports};\n\t\t\t${hasFragmentStyleClasses(fragment) ? `\n\t\t\t\timport './${tagNameFromFragment(fragment)}.scss';\n\t\t\t` : ''}\n\t\t\texport const ${classNameFromFragment(fragment)} = ({state, setState}) => {\n\t\t\t\tconst handleInputChange = (event) => {\n\t\t\t\t\tsetState({...state, [event.target.name]: event.target.value});\n\t\t\t\t};\n\n\t\t\t\t${fragmentTemplate.additionalCode}\n\n\t\t\t\treturn <>${fragmentTemplate.template}</>;\n\t\t\t};\n\t\t`, formatOptions);\n\n\t\tsharedComponents[`src/shared/${tagNameFromFragment(fragment)}.scss`] = format(\n\t\t\t`${getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t\t${styleClass.content}\n\t\t\t}`).join('\\n')}`,\n\t\t\tformatOptionsCss\n\t\t);\n\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...jsonToSharedComponents(fragment.data, fragments)\n\t\t};\n\t}\n\n\tjson.items?.forEach((item: any) => {\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...jsonToSharedComponents(item, fragments)\n\t\t};\n\t});\n\n\treturn sharedComponents;\n};\n\nexport const createReactApp = (fragment: any, fragments: any[]) => {\n\tconst fragmentTemplate = generateTemplate(fragment.data, fragments);\n\n\tconst sharedComponents = jsonToSharedComponents(fragment.data, fragments);\n\n\tconst indexHtml = `<div id='root'></div>\n`;\n\tconst componentJs\n\t\t= `import React from 'react';\n${fragmentTemplate.imports};\n${hasFragmentStyleClasses(fragment) ? \"\\nimport './component.scss';\\n\" : ''}\nexport const FragmentComponent = ({state, setState}) => {\n\tconst handleInputChange = (event) => {\n\t\tsetState({...state, [event.target.name]: event.target.value});\n\t};\n\n\t${fragmentTemplate.additionalCode}\n\n\treturn <>${fragmentTemplate.template}</>;\n};\n`;\n\n\tconst componentScss = getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t${styleClass.content}\n}`).join('\\n');\n\n\tconst indexJs\n\t\t= `import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'carbon-components/css/carbon-components.css';\n\nimport { FragmentComponent } from './component.js';\n\nconst App = () => {\n\tconst [state, setState] = useState({});\n\n\treturn (\n\t\t<div>\n\t\t\t<FragmentComponent state={state} setState={setState} />\n\t\t</div>\n\t);\n}\nReactDOM.render(<App />, document.getElementById('root'));\n`;\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'carbon-components': '10.50.0',\n\t\t\t'carbon-icons': '7.0.7',\n\t\t\t'@carbon/icons-react': '10.15.0',\n\t\t\t'carbon-components-react': '7.50.0',\n\t\t\treact: '16.12.0',\n\t\t\t'react-dom': '16.12.0',\n\t\t\t'react-scripts': '3.0.1',\n\t\t\t'sass': '1.45.0',\n\t\t\temotion: '10.0.27'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/index.js': format(indexJs, formatOptions),\n\t\t'src/component.js': format(componentJs, formatOptions),\n\t\t'src/component.scss': format(componentScss, formatOptionsCss),\n\t\t'package.json': packageJson,\n\t\t...sharedComponents\n\t};\n};\n","import { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserHtml from 'prettier/parser-html';\nimport parserCss from 'prettier/parser-postcss';\nimport { allComponents } from '../../../../../fragment-components';\nimport { classNameFromFragment, getAllFragmentStyleClasses, hasFragmentStyleClasses, tagNameFromFragment } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst formatOptionsTypescript: Options = {\n\tplugins: [parserBabel],\n\ttrailingComma: 'none',\n\tuseTabs: true,\n\tparser: 'babel-ts'\n};\n\nconst formatOptionsHtml: Options = {\n\tplugins: [parserHtml],\n\ttrailingComma: 'none',\n\tuseTabs: true,\n\tparser: 'html'\n};\n\nconst formatOptionsCss: Options = {\n\tparser: 'css',\n\tplugins: [parserCss]\n};\n\nconst addIfNotExist = (arr: any[], items: string[] | undefined) => {\n\titems?.forEach(item => {\n\t\tif (!arr.includes(item)) {\n\t\t\tarr.push(item);\n\t\t}\n\t});\n\treturn arr;\n};\n\nconst jsonToAngularImports = (json: any) => {\n\tconst imports: any[] = [];\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type) {\n\t\t\taddIfNotExist(imports, component.componentInfo.codeExport.angular?.imports);\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\tjson.items.forEach((item: any) => {\n\t\t\taddIfNotExist(imports, jsonToAngularImports(item));\n\t\t});\n\t}\n\n\treturn imports;\n};\n\nconst getAngularInputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tfor (const component of Object.values(allComponents)) {\n\t\t\tif (json.type === component.componentInfo.type) {\n\t\t\t\treturn component.componentInfo.codeExport.angular?.inputs({ json }) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularInputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nconst getAngularOutputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tfor (const component of Object.values(allComponents)) {\n\t\t\tif (json.type === component.componentInfo.type) {\n\t\t\t\treturn component.componentInfo.codeExport.angular?.outputs({ json }) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularOutputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nexport const jsonToTemplate = (json: any, fragments: any[]) => {\n\tif (typeof json === 'string' || !json) {\n\t\treturn json;\n\t}\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type && !component.componentInfo.codeExport.angular.isNotDirectExport) {\n\t\t\treturn component.componentInfo.codeExport.angular.code({ json, jsonToTemplate, fragments });\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\treturn json.items.map((item: any) => jsonToTemplate(item, fragments)).join('\\n');\n\t}\n};\n\nconst getAllSubfragments = (json: any, fragments: any[]) => {\n\tlet sharedComponents: any = {};\n\n\tif (json.type === 'fragment') {\n\t\tconst fragment = fragments.find(f => f.id === json.id);\n\n\t\tsharedComponents[tagNameFromFragment(fragment)] = fragment;\n\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...getAllSubfragments(fragment.data, fragments)\n\t\t};\n\t}\n\n\tjson.items?.forEach((item: any) => {\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...getAllSubfragments(item, fragments)\n\t\t};\n\t});\n\n\treturn sharedComponents;\n};\n\nconst getComponentCode = (fragment: any, fragments: any[]) => {\n\tconst componentCode: any = {};\n\tconst subFragments = getAllSubfragments(fragment.data, fragments);\n\n\t// component.ts\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.component.ts`] = format(\n\t\t`import { Component, Input, Output, EventEmitter } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-${tagNameFromFragment(fragment)}',\n\t\t\ttemplateUrl: './${tagNameFromFragment(fragment)}.component.html'${hasFragmentStyleClasses(fragment) ? `,\n\t\t\tstyleUrls: ['./${tagNameFromFragment(fragment)}.component.scss']` : ''}\n\t\t})\n\t\texport class ${classNameFromFragment(fragment)} {\n\t\t\t${getAngularInputsFromJson(fragment.data)}\n\t\t\t${getAngularOutputsFromJson(fragment.data)}\n\t\t}\n\t`, formatOptionsTypescript);\n\n\t// component.html\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.component.html`] =\n\t\tjsonToTemplate(fragment.data, fragments);\n\n\t// module.ts\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.module.ts`] = format(\n\t\t`import { NgModule } from \"@angular/core\";\n\t\timport { ${jsonToAngularImports(fragment.data).join(', ')} } from 'carbon-components-angular';\n\t\timport { ${classNameFromFragment(fragment)} } from \"./${tagNameFromFragment(fragment)}.component\";\n\t\t${\n\t\t\tObject.values(subFragments).map((f) =>\n\t\t\t\t`import { ${classNameFromFragment(f)}Module} from \"../${tagNameFromFragment(f)}/${tagNameFromFragment(f)}.module\";`).join('\\n')\n\t\t}\n\n\t\t@NgModule({\n\t\t\timports: [${[\n\t\t\t\t...jsonToAngularImports(fragment.data),\n\t\t\t\t...Object.values(subFragments).map((fragment) => `${classNameFromFragment(fragment)}Module`)\n\t\t\t].join(', ')}],\n\t\t\tdeclarations: [${classNameFromFragment(fragment)}],\n\t\t\texports: [${classNameFromFragment(fragment)}]\n\t\t})\n\t\texport class ${classNameFromFragment(fragment)}Module {}\n\t`, formatOptionsTypescript);\n\n\t// component.scss\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.component.scss`] = format(\n\t\t`${getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t${styleClass.content}\n\t\t}`).join('\\n')}`,\n\t\tformatOptionsCss\n\t);\n\n\treturn componentCode;\n};\n\nconst getAllComponentsCode = (json: any, fragments: any[]) => {\n\tlet allComponents: any = {};\n\n\tif (json.data) {\n\t\tallComponents = {\n\t\t\t...allComponents,\n\t\t\t...getComponentCode(json, fragments),\n\t\t\t...getAllComponentsCode(json.data, fragments)\n\t\t};\n\t}\n\n\tif (json.type === 'fragment') {\n\t\tconst fragment = fragments.find(f => f.id === json.id);\n\n\t\tallComponents = {\n\t\t\t...allComponents,\n\t\t\t...getComponentCode(fragment, fragments),\n\t\t\t...getAllComponentsCode(fragment.data, fragments)\n\t\t};\n\t}\n\n\tjson.items?.forEach((item: any) => {\n\t\tallComponents = {\n\t\t\t...allComponents,\n\t\t\t...getAllComponentsCode(item, fragments)\n\t\t};\n\t});\n\n\treturn allComponents;\n};\n\nexport const createAngularApp = (fragment: any, fragments: any[]) => {\n\tconst tagName = tagNameFromFragment(fragment);\n\tconst className = classNameFromFragment(fragment);\n\n\tconst allComponents = getAllComponentsCode(fragment, fragments);\n\n\tconst appComponentHtml =\n\t\t`<app-${tagName}></app-${tagName}>\n\t\t`;\n\n\tconst appComponentTs =\n\t\t`import { Component } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-root',\n\t\t\ttemplateUrl: './app.component.html'\n\t\t})\n\t\texport class AppComponent {\n\t\t}\n\t\t`;\n\n\tconst appModule =\n\t\t`import { NgModule } from '@angular/core';\n\t\timport { BrowserModule } from '@angular/platform-browser';\n\t\timport { AppComponent } from './app.component';\n\t\timport { ${className}Module } from './components/${tagName}/${tagName}.module';\n\n\t\t@NgModule({\n\t\t\timports: [BrowserModule, ${className}Module],\n\t\t\tdeclarations: [AppComponent],\n\t\t\tbootstrap: [AppComponent]\n\t\t})\n\t\texport class AppModule {}\n\t\t`;\n\n\tconst indexHtml =\n\t\t`<!DOCTYPE html>\n\t\t<html lang='en'>\n\t\t\t<head>\n\t\t\t\t<meta charset='utf-8' />\n\t\t\t\t<title>Angular</title>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<app-root></app-root>\n\t\t\t</body>\n\t\t</html>\n\t\t`;\n\n\tconst mainTs =\n\t\t`import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\t\timport { AppModule } from './app/app.module';\n\n\t\timport \"carbon-components/css/carbon-components.min.css\";\n\n\t\tplatformBrowserDynamic()\n\t\t\t.bootstrapModule(AppModule)\n\t\t\t.catch(err => console.log(err));\n\t\t`;\n\n\tconst angularCliJson =\n\t\t`{\n\t\"apps\": [\n\t\t{\n\t\t\t\"root\": \"src\",\n\t\t\t\"outDir\": \"dist\",\n\t\t\t\"assets\": [\"assets\", \"favicon.ico\"],\n\t\t\t\"index\": \"index.html\",\n\t\t\t\"main\": \"main.ts\",\n\t\t\t\"polyfills\": \"polyfills.ts\",\n\t\t\t\"prefix\": \"app\",\n\t\t\t\"styles\": [\"styles.scss\"],\n\t\t\t\"scripts\": [],\n\t\t\t\"environmentSource\": \"environments/environment.ts\",\n\t\t\t\"environments\": {\n\t\t\t\t\"dev\": \"environments/environment.ts\",\n\t\t\t\t\"prod\": \"environments/environment.prod.ts\"\n\t\t\t}\n\t\t}\n\t]\n}\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@angular/animations': '12.2.0',\n\t\t\t'@angular/common': '12.2.0',\n\t\t\t'@angular/compiler': '12.2.0',\n\t\t\t'@angular/core': '12.2.0',\n\t\t\t'@angular/forms': '12.2.0',\n\t\t\t'@angular/platform-browser': '12.2.0',\n\t\t\t'@angular/platform-browser-dynamic': '12.2.0',\n\t\t\t'@angular/router': '12.2.0',\n\t\t\t'rxjs': '6.6.0',\n\t\t\t'tslib': '2.3.0',\n\t\t\t'sass': '1.45.0',\n\t\t\t'zone.js': '0.11.4',\n\t\t\t'carbon-components-angular': '4.56.3',\n\t\t\t'carbon-components': '10.50.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': format(indexHtml, formatOptionsHtml),\n\t\t'src/main.ts': format(mainTs, formatOptionsTypescript),\n\t\t'src/polyfills.ts': format(\"import 'zone.js/dist/zone';\", formatOptionsTypescript),\n\t\t'src/styles.scss': format('', formatOptionsCss),\n\t\t'src/app/app.component.html': format(appComponentHtml, formatOptionsHtml),\n\t\t'src/app/app.component.ts': format(appComponentTs, formatOptionsTypescript),\n\t\t'src/app/app.module.ts': format(appModule, formatOptionsTypescript),\n\t\t...allComponents,\n\t\t'.angular-cli.json': angularCliJson,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map fragment types to corresponding vanilla fragment tag.\nconst fragmentTagMap: Record<string, string> = {\n};\n\nexport const createVanillaApp = (fragment: any) => {\n\tconst fragmentData = JSON.stringify(fragment.data, null, '\\t');\n\tconst fragmentType = `${fragment.type}`;\n\n\tconst indexHtml\n= `<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Vanilla</title>\n\t\t<meta charset='UTF-8' />\n\t</head>\n\t<body>\n\t\t<div style='height: 500px; min-width: 100%;'>\n\t\t\t<div id='my-fragment'></div>\n\t\t</div>\n\t\t<script src='src/index.js'>\n\t\t</script>\n\t</body>\n</html>\n`;\n\n\tconst indexJs\n= `import '@carbon/fragments/styles.css';\nimport { ${fragmentTagMap[fragmentType]} } from '@carbon/fragments';\n// grab fragment holder DOM element\nconst fragmentHolder = document.getElementById('my-fragment');\n// initialize the fragment\nnew ${fragmentTagMap[fragmentType]}(fragmentHolder, {\n\tdata: ${fragmentData},\n});\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/fragments': '0.38.8',\n\t\t\t'carbon-components': '10.20.0',\n\t\t\t'@carbon/colors': '10.11.0',\n\t\t\td3: '5.15.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'index.html': indexHtml,\n\t\t'src/index.js': indexJs,\n\t\t'package.json': packageJson\n\t};\n};\n","// Used to map fragment types to corresponding vue fragment tag.\nconst fragmentTagMap: Record<string, string> = {\n\t'simple-bar-fragment': 'ccv-simple-bar-fragment',\n\t'grouped-bar-fragment': 'ccv-grouped-bar-fragment',\n\t'stacked-bar-fragment': 'ccv-stacked-bar-Fragment',\n\t'line-fragment': 'ccv-line-fragment',\n\t'scatter-fragment': 'ccv-scatter-fragment',\n\t'pie-fragment': 'ccv-pie-fragment',\n\t'donut-fragment': 'ccv-donut-fragment',\n\tdataAndOptions: \":data='data' :options='options'\"\n};\n\nexport const createVueApp = (fragment: any) => {\n\tconst fragmentData = JSON.stringify(fragment.data, null, '\\t');\n\tconst fragmentType = `${fragment.type}`;\n\n\tconst fragmentVue\n= `<script>\n\timport Vue from 'vue';\n\timport '@carbon/fragments/styles.css';\n\timport fragmentsVue from '@carbon/fragments-vue';\n\tVue.use(fragmentsVue);\n\texport default {\n\t\tname: 'Fragment',\n\t\tcomponents: {},\n\t\tdata() {\n\t\t\treturn {\n\t\t\tdata:\n\t\t\t${fragmentData}\n\t\t};\n\t},\n\ttemplate:\n\t\t\"<${fragmentTagMap[fragmentType]} :data='data' :options='options'></${fragmentTagMap[fragmentType]}>\"\n\t};\n</script>\n`;\n\n\tconst appVue\n= `<template>\n<div id='app' style='height: 500px; min-width: 100%;'>\n<Fragment/>\n</div>\n</template>\n<script>\n\timport Fragment from './components/fragment';\n\texport default {\n\t\tname: 'App',\n\t\tcomponents: {\n\t\t\tFragment\n\t\t}\n\t};\n</script>\n`;\n\tconst mainJs\n= `import Vue from 'vue';\nimport App from './App.vue';\nVue.config.productionTip = false;\nnew Vue({\n\trender: h => h(App)\n}).$mount('#app');\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/fragments': '0.38.8',\n\t\t\t'@carbon/fragments-vue': '0.38.8',\n\t\t\t'@vue/cli-plugin-babel': '4.1.1',\n\t\t\td3: '5.15.0',\n\t\t\tvue: '2.6.11'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/components/fragment.vue': fragmentVue,\n\t\t'src/App.vue': appVue,\n\t\t'src/main.js': mainJs,\n\t\t'package.json': packageJson\n\t};\n};\n","import { extension } from 'mime-types';\n\nexport const getFullFileName = (name: string, mimeType: string) => (\n\t`${name}.${extension(mimeType)}`\n);\n\nexport const saveFile = (url: string, fileName: string) => {\n\tconst anchor = document.createElement('a');\n\tanchor.href = url;\n\tanchor.download = fileName;\n\tanchor.click();\n};\n\nexport const saveBlob = (blob: any, fileName: string) => {\n\tconst url = URL.createObjectURL(blob);\n\tsaveFile(url, fileName);\n\n\t// Give it a second to download :)\n\tsetTimeout(() => {\n\t\tURL.revokeObjectURL(url);\n\t}, 1000);\n};\n\nexport const warningNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'warning',\n\ttitle: 'Uploaded data has been modified',\n\tsubtitle: 'data did not match expected format so we modified it so you can still use it'\n};\n\nexport const errorNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'error',\n\ttitle: 'Error',\n\tsubtitle: ''\n};\n","import React, { useContext } from 'react';\n\nimport { ShareOptionsModals } from '../share-options-modal';\n\nimport { createFragmentSandbox } from './create-fragment-sandbox';\nimport { createReactApp } from './frameworks/react-fragment';\nimport { createAngularApp } from './frameworks/angular-fragment';\nimport { createVanillaApp } from './frameworks/vanilla-fragment';\nimport { createVueApp } from './frameworks/vue-fragment';\n\nimport {\n\tButton,\n\tCodeSnippet,\n\tModal,\n\tTab,\n\tTabs\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { saveBlob } from '../../../../utils/file-tools';\nimport { GlobalStateContext } from '../../../../context';\n\nconst exportCodeModalStyle = css`\n\t.bx--tabs--scrollable__nav-item {\n\t\twidth: calc(20% - 1px);\n\t}\n\n\t.bx--tab-content {\n\t\theight: calc(100% - 40px);\n\t\toverflow: auto;\n\t}\n`;\n\nconst codeSnippetWrapper = css`\n    margin-top: 20px;\n    p {\n        margin-bottom: 7px;\n    }\n`;\n\nconst titleWrapper = css`\n    display: flex;\n    margin-top: 30px;\n    a, button {\n        margin-left: auto;\n    }\n`;\n\nconst codeSnippet = css`\n    .bx--copy-btn {\n        background: white;\n    }\n`;\n\ninterface ExportCodeProps {\n\tfragment: any;\n\tdisplayedModal: ShareOptionsModals | null;\n\tsetDisplayedModal: (displayedModal: ShareOptionsModals | null) => void;\n}\n\nexport const ExportCode = ({\n\tfragment,\n\tdisplayedModal,\n\tsetDisplayedModal\n}: ExportCodeProps) => {\n\tconst { fragments } = useContext(GlobalStateContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst jsonCode: any = JSON.stringify(fragment.data, null, 2);\n\tconst vanillaCode: any = createVanillaApp(fragment);\n\tconst reactCode: any = createReactApp(fragment, fragments);\n\tconst angularCode: any = createAngularApp(fragment, fragments);\n\tconst vueCode: any = createVueApp(fragment);\n\n\tconst generateSandboxUrl = (parameters: any) => (`https://codesandbox.io/api/v1/sandboxes/define?parameters=${parameters}`);\n\n\treturn (\n\t\t<Modal\n\t\thasForm\n\t\topen={modalState.ShowModal && displayedModal === ShareOptionsModals.CODE_EXPORTS}\n\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\tprimaryButtonText='Done'\n\t\tsecondaryButtonText='Back to export options'\n\t\tonRequestSubmit={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\tonSecondarySubmit={() => setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS)}\n\t\tmodalHeading={`Export \"${fragment.title}\" code`}\n\t\tclassName={exportCodeModalStyle}>\n\t\t\t<Tabs selected={3}>\n\t\t\t\t<Tab\n\t\t\t\tid='json'\n\t\t\t\tlabel='JSON'\n\t\t\t\trole='presentation'\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>JSON</h3>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\tonClick={() => saveBlob(new Blob([jsonCode]), `${fragment.title}.json`)}>\n\t\t\t\t\t\t\tDownload JSON\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CodeSnippet\n\t\t\t\t\ttype='multi'\n\t\t\t\t\tlight\n\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\tcopyButtonDescription={'Copy JSON to clipboard'}>\n\t\t\t\t\t\t{jsonCode}\n\t\t\t\t\t</CodeSnippet>\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\tid='vanilla'\n\t\t\t\tlabel='Vanilla JS'\n\t\t\t\trole='presentation'\n\t\t\t\tdisabled\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vanilla JS Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(vanillaCode))}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={css`color: red`}>/Only React works atm/</p>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vanillaCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vanillaCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vanillaCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\tid='Angular'\n\t\t\t\tlabel='Angular'\n\t\t\t\trole='presentation'\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Angular Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(angularCode))}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(angularCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? angularCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(angularCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\tid='react'\n\t\t\t\tlabel='React'\n\t\t\t\trole='presentation'\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>React Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(reactCode))}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(reactCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? reactCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(reactCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\tid='vue'\n\t\t\t\tlabel='Vue'\n\t\t\t\trole='presentation'\n\t\t\t\tdisabled\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Vue Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(vueCode))}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={css`color: red`}>/Only React works atm/</p>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(vueCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? vueCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(vueCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t</Modal>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nconst tileFooter = css`\n\tposition: absolute;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n\tbottom: 15px;\n\tp {\n\t\tfont-weight: bold;\n\t}\n\tspan {\n\t\tmargin-right: 30px;\n\t}\n`;\n\nexport interface SelectionTileInterface {\n\tstyles?: any;\n\tonChange?: any;\n\ticon?: JSX.Element | null;\n\tlabel?: string;\n\tselected?: boolean;\n\ttag?: JSX.Element | null;\n}\n\nexport const SelectionTile = (props: SelectionTileInterface) => (\n\t<div className={props.styles}>\n\t\t<SelectableTile\n\t\t\tlight={true}\n\t\t\tonChange={() => props.onChange()}\n\t\t\tselected={props.selected}>\n\t\t\t{props.icon}\n\t\t\t<div className={tileFooter}>\n\t\t\t\t<p>{props.label}</p>\n\t\t\t\t{props.tag}\n\t\t\t</div>\n\t\t</SelectableTile>\n\t</div>\n);\n","import React, {\n\tuseState,\n\tuseEffect,\n\tuseRef,\n\tuseContext\n} from 'react';\nimport {\n\tModal,\n\tTextInput,\n\tForm,\n\tSelect,\n\tSelectItem,\n\tCheckbox,\n\tNumberInput,\n\tLoading\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport debounce from 'lodash/debounce';\nimport { saveBlob, getFullFileName } from '../../../../utils/file-tools';\nimport { ShareOptionsModals } from '../share-options-modal';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { getFragmentPreview, RenderProps } from '../../../../utils/fragment-tools';\nimport { GlobalStateContext } from '../../../../context';\n\nconst exportSettingForm = css`\n\twidth: 23rem;\n`;\nconst exportSettingFormGroup = css`\n\twidth: 320px;\n\tdisplay: flex;\n`;\nconst previewContainer = css`\n\tfloat: left;\n\tbackground-color: #e0e0e0;\n\twidth: 100%;\n\theight: 100%;\n\tmargin-top: 3rem;\n\tmargin-left: 1rem;\n\tdisplay: flex;\n\talign-items: center;\n`;\nconst selectInputWH = css`\n\tmargin-bottom: 1.5rem;\n\tfloat: left;\n\twidth: 150px;\n`;\nconst selectInput = css`\n\tmargin-bottom: 1.5rem;\n\twidth: 320px;\n`;\n\nconst fragmentImage = css`\n\tmax-height: 100%;\n\tmax-width: 100%;\n\tdisplay: block;\n\tmargin: 0;\n`;\n\nexport interface ExportImageProps {\n\tfragment: any;\n\tdisplayedModal: ShareOptionsModals | null;\n\tsetDisplayedModal: (displayedModal: ShareOptionsModals | null) => void;\n}\n\nlet updatePreviewUrl = async () => console.log('updatePreviewUrl not initialized yet');\nlet handleResize = () => console.log('handleResize not initialized yet');\nconst doInputChange = debounce(() => updatePreviewUrl(), 400);\nconst doUpdatePreviewSize = debounce(() => handleResize(), 200);\n\nconst ExportModalSettings = ({ inputs, handleChange }: any) => {\n\t// We assume that a working ratio is never 0 (no 1D fragments)\n\tconst getRatio = () => (inputs.width / inputs.height).toFixed(2);\n\n\tconst onDimensionChange = (id: any, value: any) => {\n\t\tif (isNaN(value) || value === 0) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\tvalue = 1;\n\t\t}\n\t\tif (!inputs.ratioLock) {\n\t\t\thandleChange(id, value);\n\t\t\treturn;\n\t\t}\n\t\tif (inputs.curRatio === 0) {\n\t\t\thandleChange('curRatio', getRatio());\n\t\t}\n\t\thandleChange(id, value);\n\t\tif (id === 'width') {\n\t\t\thandleChange('height', (value / inputs.curRatio).toFixed(0));\n\t\t} else {\n\t\t\thandleChange('width', (value * inputs.curRatio).toFixed(0));\n\t\t}\n\t};\n\tconst numInputOnchange = (event: any) => {\n\t\tonDimensionChange(event.target.id, parseFloat(event.target.value));\n\t};\n\tconst numInputOnClick = (event: any) => {\n\t\tif (event.imaginaryTarget && event.imaginaryTarget.value) {\n\t\t\tonDimensionChange(event.imaginaryTarget.id, parseFloat(event.imaginaryTarget.value));\n\t\t}\n\t};\n\tconst inputChange = (event: any) => {\n\t\thandleChange(event.target.id, event.target.value);\n\t};\n\n\treturn (\n\t\t<Form className={exportSettingForm}>\n\t\t\t<TextInput\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid={'fragmentName'}\n\t\t\t\tlabelText={'Name'}\n\t\t\t\tplaceholder={'Fragment name'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\ttype='text'\n\t\t\t\tdefaultValue={inputs.fragmentName} />\n\t\t\t<div className={exportSettingFormGroup}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='width'\n\t\t\t\t\tlabel='Width'\n\t\t\t\t\tvalue={inputs.width}\n\t\t\t\t\thideSteppers={true}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='height'\n\t\t\t\t\tlabel='Height'\n\t\t\t\t\tvalue={inputs.height}\n\t\t\t\t\thideSteppers={true}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t</div>\n\t\t\t<Checkbox\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid='ratioLock'\n\t\t\t\tlabelText='Preserve aspect ratio'\n\t\t\t\tdefaultChecked={inputs.ratioLock}\n\t\t\t\tonChange={(event: any) => handleChange('ratioLock', event)} />\n\t\t\t<Select\n\t\t\tclassName={selectInput}\n\t\t\tvalue={inputs.unit}\n\t\t\tid={'unit'}\n\t\t\tonChange={inputChange}\n\t\t\tlabelText='Units'>\n\t\t\t\t<SelectItem text='pixels' value='pixels' />\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\tclassName={selectInput}\n\t\t\tvalue={inputs.format}\n\t\t\tid={'format'}\n\t\t\tonChange={inputChange}\n\t\t\tlabelText='Format'>\n\t\t\t\t<SelectItem text='png' value='image/png' />\n\t\t\t\t<SelectItem text='jpeg' value='image/jpeg' />\n\t\t\t\t<SelectItem text='bmp' value='image/bmp' />\n\t\t\t\t<SelectItem text='gif' value='image/gif' />\n\t\t\t</Select>\n\t\t</Form>\n\t);\n};\n\nexport const ExportImageModal = (props: ExportImageProps) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst { fragments } = useContext(GlobalStateContext);\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === props.fragment.id);\n\n\tconst exportSettings = {\n\t\twidth: 800,\n\t\theight: 400,\n\t\tunit: 'pixels',\n\t\tratioLock: false,\n\t\tfragmentName: props.fragment.title,\n\t\tformat: 'image/png',\n\t\tcurRatio: 0\n\t};\n\tconst [inputs, setInputs] = useState(exportSettings);\n\tconst [previewUrl, setPreviewUrl] = useState(props.fragment.preview);\n\tconst [isPerformingAction, setIsPerformingAction] = useState(false);\n\tconst previewContainerRef = useRef<HTMLDivElement>(null);\n\tconst [imageContainerSize, setImageContainerSize] = useState<any>();\n\n\thandleResize = () => {\n\t\tif (!previewContainerRef || !previewContainerRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tsetImageContainerSize({\n\t\t\twidth: previewContainerRef.current.offsetWidth,\n\t\t\theight: previewContainerRef.current.offsetHeight\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', doUpdatePreviewSize);\n\t\tif (previewContainerRef) {\n\t\t\tdoUpdatePreviewSize();\n\t\t}\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', doUpdatePreviewSize);\n\t\t};\n\t}, [previewContainerRef]);\n\n\tconst getPreviewSize = (width: number, height: number) => {\n\t\tlet fitRatio: number;\n\t\tif (width <= height) {\n\t\t\t// preview is square or tall rectangle (mobile)\n\t\t\tfitRatio = imageContainerSize.height / height;\n\t\t} else {\n\t\t\t// preview is long rectangle\n\t\t\tfitRatio = imageContainerSize.width / width;\n\t\t}\n\t\treturn {\n\t\t\twidth: width * fitRatio,\n\t\t\theight: height * fitRatio\n\t\t};\n\t};\n\n\tupdatePreviewUrl = async () => {\n\t\tconst previewSize = getPreviewSize(inputs.width, inputs.height);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tpreview: {\n\t\t\t\tformat: inputs.format,\n\t\t\t\twidth: previewSize.width,\n\t\t\t\theight: previewSize.height\n\t\t\t}\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tconst imageUrl: string = reader.result ? reader.result.toString() : '';\n\t\t\tsetPreviewUrl(imageUrl);\n\t\t};\n\t};\n\n\tconst onSubmit = async () => {\n\t\tif (isPerformingAction) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsPerformingAction(true);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: props.fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tformat: inputs.format\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst fileName = getFullFileName(inputs.fragmentName, inputs.format);\n\t\tsaveBlob(imageBlob, fileName);\n\t\tsetIsPerformingAction(false);\n\t};\n\n\tconst handleChange = (id: any, value: any) => {\n\t\tsetInputs({\n\t\t\t...inputs,\n\t\t\t[id]: value\n\t\t});\n\t\tdoInputChange();\n\t};\n\n\tuseEffect(() => {\n\t\tdoInputChange();\n\t}, []);\n\n\treturn (\n\t\t<Modal\n\t\thasForm\n\t\tonRequestSubmit={() => {\n\t\t\t// TODO look into whether it's a better user experience to have the\n\t\t\t// processing in the background, perhaps with the saving indication\n\t\t\tonSubmit().then(dispatchModal({ type: ModalActionType.closeModal }));\n\t\t}}\n\t\tonSecondarySubmit={() => props.setDisplayedModal(ShareOptionsModals.SHARE_OPTIONS)}\n\t\topen={modalState.ShowModal && props.displayedModal === ShareOptionsModals.IMAGE_EXPORTS}\n\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\tprimaryButtonText='Export'\n\t\tsecondaryButtonText='Back to export options'\n\t\tmodalHeading={`Export '${props.fragment.title}' as image`}>\n\t\t\t<p>\n\t\t\t\tExport a static image of this fragment for use in presentation decks or designs.\n\t\t\t</p>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tmarginTop: '3rem'\n\t\t\t}}>\n\t\t\t\t<ExportModalSettings inputs={inputs} handleChange={handleChange} />\n\t\t\t\t<div className={previewContainer} ref={previewContainerRef}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tid=\"previewimg\"\n\t\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\talt={`fragment preview: ${props.fragment.title}`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Loading active={isPerformingAction} />\n\t\t</Modal>\n\t);\n};\n\n","import React, {\n\tuseContext,\n\tuseEffect,\n\tuseState\n} from 'react';\nimport { css, cx } from 'emotion';\nimport {\n\tFragment,\n\tgetParentComponent,\n\tgetSelectedComponent,\n\tinitializeIds,\n\tstateWithoutComponent,\n\tupdatedState\n} from '../../components';\nimport { EditHeader } from './edit-header';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport {\n\tButton,\n\tSideNav,\n\tSideNavLink,\n\tSideNavItems,\n\tTabs,\n\tTab\n} from 'carbon-components-react';\nimport {\n\tCode16,\n\tColorPalette16,\n\tCopy32,\n\tDevelopment16,\n\tExport16,\n\tInformation16,\n\tTrashCan32\n} from '@carbon/icons-react';\n\nimport { ElementsPane } from './elements-pane';\nimport { StylePane } from './style-pane';\nimport { CodePane } from './code-pane';\nimport { ExportPane } from './export-pane';\n\nimport { StyleContextPane } from './style-context-pane';\nimport { CodeContextPane } from './code-context-pane';\n\nconst leftPaneWidth = '300px';\nconst rightPaneWidth = '302px';\nconst railWidth = '48px';\nconst transitionDetails = '0.11s cubic-bezier(0.2, 0, 1, 0.9)';\n\nconst editPageContent = css`\n\tposition: absolute;\n\twidth: 100vw;\n\theight: calc(100% - 3rem);\n\ttop: 3rem;\n\tmax-width: 100%;\n\tbackground: #f4f4f4;\n\n\t.edit-content {\n\t\tpadding: 1rem;\n\t\tmargin: 0 ${rightPaneWidth} 0 ${railWidth};\n\t\twidth: calc(100% - ${rightPaneWidth} - ${railWidth});\n\t\theight: calc(100% - 64px);\n\t\ttransition: margin-left ${transitionDetails}, width ${transitionDetails};\n\t\toverflow: auto;\n\n\t\t&.is-side-panel-active {\n\t\t\tmargin-left: calc(${railWidth} + ${leftPaneWidth});\n\t\t\twidth: calc(100% - ${leftPaneWidth} - ${rightPaneWidth} - ${railWidth});\n\t\t}\n\t}\n`;\n\nconst sideRail = css`\n\ttransition: left ${transitionDetails};\n\n\t&.bx--side-nav, &.bx--side-nav:hover {\n\t\t.bx--side-nav__item .bx--side-nav__link {\n\t\t\theight: 3rem;\n\t\t}\n\t}\n\n\t&.bx--side-nav--ux {\n\t\ttop: 7rem;\n\t\tbox-shadow: inset -1px 0px #d8d8d8;\n\t}\n\n\t&.is-active {\n\t\tleft: ${leftPaneWidth};\n\t}\n\n\t.bx--side-nav__items {\n\t\tpadding: 0;\n\t}\n`;\n\nexport const leftPane = css`\n\tposition: absolute;\n\tbackground: white;\n\ttransition: left 0.11s cubic-bezier(0.2, 0, 1, 0.9);\n\twidth: ${leftPaneWidth};\n\tleft: -${leftPaneWidth};\n\theight: calc(100% - 4rem);\n\tpadding: 0 15px;\n\tbox-shadow: inset -1px 0px #d8d8d8;\n\tz-index: 999;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n\t&.is-active {\n\t\tleft: 0;\n\t}\n`;\n\nexport const leftPaneHeader = css`\n\tposition: fixed;\n\tpadding-top: 15px;\n\twidth: 270px;\n\tbackground: white;\n`;\n\nconst rightPanel = css`\n\twidth: ${rightPaneWidth};\n\tposition: absolute;\n\tright: 0;\n\ttop: 4rem;\n\tbackground: white;\n\tmin-height: calc(100vh - 7rem);\n\tbox-shadow: inset 1px 0px #d8d8d8;\n\tz-index: 1;\n\n\t.bx--tabs--scrollable__nav-item .bx--tabs--scrollable__nav-link {\n\t\twidth: 100px;\n\t\ttext-align: center;\n\t}\n\n\t.context-pane-content {\n\t\toverflow: auto;\n\t\theight: calc(100vh - 17rem);\n\t}\n`;\n\nconst actionsStyle = css`\n\tposition: absolute;\n\tbottom: 0;\n\tmargin: 15px;\n`;\n\nenum SelectedLeftPane {\n\tNONE = 'none',\n\tELEMENTS = 'elements',\n\tSTYLE = 'style',\n\tCODE = 'code',\n\tEXPORT = 'export'\n}\n\nexport const Edit = ({ match }: any) => {\n\tconst {\n\t\tfragments,\n\t\tupdateFragment,\n\t\tclearActionHistory,\n\t\taddAction,\n\t\tstyleClasses\n\t} = useContext(GlobalStateContext);\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === match.params.id);\n\n\tconst [selectedLeftPane, setSelectedLeftPane] = useState(SelectedLeftPane.NONE);\n\n\tuseEffect(() => {\n\t\tif (fragment && fragment.title) {\n\t\t\tdocument.title = `Edit \"${fragment.title}\"`;\n\t\t} else {\n\t\t\tdocument.title = 'Edit fragment';\n\t\t}\n\t}, [fragment]);\n\n\tuseEffect(() => {\n\t\tclearActionHistory();\n\t\taddAction({ fragment, styleClasses });\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst onRailClick = (clickedLeftPane: SelectedLeftPane) => {\n\t\tif (clickedLeftPane === selectedLeftPane) {\n\t\t\tsetSelectedLeftPane(SelectedLeftPane.NONE);\n\t\t} else {\n\t\t\tsetSelectedLeftPane(clickedLeftPane);\n\t\t}\n\t};\n\n\tconst selectedComponent = getSelectedComponent(fragment);\n\tconst parentComponent = getParentComponent(fragment.data, selectedComponent);\n\n\treturn (\n\t\t<div\n\t\t\tid='edit-wrapper'\n\t\t\tclassName={editPageContent}>\n\t\t\t{fragment && <EditHeader fragment={fragment} />}\n\t\t\t<ElementsPane isActive={selectedLeftPane === SelectedLeftPane.ELEMENTS} />\n\t\t\t<StylePane isActive={selectedLeftPane === SelectedLeftPane.STYLE} />\n\t\t\t<CodePane isActive={selectedLeftPane === SelectedLeftPane.CODE} />\n\t\t\t<ExportPane isActive={selectedLeftPane === SelectedLeftPane.EXPORT} />\n\t\t\t<SideNav\n\t\t\taria-label='Side navigation'\n\t\t\tclassName={cx(sideRail, selectedLeftPane !== SelectedLeftPane.NONE ? 'is-active' : '')}\n\t\t\tisRail>\n\t\t\t\t<SideNavItems>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Development16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.ELEMENTS)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.ELEMENTS}>\n\t\t\t\t\t\tElements\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={ColorPalette16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.STYLE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.STYLE}>\n\t\t\t\t\t\tStyle\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Code16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.CODE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.CODE}>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Export16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.EXPORT)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.EXPORT}>\n\t\t\t\t\t\tExport\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t</SideNavItems>\n\t\t\t</SideNav>\n\t\t\t<div\n\t\t\tclassName={cx('edit-content', selectedLeftPane !== SelectedLeftPane.NONE ? 'is-side-panel-active' : '')}\n\t\t\tonClick={() => updateFragment({ ...fragment, selectedComponentId: null })}>\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tfragment && <Fragment fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className={rightPanel}>\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-style'\n\t\t\t\t\tlabel={<ColorPalette16 />}>\n\t\t\t\t\t\t<StyleContextPane fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-code'\n\t\t\t\t\tlabel={<Code16 />}>\n\t\t\t\t\t\t<CodeContextPane fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-info'\n\t\t\t\t\tlabel={<Information16 />}>\n\t\t\t\t\t\tinfo\n\t\t\t\t\t</Tab>\n\t\t\t\t</Tabs>\n\t\t\t\t<div className={actionsStyle}>\n\t\t\t\t\t<Button\n\t\t\t\t\tkind='secondary'\n\t\t\t\t\tdisabled={!fragment.selectedComponentId} // disabled for fragment\n\t\t\t\t\trenderIcon={Copy32}\n\t\t\t\t\tclassName={css`margin-right: 8px`}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\t() => updateFragment({\n\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\tdata: updatedState(\n\t\t\t\t\t\t\t\tfragment.data, {\n\t\t\t\t\t\t\t\t\ttype: 'insert',\n\t\t\t\t\t\t\t\t\tcomponent: JSON.parse(JSON.stringify(initializeIds(selectedComponent, true))) // full clone, new Ids\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tparentComponent.id,\n\t\t\t\t\t\t\t\tparentComponent.items.indexOf(selectedComponent) + 1\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}>\n\t\t\t\t\t\tDuplicate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\tkind='danger'\n\t\t\t\t\tdisabled={!fragment.selectedComponentId} // disabled for fragment\n\t\t\t\t\trenderIcon={TrashCan32}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\t() => updateFragment({\n\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\tdata: stateWithoutComponent(fragment.data, fragment.selectedComponentId)\n\t\t\t\t\t\t})\n\t\t\t\t\t}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { getFragmentDuplicate } from '../../utils/fragment-tools';\n\n// In the case that fragment modal is used in the dashboard the full fragment containing options and data\n// can't be passed in, so fragment id is passed in and `useFragment` is used within this component.\nexport const DuplicateFragmentModal = ({ id }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst { fragments, addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\tconst location = useLocation();\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\n\tconst duplicateFragment = () => {\n\t\tconst fragmentCopy = getFragmentDuplicate(\n\t\t\tfragments,\n\t\t\tfragment,\n\t\t\t// When a new fragment is created from an existing template, it shouldn't\n\t\t\t// be a template by default.\n\t\t\t{ labels: fragment?.labels?.filter((label: string) => label !== 'template') }\n\t\t);\n\n\t\taddFragment(fragmentCopy);\n\t\tif (location.pathname !== '/') {\n\t\t\thistory.push(`/edit/${fragmentCopy.id}`);\n\t\t}\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'success',\n\t\t\t\ttitle: 'Duplication success',\n\t\t\t\tmessage: `'${fragmentCopy.title}  has been duplicated from '${fragment.title}'.`\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Duplicate fragment?'\n\t\t\tprimaryButtonText='Duplicate'\n\t\t\tonRequestSubmit={duplicateFragment}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Duplicate</strong> to begin to edit a copy of the current fragment\n\t\t\t\tor <strong>Cancel</strong> to continue on this fragment.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport { useHistory } from 'react-router-dom';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\n\nexport const DeleteFragmentModal = ({ id }: any) => {\n\tconst { fragments, toggleFragmentVisibility, removeFragment } = useContext(GlobalStateContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst history = useHistory();\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\n\tconst deleteFragment = () => {\n\t\ttoggleFragmentVisibility(id, true);\n\t\thistory.push('/');\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'error',\n\t\t\t\ttitle: 'Fragment deleted!',\n\t\t\t\tmessage: `Fragment '${fragment.title}' has been permanently deleted.`,\n\t\t\t\taction: {\n\t\t\t\t\tactionText: 'Undo',\n\t\t\t\t\tactionFunction: () => toggleFragmentVisibility(id, false),\n\t\t\t\t\tonNotificationClose: () => removeFragment(id)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\tsize='sm'\n\t\topen={modalState.ShowModal}\n\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\tsecondaryButtonText='Cancel'\n\t\tmodalHeading='Delete this fragment?'\n\t\tdanger\n\t\tprimaryButtonText='Delete'\n\t\tonRequestSubmit={() => deleteFragment()}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Cancel</strong> to go back to editing your fragment\n\t\t\t\tor <strong>Delete</strong> to remove it permanently.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import { ModalType, ModalContext } from '../../context/modal-context';\nimport { ShareOptionsModal } from './share-options/share-options-modal';\nimport { DuplicateFragmentModal } from './duplicate-fragment-modal';\nimport { DeleteFragmentModal } from './delete-fragment-modal';\nimport React, { useContext } from 'react';\n\n// eslint-disable-next-line react/prop-types\nexport const FragmentModal = ({ fragment }: any) => {\n\tconst [modalState] = useContext(ModalContext);\n\n\tswitch (modalState.ModalType) {\n\t\tcase ModalType.DUPLICATION:\n\t\t\treturn (\n\t\t\t// In the case that fragment modal is used in the dashboard the full fragment containing options and\n\t\t\t// data can't be passed in, so we use fragment id and fetch it\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DuplicateFragmentModal id={fragment.id}/>\n\t\t\t);\n\t\tcase ModalType.SHARING:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<ShareOptionsModal fragment={fragment} />\n\t\t\t);\n\t\tcase ModalType.DELETION:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DeleteFragmentModal id={fragment.id} />\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport {\n\tCopy16,\n\tDelete16,\n\tShare16,\n\tUndo16,\n\tRedo16\n} from '@carbon/icons-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { FragmentModal } from './fragment-modal';\nimport { GlobalStateContext } from '../../context';\n\nconst editHeader = css`\n\tleft: 16rem;\n\tbackground: #fff;\n\tbox-shadow: inset 0px -1px #d8d8d8;\n\n\t.edit-wrapper {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t.title-wrap {\n\t\t\theight: 3rem;\n\t\t\tmargin-left: 3rem;\n\t\t\tdisplay: flex;\n\t\t\talign-self: center;\n\t\t\tflex-flow: column;\n\t\t}\n\t\t.title-subheading {\n\t\t\tdisplay: inline-flex;\n\t\t\t.bx--inline-loading {\n\t\t\t\twidth: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin-left: 10px;\n\t\t\t\ttop: -10px;\n\t\t\t}\n\t\t\t.date-wrap {\n\t\t\t\tfont-size: 12px;\n\t\t\t\tfont-style: italic;\n\t\t\t\tcolor: black;\n\t\t\t\tpadding-left: 12px;\n\t\t\t}\n\t\t}\n\t\t.fragment-title {\n\t\t\twhitespace: nowrap;\n\t\t\tfont-weight: bold;\n\t\t\tpadding-left: 12px;\n\t\t\tpadding-right: 16px;\n\t\t\tfloat: left;\n\t\t}\n\t\t.fragment-edit {\n\t\t\tmargin-top: 6px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and\n\t// store to local fragments checkbox to overlap.\n\t@media screen and (max-width: 67.0625rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-flow: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\t.edit-wrapper {\n\t\t\tflex-direction: column;\n\t\t\t.title-wrap {\n\t\t\t\tmargin-top: 10px;\n\t\t\t\talign-self: auto;\n\t\t\t}\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: row;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 0px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst toolBarSeparator = css`\n\tbackground-color: #e0e0e0;\n\theight: 100%;\n\twidth: 1px;\n\tdisplay: inline-block;\n    margin: auto 6px;\n`;\n\nconst actionIconStyle = css`\n\tcolor: black;\n\n\t.bx--btn--ghost:disabled & {\n\t\tcolor: #8d8d8d;\n\t}\n`;\n\nconst fragmentEditToolBar = css`\n\tdisplay: flex;\n\tmargin-right: 5rem;\n\tmargin-top: 8px;\n\tmargin-bottom: 8px;\n\tbutton {\n\t\theight: 3rem;\n\t}\n\t.toolBarButtons {\n\t\tmin-width: 13.75rem\n\t}\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\tmargin-left: 10px;\n\t\tflex-direction: row-reverse;\n\t\tplace-self: start;\n\t}\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\tmargin-left: 10px;\n\t\tmargin-top: 20px;\n\t\tflex-direction: column-reverse;\n\t\tplace-self: start;\n\t}\n`;\n\nexport const EditHeader = ({ fragment }: any) => {\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst {\n\t\tcanUndo,\n\t\tundoAction,\n\t\tcanRedo,\n\t\tredoAction\n\t} = useContext(GlobalStateContext);\n\n\treturn (\n\t\t<header\n\t\t\tclassName={editHeader}\n\t\t\taria-label={`Header for '${fragment.title}'`}\n\t\t\trole='banner'\n\t\t\ttabIndex={0}>\n\t\t\t<div className='edit-wrapper'>\n\t\t\t\t<div className='title-wrap'>\n\t\t\t\t\t<p className='fragment-title'>{fragment.title}</p>\n\n\t\t\t\t\t<div className='title-subheading'>\n\t\t\t\t\t\t<div className='date-wrap'>{`Last modified ${ fragment.lastModified}`}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={fragmentEditToolBar}>\n\t\t\t\t\t<div className='toolBarButtons'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Undo'\n\t\t\t\t\t\t\ttitle='Undo'\n\t\t\t\t\t\t\tdisabled={!canUndo()}\n\t\t\t\t\t\t\tonClick={() => undoAction()}>\n\t\t\t\t\t\t\t<Undo16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Redo'\n\t\t\t\t\t\t\ttitle='Redo'\n\t\t\t\t\t\t\tdisabled={!canRedo()}\n\t\t\t\t\t\t\tonClick={() => redoAction()}>\n\t\t\t\t\t\t\t<Redo16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<div className={toolBarSeparator} />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Duplicate fragment'\n\t\t\t\t\t\t\ttitle='Duplicate fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDuplicationModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Copy16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Delete fragment'\n\t\t\t\t\t\t\ttitle='Delete fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDeletionModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Delete16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Share fragment'\n\t\t\t\t\t\t\ttitle='Share fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setShareModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Share16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<FragmentModal fragment={fragment} />\n\t\t</header>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { drag } from '../routes/edit/tools';\n\nconst elementTileStyle = css`\n\tborder: 1px solid #d8d8d8;\n\tmin-width: 127px;\n\twidth: 127px;\n\theight: 127px;\n\tdisplay: inline-flex;\n\tmargin-bottom: 1rem;\n\tflex-direction: column;\n\n\timg {\n\t\tmargin: auto;\n\t}\n\n\t.title {\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tmargin: 0 1rem auto auto;\n\t\toverflow-wrap: break-word;\n\t}\n`;\n\nexport const ElementTile = ({ children, componentObj }: any) => {\n\treturn (<div\n\t\tclassName={elementTileStyle}\n\t\tdraggable='true'\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj\n\t\t})}>\n\t\t{children}\n\t</div>);\n};\n","import React, { useContext, useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { Search } from 'carbon-components-react';\n\nimport { ElementTile } from '../../components/element-tile';\n\nimport { leftPane, leftPaneHeader } from '.';\nimport { allComponents } from '../../fragment-components';\nimport { GlobalStateContext } from '../../context';\n\nconst searchStyle = css`\n\tmargin-top: 15px;\n`;\n\nconst elementTileListStyle = css`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\tmargin-top: 100px;\n\twidth: 270px;\n`;\n\nexport const ElementsPane = ({ isActive }: any) => {\n\tconst [filterString, setFilterString] = useState('');\n\tconst { fragments } = useContext(GlobalStateContext);\n\n\tconst microLayouts = fragments.filter((fragment: any) => fragment.labels?.includes('micro-layout'));\n\n\t/**\n\t * Returns true if element should show\n\t *\n\t * @param matches a list of strings that represent the component user might search for\n\t */\n\tconst shouldShow = (matches: string[]) => {\n\t\treturn !filterString || matches.some((match) => match.includes(filterString));\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\t<div className={leftPaneHeader}>\n\t\t\t\tElements\n\t\t\t\t<Search\n\t\t\t\t\tid='elements-search'\n\t\t\t\t\tclassName={searchStyle}\n\t\t\t\t\tlight\n\t\t\t\t\tlabelText='Filter elements'\n\t\t\t\t\tplaceholder='Filter elements'\n\t\t\t\t\tonChange={(event: any) => setFilterString(event.target.value)} />\n\t\t\t</div>\n\t\t\t<div className={elementTileListStyle}>\n\t\t\t\t{\n\t\t\t\t\tObject.values(allComponents)\n\t\t\t\t\t\t.filter((component: any) =>\n\t\t\t\t\t\t\t!component.componentInfo.hideFromElementsPane\n\t\t\t\t\t\t\t&& shouldShow(component.componentInfo.keywords))\n\t\t\t\t\t\t.map((component: any) =>\n\t\t\t\t\t\t\t<ElementTile componentObj={component.componentInfo.defaultComponentObj} key={component.componentInfo.name}>\n\t\t\t\t\t\t\t\t<img src={component.componentInfo.image} alt={component.componentInfo.name} />\n\t\t\t\t\t\t\t\t<span className='title'>{component.componentInfo.name}</span>\n\t\t\t\t\t\t\t</ElementTile>)\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tmicroLayouts && microLayouts.length > 0 && <>\n\t\t\t\t\t<h4>Micro layouts</h4>\n\t\t\t\t\t<div className={elementTileListStyle}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.values(microLayouts)\n\t\t\t\t\t\t\t\t// TODO prevent recursive adding\n\t\t\t\t\t\t\t\t.filter((component: any) => shouldShow([component.title, ...component.labels]))\n\t\t\t\t\t\t\t\t.map((component: any) =>\n\t\t\t\t\t\t\t\t\t<ElementTile componentObj={{ type: 'fragment', id: component.id }} key={component.id}>\n\t\t\t\t\t\t\t\t\t\t{/* <img src={component.componentInfo.image} alt={component.title} /> */}\n\t\t\t\t\t\t\t\t\t\t<span className='title'>{component.title}</span>\n\t\t\t\t\t\t\t\t\t</ElementTile>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React, { useContext, useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { uniqueNamesGenerator, adjectives, colors, animals } from 'unique-names-generator';\nimport {\n\tButton,\n\tForm,\n\tSearch,\n\tTextArea,\n\tTextInput,\n\tTag\n} from 'carbon-components-react';\nimport { Add16 } from '@carbon/icons-react';\nimport { leftPane } from '.';\nimport { GlobalStateContext } from '../../context';\n\nconst searchContainerStyle = css`\n\tdisplay: flex;\n\tmargin-bottom: 1rem;\n\n\tbutton {\n\t\tborder-bottom: 1px solid #8d8d8d;\n\t}\n`;\n\nexport const StylePane = ({ isActive }: any) => {\n\tconst [selectedStyleClassId, setSelectedStyleClassId] = useState('' as string);\n\tconst { styleClasses, setStyleClasses } = useContext(GlobalStateContext);\n\tconst [filterString, setFilterString] = useState('');\n\n\tconst getSelectedClass = () => styleClasses.find((c: any) => c.id === selectedStyleClassId) || {};\n\tconst getSelectedClassIndex = () => styleClasses.findIndex((c: any) => c.id === selectedStyleClassId);\n\n\tconst shouldShow = (styleClass: any) => {\n\t\tconst matches = [styleClass.name, styleClass.id];\n\t\treturn !filterString || matches.some((match) => match.includes(filterString));\n\t};\n\n\tconst getUniqueClass = (): any => {\n\t\tconst className = uniqueNamesGenerator({\n\t\t\tdictionaries: [adjectives, colors, animals],\n\t\t\tseparator: '-',\n\t\t\tlength: 3\n\t\t});\n\n\t\tif (!styleClasses.find((sc: any) => sc.id === className || sc.name === className)) {\n\t\t\treturn {\n\t\t\t\tid: className,\n\t\t\t\tname: className\n\t\t\t};\n\t\t}\n\n\t\treturn getUniqueClass();\n\t};\n\n\tconst updateSelectedClass = (newClass: any) => {\n\t\tconst selectedClassIndex = getSelectedClassIndex();\n\t\tif (selectedClassIndex < 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetStyleClasses([\n\t\t\t...styleClasses.slice(0, selectedClassIndex),\n\t\t\tnewClass,\n\t\t\t...styleClasses.slice(selectedClassIndex + 1)\n\t\t]);\n\t};\n\n\tconst updateSelectedClassContent = (content: string | undefined) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tcontent: content || ''\n\t\t});\n\t};\n\n\tconst updateSelectedClassName = (name: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tname\n\t\t});\n\t};\n\n\tconst updateSelectedClassId = (id: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tid\n\t\t});\n\t\tsetSelectedStyleClassId(id);\n\t};\n\n\tconst addNewStyleClass = () => {\n\t\tconst newStyleClass = getUniqueClass();\n\t\tsetStyleClasses([...styleClasses, newStyleClass]);\n\t\tsetSelectedStyleClassId(newStyleClass.id);\n\t};\n\n\tconst removeStyleClass = (styleClassId: string) => {\n\t\tsetStyleClasses(styleClasses.filter((sc: any) => sc.id !== styleClassId));\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tStyle <br /><br />\n\t\t\t<Form>\n\t\t\t\t<div className={searchContainerStyle}>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tid=\"styles-search\"\n\t\t\t\t\t\tlight\n\t\t\t\t\t\tlabelText=\"Filter classes\"\n\t\t\t\t\t\tplaceholder=\"Filter classes\"\n\t\t\t\t\t\tonChange={(event: any) => setFilterString(event.target.value)} />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\trenderIcon={Add16}\n\t\t\t\t\t\ticonDescription=\"Add new class\"\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\tonClick={addNewStyleClass} />\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\tstyleClasses.filter(shouldShow).map((styleClass: any) => (\n\t\t\t\t\t\t<Tag\n\t\t\t\t\t\tkey={styleClass.name}\n\t\t\t\t\t\tfilter\n\t\t\t\t\t\tonClick={() => setSelectedStyleClassId(styleClass.id)}\n\t\t\t\t\t\tonClose={() => removeStyleClass(styleClass.id)}>\n\t\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t\t</Tag>\n\t\t\t\t\t))\n\t\t\t\t} <br />\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='Descriptive name'\n\t\t\t\t\thelperText='Name that appears in tags and search'\n\t\t\t\t\tvalue={getSelectedClass().name || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassName(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='CSS selector'\n\t\t\t\t\thelperText='Value used in development'\n\t\t\t\t\tvalue={getSelectedClass().id || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassId(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextArea\n\t\t\t\t\tvalue={getSelectedClass().content || ''}\n\t\t\t\t\tlabelText={getSelectedClass().id || 'Select a class first'}\n\t\t\t\t\thelperText='Put CSS properties for your class here'\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassContent(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { leftPane } from '.';\n\nexport const CodePane = ({ isActive }: any) => {\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tCode\n\t\t\t<br /><br /> <strong>Comming soon!</strong>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { leftPane } from '.';\n\nexport const ExportPane = ({ isActive }: any) => {\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tExport\n\t\t\t<br /><br /> <strong>Comming soon!</strong>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport { Breadcrumb, BreadcrumbItem } from 'carbon-components-react';\n\nimport { getParentComponent, getSelectedComponent } from '../../components/fragment';\nimport { useFragment } from '../../context';\n\nconst getAncestors = (state: any, component: any) => {\n\tconst ancestors: any[] = [];\n\n\t// there's probably a way to optimize this function\n\n\tif (state === component) {\n\t\treturn ancestors;\n\t}\n\n\tlet parent = component;\n\n\tdo {\n\t\tparent = getParentComponent(state, parent);\n\t\tancestors.unshift(parent);\n\t} while (parent !== state);\n\n\treturn ancestors;\n};\n\nexport const SelectedComponentBreadcrumbs = ({ selectedComponent }: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tif (!selectedComponent) {\n\t\tselectedComponent = getSelectedComponent(fragment);\n\t}\n\n\tconst selectComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: component.id\n\t\t}, true);\n\t};\n\n\treturn selectedComponent && <Breadcrumb noTrailingSlash>\n\t\t{getAncestors(fragment.data, selectedComponent).map((component) =>\n\t\t\t<BreadcrumbItem\n\t\t\thref=\"#\"\n\t\t\tkey={component.id}\n\t\t\tisCurrentPage={!component.type}\n\t\t\tonClick={(event: any) => {\n\t\t\t\tevent.nativeEvent.preventDefault();\n\t\t\t\tif (!component.type) {\n\t\t\t\t\t// happens when clicking root element\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tselectComponent(component);\n\t\t\t}}>\n\t\t\t\t{component.type || 'root'}\n\t\t\t</BreadcrumbItem>\n\t\t)}\n\t\t<BreadcrumbItem href=\"#\" onClick={(event: any) => event.nativeEvent.preventDefault()} isCurrentPage>\n\t\t\t{selectedComponent.type || 'container'}\n\t\t</BreadcrumbItem>\n\t</Breadcrumb>;\n};\n","import React from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tTooltipDefinition\n} from 'carbon-components-react';\n\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\nimport { allComponents } from '../../fragment-components';\nimport { SelectedComponentBreadcrumbs } from './selected-component-breadcrumbs';\nimport { css } from 'emotion';\n\nconst styleContextPaneStyle = css`\n.bx--form-item.bx--checkbox-wrapper {\n\tdisplay: inline-flex;\n}\n`;\n\nconst showComponentStyleOptions = (selectedComponent: any, setComponent: any) => {\n\tfor (const component of Object.values(allComponents)) {\n\t\t// Find the UI for editing style for our component\n\t\tif (selectedComponent.type === component.componentInfo.type) {\n\t\t\treturn <component.componentInfo.styleUI\n\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\tsetComponent={setComponent} />;\n\t\t}\n\t}\n};\n\nexport const StyleContextPane = ({ fragment, setFragment }: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any, updateActionHistory = true) => {\n\t\tsetFragment(\n\t\t\t{\n\t\t\t\t...fragment,\n\t\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\t\ttype: 'update',\n\t\t\t\t\tcomponent\n\t\t\t\t})\n\t\t\t},\n\t\t\tupdateActionHistory\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={styleContextPaneStyle}>\n\t\t\t{\n\t\t\t\tselectedComponent && <>\n\t\t\t\t\t<SelectedComponentBreadcrumbs\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\t\t\tsetFragment={setFragment} />\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className='context-pane-content'>\n\t\t\t\t\t\t{showComponentStyleOptions(selectedComponent, setComponent)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{\n\t\t\t\t!selectedComponent && <>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tid='fragmentName'\n\t\t\t\t\t\tlabelText='Fragment name'\n\t\t\t\t\t\tdefaultValue={fragment.title}\n\t\t\t\t\t\tonChange={(event: any) => setFragment({\n\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\ttitle: event.target.value\n\t\t\t\t\t\t})}/>\n\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid='setFragmentAsTemplate'\n\t\t\t\t\t\tchecked={fragment.labels && fragment.labels.includes('template')}\n\t\t\t\t\t\tlabelText='Make this fragment a &nbsp;'\n\t\t\t\t\t\tonChange={(checked: boolean) => {\n\t\t\t\t\t\t\tif (checked) {\n\t\t\t\t\t\t\t\tif(!fragment.labels?.includes('template')) {\n\t\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\t\tlabels: [...(fragment.labels || []), 'template']\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if the set template is unchecked, remove the 'template' label\n\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\tlabels: fragment.labels?.filter((label: string) => label !== 'template')\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t<TooltipDefinition\n\t\t\t\t\t\ttooltipText='Setting a fragment as a template makes it an easy starting point\n\t\t\t\t\t\tfor future fragments.'\n\t\t\t\t\t\tdirection='bottom'>\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t</TooltipDefinition>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid='setFragmentAsMicroLayout'\n\t\t\t\t\t\tchecked={fragment.labels && fragment.labels.includes('micro-layout')}\n\t\t\t\t\t\tlabelText='Make this fragment a &nbsp;'\n\t\t\t\t\t\tonChange={(checked: boolean) => {\n\t\t\t\t\t\t\tif (checked) {\n\t\t\t\t\t\t\t\tif(!fragment.labels?.includes('micro-layout')) {\n\t\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\t\tlabels: [...(fragment.labels || []), 'micro-layout']\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if the set micro-layout is unchecked, remove the 'micro-layout' label\n\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\tlabels: fragment.labels?.filter((label: string) => label !== 'micro-layout')\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t<TooltipDefinition\n\t\t\t\t\t\ttooltipText='Setting a fragment as a micro layout makes it available to drag and drop into fragments'\n\t\t\t\t\t\tdirection='bottom'>\n\t\t\t\t\t\tmicro layout\n\t\t\t\t\t</TooltipDefinition>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{\n\t\t\t\t!selectedComponent && <ComponentCssClassSelector componentObj={fragment} setComponent={setFragment} />\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tAComponentCodeUI,\n\tallComponents\n} from '../../fragment-components';\n\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\n\nconst showComponentCodeOptions = (selectedComponent: any, setComponent: any) => {\n\tfor (const component of Object.values(allComponents)) {\n\t\t// Find the UI for editing code props for our component\n\t\tif (selectedComponent.type === component.componentInfo.type && component.componentInfo.codeUI) {\n\t\t\treturn <component.componentInfo.codeUI\n\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\tsetComponent={setComponent} />;\n\t\t}\n\t}\n\treturn <AComponentCodeUI selectedComponent={selectedComponent} setComponent={setComponent} />;\n};\n\nexport const CodeContextPane = ({ fragment, setFragment }: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent\n\t\t\t})\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='context-pane-content'>\n\t\t\t{selectedComponent && showComponentCodeOptions(selectedComponent, setComponent)}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tButton,\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSearch\n} from 'carbon-components-react';\n\nimport {\n\tAdd16,\n\tArrowsVertical16,\n\tCheckmarkFilled16\n} from '@carbon/icons-react';\n\nimport { css } from 'emotion';\n\nconst dashboardSearchWrapper = css`\n\tdisplay: flex;\n\twidth: 100%;\n\n\t// 520px is the point which the search bar becomes too small to display the full text, moves\n\t// the sort, share, and add button below the search bar at this point.\n\t@media screen and (max-width: 520px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst searchInput = css`\n\tinput {\n\t\tborder-bottom: none;\n\n\t\t@media screen and (max-width: 520px) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n`;\n\nconst sortButton = css`\n\theight: 3rem;\n\twidth: 3rem;\n\tbackground-color: #f4f4f4;\n`;\n\nconst sortOverflowItem = css`\n\tsvg {\n\t\ttransform: translate(7px, 1.5px);\n\t}\n`;\n\n// 🏗️🏗️🏗️ Under construction, add in later 🏗️🏗️🏗️\n// const shareButton = css`\n// \theight: 3rem;\n// \twidth: 3rem;\n// \tbackground-color: #f4f4f4;\n// `;\n\nexport enum SortDirection {\n\tAscending,\n\tDescending\n}\n\nexport const DashboardSearch = ({\n\tonSearchHandler,\n\tonSortHandler,\n\tdisplayWizard,\n\tsetDisplayWizard,\n\tsortDirection\n}: any) => (\n\t<div className={dashboardSearchWrapper}>\n\t\t<Search\n\t\t\tlabelText='Fragment'\n\t\t\tplaceHolderText='Search fragments'\n\t\t\tclassName={searchInput}\n\t\t\tonChange={(event: any) => onSearchHandler(event.target.value)} />\n\t\t<OverflowMenu\n\t\t\tclassName={sortButton}\n\t\t\tariaLabel='Sort fragment'\n\t\t\trenderIcon={() => <ArrowsVertical16 />}\n\t\t\tonClick={(event: { stopPropagation: () => void }) => event.stopPropagation()}>\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tNewest to oldest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Ascending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => onSortHandler(SortDirection.Ascending)} />\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tOldest to newest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Descending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => onSortHandler(SortDirection.Descending)} />\n\t\t</OverflowMenu>\n\t\t<Button\n\t\tonClick={() => setDisplayWizard(!displayWizard)}\n\t\ttitle='Add new fragment'\n\t\taria-label='Add new fragment'>\n\t\t\tNew fragment\n\t\t\t<Add16 className='bx--btn__icon' />\n\t\t</Button>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\nimport { ContentSwitcher, Switch } from 'carbon-components-react';\n\n// keep the enum order same as the switch order so context switcher\n// knows to select the correct one. Shout if you have a cleaner alternative.\nexport enum FragmentGroupDisplayed {\n\tAllFragments,\n\tTemplates,\n\tLocalOnly\n}\n\nconst dashboardHeaderWrapper = css`\n\tdisplay: flex;\n\tmargin: 2rem 0;\n\n\t// 676px is when the content switcher becomes too small to show full text, moves the\n\t// content switcher below the title at this point.\n\t@media screen and (max-width: 676px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst fragmentTitle = css`\n\twidth: 100%;\n`;\n\nconst contentSwitcher = css`\n\twidth: 450px;\n`;\n\nexport const DashboardHeader = ({ onDisplayedSwitchHandler, fragmentGroupDisplayed }: any) => (\n\t<div className={dashboardHeaderWrapper}>\n\t\t<h2 className={fragmentTitle}>Fragments</h2>\n\t\t<ContentSwitcher\n\t\t\tclassName={contentSwitcher}\n\t\t\tonChange={(event: any) => onDisplayedSwitchHandler(event.name)}\n\t\t\tselectedIndex={fragmentGroupDisplayed}>\n\t\t\t<Switch name={FragmentGroupDisplayed.AllFragments} text='All fragments' />\n\t\t\t<Switch name={FragmentGroupDisplayed.Templates} text='Templates only' />\n\t\t</ContentSwitcher>\n\t</div>\n);\n","import React, { useContext, useState } from 'react';\n\nimport { FragmentWizardModals } from './fragment-wizard';\n\nimport { Modal } from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { generateNewFragment } from './generate-new-fragment';\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\n\nconst createFragmentTiles = css`\n\tdisplay: flex;\n\tmargin-top: 30px;\n\tmargin-left: 15px;\n\tmargin-right: 15px;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n`;\n\nconst createFragmentTile = css`\n\twidth: 48%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t}\n`;\n\nexport enum CreateOptions {\n\tCHOOSE_TEMPLATE,\n\tFROM_SCRATCH,\n\tIMPORT_JSON\n}\n\nexport interface CreateFragmentModalProps {\n\tshouldDisplay: boolean;\n\tsetShouldDisplay: (shouldDisplay: boolean) => void;\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void;\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void;\n}\n\nexport const CreateFragmentModal = (props: CreateFragmentModalProps) => {\n\tconst [selectedCreateOption, setSelectedCreateOption] = useState<CreateOptions | null>(null);\n\n\tconst { addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(\n\t\t\t{ items: [], id: 1 }\n\t\t);\n\n\t\taddFragment(generatedFragment);\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\thasForm\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tif (selectedCreateOption === CreateOptions.IMPORT_JSON) {\n\t\t\t\t\t// open modal with file upload\n\t\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.IMPORT_JSON_MODAL);\n\t\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (selectedCreateOption === CreateOptions.FROM_SCRATCH) {\n\t\t\t\t\tgenerateFragment();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Next'\n\t\t\tprimaryButtonDisabled={selectedCreateOption === null}\n\t\t\tsecondaryButtonText='Cancel'>\n\t\t\t<p>Start with a template or create a new fragment from scratch.</p>\n\t\t\t<div className={createFragmentTiles}>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => setSelectedCreateOption(CreateOptions.IMPORT_JSON)}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.IMPORT_JSON}\n\t\t\t\t\tlabel='Import JSON' />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => setSelectedCreateOption(CreateOptions.CHOOSE_TEMPLATE)}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.CHOOSE_TEMPLATE}\n\t\t\t\t\tlabel='Pick a template' />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => setSelectedCreateOption(CreateOptions.FROM_SCRATCH)}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.FROM_SCRATCH}\n\t\t\t\t\tlabel='Start from scratch' />\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useEffect } from 'react';\n\nimport { Loading } from 'carbon-components-react';\n\nimport { css } from 'emotion';\nimport { getFragmentPreviewUrl } from '../utils/fragment-tools';\n\nconst fragmentImage = css`\n\twidth: auto;\n\theight: auto;\n\tmax-height: 173px;\n\tmax-width: 333px;\n\tdisplay: block;\n\tpadding-top: 8px;\n`;\nconst imagePlaceholderStyle = css`\n\theight: 173px;\n`;\nconst spinner = css`\n\tposition: absolute;\n\ttop: calc(50% - 44px - 32px);\n\twidth: calc(100% - 16px);\n\n\t.bx--loading {\n\t\tmargin: auto;\n\t}\n`;\n\nexport const FragmentPreview = ({ fragment, previewUrl, setPreviewUrl }: any) => {\n\tconst updatePreviewUrl = async () => {\n\t\tif (setPreviewUrl) {\n\t\t\tsetPreviewUrl(await getFragmentPreviewUrl(fragment));\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tupdatePreviewUrl();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [fragment]);\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tpreviewUrl\n\t\t\t\t\t? <img\n\t\t\t\t\t\tloading='lazy'\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\t\talt={`fragment preview: ${fragment.title}`} />\n\t\t\t\t\t: <div className={imagePlaceholderStyle} />\n\t\t\t}\n\t\t\t<div className={spinner}>\n\t\t\t\t<Loading withOverlay={false} active={!previewUrl} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSkeletonText,\n\tTile\n} from 'carbon-components-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { FragmentPreview } from '../../components/fragment-preview';\nimport { getFragmentPreviewUrl } from '../../utils/fragment-tools';\nimport './fragment-tile.scss';\n\nexport const FragmentTile = ({\n\tfragment,\n\ttitle,\n\tto,\n\tlastModified,\n\tsetModalFragment\n}: any) => {\n\tconst history = useHistory();\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\tconst handleModalState = (modalAction: ModalActionType) => {\n\t\tsetModalFragment(fragment);\n\t\tdispatchModal({\n\t\t\ttype: modalAction,\n\t\t\tid: fragment.id\n\t\t});\n\t};\n\n\tconst resetPreview = async () => setPreviewUrl(await getFragmentPreviewUrl(fragment) as string);\n\n\treturn (\n\t\t<div className='tile-wrapper'>\n\t\t\t<Tile className='tile-style' >\n\t\t\t\t<div className='tile-inner-wrapper'>\n\t\t\t\t\t<Link to={to}>\n\t\t\t\t\t\t<FragmentPreview\n\t\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\t\tpreviewUrl={previewUrl}\n\t\t\t\t\t\t\tsetPreviewUrl={setPreviewUrl} />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className='fragment-info'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to={to} className='dashboard-link'>\n\t\t\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span>{lastModified ? lastModified : 'Last modified date unknown'}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<OverflowMenu\n\t\t\t\t\t\tclassName='fragment-overflow'\n\t\t\t\t\t\tariaLabel='Fragment options'\n\t\t\t\t\t\ticonDescription=''\n\t\t\t\t\t\tonClick={(event: { stopPropagation: () => void }) => event.stopPropagation()}>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Edit'\n\t\t\t\t\t\t\t\tonClick={() => history.push(`/edit/${fragment.id}`)} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Export'\n\t\t\t\t\t\t\t\tonClick={() => handleModalState(ModalActionType.setShareModal)} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Duplicate'\n\t\t\t\t\t\t\t\tonClick={() => handleModalState(ModalActionType.setDuplicationModal)} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Reset preview'\n\t\t\t\t\t\t\t\tonClick={resetPreview} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Remove'\n\t\t\t\t\t\t\t\tonClick={() => handleModalState(ModalActionType.setDeletionModal)}\n\t\t\t\t\t\t\t\tisDelete />\n\t\t\t\t\t\t</OverflowMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Tile>\n\t\t</div>\n\t);\n};\n\nexport const SkeletonFragmentTile = () => (\n\t<div className='tile-wrapper'>\n\t\t<Tile>\n\t\t\t<div className='tile-inner-wrapper-base'>\n\t\t\t\t<SkeletonText heading width='150px' />\n\t\t\t</div>\n\t\t</Tile>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { FragmentTile } from './fragment-tile';\n\n// import the img placeholder svg\nimport placeholder from './../../assets/dashboard-empty-state.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 150px;\n\talign-items: center;\n`;\n\nconst fragmentRowWrapper = css`\n\tmargin-top: 3rem;\n\tbackground: #f4f4f4;\n\tmin-width: 100%;\n\theight: 100%\n`;\n\nexport const FragmentTileList = ({ fragments, loaded, setModalFragment }: any) => {\n\tconst getTilesOrPlaceholder = () => {\n\t\tif ((!fragments || fragments.length === 0) && loaded) {\n\t\t\treturn (\n\t\t\t\t<div className={placeholderContainer}>\n\t\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t<img alt=\"No fragments exist\" src={placeholder} className={svgStyle} />\n\t\t\t\t\t\t<h3>You have no fragments here.</h3>\n\t\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\t\tTo build a new fragment, click <strong>New Fragment</strong>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn fragments.map((v: any) => (\n\t\t\t<FragmentTile\n\t\t\t\tkey={v.id}\n\t\t\t\t{...v}\n\t\t\t\tfragment={v}\n\t\t\t\tto={`/edit/${v.id}`}\n\t\t\t\t{...v.lastModified}\n\t\t\t\tsetModalFragment={setModalFragment}/>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className={fragmentRowWrapper}>\n\t\t\t{getTilesOrPlaceholder()}\n\t\t</div>\n\t);\n};\n","import { getRandomId } from '../../../utils/fragment-tools';\n\nexport const generateNewFragment = (\n\tfragment: any\n) => {\n\tconst fragmentID = getRandomId();\n\tconst fragmentName = 'New fragment';\n\n\treturn {\n\t\tid: fragmentID,\n\t\tlastModified: new Date().toISOString(),\n\t\ttitle: fragmentName,\n\t\tdata: fragment\n\t};\n};\n","import React, { useState } from 'react';\n\nimport { CreateFragmentModal } from './create-fragment-modal';\nimport { ChooseFragmentModal } from './choose-fragment-modal';\nimport { ImportJsonModal } from './import-json-modal';\n\nexport enum FragmentWizardModals {\n\tCREATE_FRAGMENT_MODAL,\n\tCHOOSE_FRAGMENT_MODAL,\n\tIMPORT_JSON_MODAL\n}\n\nexport const FragmentWizard = ({ shouldDisplay, setShouldDisplay }: any) => {\n\t// These are states which are shared amongst the three modals.\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<FragmentWizardModals | null>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t// This is used to indicate which modal was last visited and is used to go go back to the\n\t// correct previous modal.\n\tconst [lastVisitedModal, setLastVisitedModal]\n\t\t= useState<FragmentWizardModals>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\tconst [uploadedData, setUploadedData] = useState<any>({});\n\n\tconst modalSwitcher = () => {\n\t\tif (!shouldDisplay) {\n\t\t\treturn null;\n\t\t}\n\t\tswitch(displayedModal) {\n\t\t\tcase FragmentWizardModals.IMPORT_JSON_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ImportJsonModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CREATE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<CreateFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CHOOSE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ChooseFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData} />\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn modalSwitcher();\n};\n","import React, { useState } from 'react';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nimport { FragmentPreview } from '../../../components/fragment-preview';\nimport './choose-fragment-modal.scss';\n\nexport const ChooseFragmentModalTile = ({ fragment, selectedFragment, setSelectedFragment }: any) => {\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\n\treturn (\n\t\t<div className='modal-tile-wrapper' key={fragment.id}>\n\t\t\t<SelectableTile\n\t\t\t\tclassName='tile-style'\n\t\t\t\tonClick={() => setSelectedFragment(fragment)}\n\t\t\t\tselected={fragment === selectedFragment}>\n\t\t\t\t<div className='tile-inner-wrapper'>\n\t\t\t\t\t<FragmentPreview\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tpreviewUrl={previewUrl}\n\t\t\t\t\t\tsetPreviewUrl={setPreviewUrl} />\n\t\t\t\t\t<h3>{fragment.title}</h3>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{fragment.lastModified || 'Last modified date unknown'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</SelectableTile>\n\t\t</div>\n\t);\n};\n","import React, { useContext, useState } from 'react';\n\nimport {\n\tModal,\n\tInlineNotification,\n\tNotificationActionButton\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\n\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\nimport { warningNotificationProps } from '../../../utils/file-tools';\nimport { Col } from '../../../components';\nimport { getFragmentDuplicate, getFragmentTemplates } from '../../../utils/fragment-tools';\nimport './choose-fragment-modal.scss';\nimport { ChooseFragmentModalTile } from './choose-fragment-modal-tile';\n\nexport interface ChooseFragmentModalProps {\n\tshouldDisplay: boolean;\n\tsetShouldDisplay: (shouldDisplay: boolean) => void;\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void;\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void;\n\tlastVisitedModal: FragmentWizardModals;\n\tuploadedData: any;\n\tsetUploadedData: (uploadedData: any) => void;\n}\n\nexport const ChooseFragmentModal = (props: ChooseFragmentModalProps) => {\n\tconst [selectedFragment, setSelectedFragment] = useState<any>(null);\n\tconst { fragments, addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tif (selectedFragment === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentCopy = getFragmentDuplicate(\n\t\t\tfragments,\n\t\t\tselectedFragment,\n\t\t\t// When a new fragment is created from an existing template, it shouldn't\n\t\t\t// be a template by default.\n\t\t\t{ labels: selectedFragment?.labels?.filter((label: string) => label !== 'template') }\n\t\t);\n\n\t\taddFragment(fragmentCopy);\n\t\thistory.push(`/edit/${fragmentCopy.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tsize='lg'\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => props.setShouldDisplay(false)}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Done'\n\t\t\tprimaryButtonDisabled={!selectedFragment}\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t{\n\t\t\t\tprops.uploadedData.wasDataModified\n\t\t\t\t\t? <InlineNotification\n\t\t\t\t\t\t{...warningNotificationProps}\n\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<NotificationActionButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tUse demo data\n\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprops.uploadedData && props.uploadedData.originalData\n\t\t\t\t\t\t\t\t\t&& <NotificationActionButton\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\t\tdata: props.uploadedData.originalData,\n\t\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tUse unmodified data\n\t\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t} />\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<p>Choose a type of fragment and click done to start editing your new fragment</p>\n\t\t\t<div className='fragment-options'>\n\t\t\t\t<Col cols={{\n\t\t\t\t\tsm: 12,\n\t\t\t\t\tmd: 12,\n\t\t\t\t\tlg: 12\n\t\t\t\t}}>\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFragmentTemplates(fragments).map((fragment: any) => (\n\t\t\t\t\t\t\t<ChooseFragmentModalTile\n\t\t\t\t\t\t\t\tkey={fragment.id}\n\t\t\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\t\t\tselectedFragment={selectedFragment}\n\t\t\t\t\t\t\t\tsetSelectedFragment={setSelectedFragment} />\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Col>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { css } from 'emotion';\nimport {\n\tModal,\n\tFormItem,\n\tFileUploaderDropContainer,\n\tFileUploaderItem,\n\tTextArea\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\nimport { generateNewFragment } from './generate-new-fragment';\n\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\n\nconst fragmentOptions = css`\n\tmargin-left: 30px;\n\tmargin-right: 30px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\n\t// This is the viewport width that causes the selection tiles to overlap.\n\t@media screen and (max-width: 45rem) {\n\t\tflex-direction: column;\n\t}\n`;\n\nexport interface ImportJsonModalProps {\n\tshouldDisplay: boolean;\n\tsetShouldDisplay: (shouldDisplay: boolean) => void;\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void;\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void;\n\tlastVisitedModal: FragmentWizardModals;\n\tuploadedData: any;\n\tsetUploadedData: (uploadedData: any) => void;\n\tmultiple?: boolean;\n}\n\nlet lastId = 0;\n\nconst uid = (prefix = 'id') => {\n\tlastId++;\n\treturn `${prefix}${lastId}`;\n};\n\nexport const ImportJsonModal = (props: ImportJsonModalProps) => {\n\tconst { addFragment } = useContext(GlobalStateContext);\n\tconst [files, setFiles] = useState([] as any[]);\n\tconst [jsonString, _setJsonString] = useState('');\n\tconst [fragmentJson, setFragmentJson] = useState('');\n\tconst [jsonParseError, setJsonParseError] = useState('');\n\n\tconst setJsonString = (js: string) => {\n\t\t_setJsonString(js);\n\n\t\ttry {\n\t\t\tif (js) {\n\t\t\t\tsetFragmentJson(JSON.parse(js));\n\t\t\t}\n\t\t\tsetJsonParseError('');\n\t\t} catch (e) {\n\t\t\tsetJsonParseError((e as any).toString());\n\t\t}\n\t};\n\n\tconst handleDrop = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tconst handleDragover = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('drop', handleDrop);\n\t\tdocument.addEventListener('dragover', handleDragover);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('drop', handleDrop);\n\t\t\tdocument.removeEventListener('dragover', handleDragover);\n\t\t};\n\t}, []);\n\n\tconst history = useHistory();\n\tconst uploadFile = async (fileToUpload: any) => {\n\t\t// file size validation\n\t\tif (fileToUpload.filesize > 512000) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'File size exceeds limit',\n\t\t\t\terrorBody: '500kb max file size. Select a new file and try again.'\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// file type validation\n\t\tif (fileToUpload.invalidFileType) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'Invalid file type',\n\t\t\t\terrorBody: `\"${fileToUpload.name}\" does not have a valid file type.`\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// reading\n\t\tconst reader = new FileReader();\n\t\treader.readAsText(fileToUpload.file, 'UTF-8');\n\t\treader.onload = (event) => {\n\t\t\tsetJsonString(event.target?.result as string);\n\t\t};\n\t\treader.onerror = function (_) {\n\t\t\tconsole.log('oops');\n\t\t};\n\n\t\tconst updatedFile = {\n\t\t\t...fileToUpload,\n\t\t\tstatus: 'complete',\n\t\t\ticonDescription: 'Upload complete'\n\t\t};\n\t\tsetFiles((files) =>\n\t\t\tfiles.map((file) =>\n\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t)\n\t\t);\n\n\t\t// show x icon after 1 second\n\t\tsetTimeout(() => {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file'\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t}, 1000);\n\t};\n\n\tconst onAddFiles = useCallback(\n\t\t(evt, { addedFiles }) => {\n\t\t\tevt.stopPropagation();\n\t\t\tconst newFiles = addedFiles.map((file: any) => ({\n\t\t\t\tuuid: uid(),\n\t\t\t\tfile: file,\n\t\t\t\tname: file.name,\n\t\t\t\tfilesize: file.size,\n\t\t\t\tstatus: 'uploading',\n\t\t\t\ticonDescription: 'Uploading',\n\t\t\t\tinvalidFileType: file.invalidFileType\n\t\t\t}));\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\tif (props.multiple) {\n\t\t\t\tsetFiles([...files, ...newFiles]);\n\t\t\t\tnewFiles.forEach(uploadFile);\n\t\t\t} else if (newFiles[0]) {\n\t\t\t\tsetFiles([newFiles[0]]);\n\t\t\t\tuploadFile(newFiles[0]);\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[files, props.multiple]\n\t);\n\n\tconst handleFileUploaderItemClick = useCallback(\n\t\t(_, { uuid: clickedUuid }) =>\n\t\t\tsetFiles(files.filter(({ uuid }) => clickedUuid !== uuid)),\n\t\t[files]\n\t);\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(fragmentJson);\n\n\t\taddFragment(generateFragment);\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => props.setShouldDisplay(false)}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Import JSON'\n\t\t\tprimaryButtonText='Done'\n\t\t\tprimaryButtonDisabled={!jsonString || jsonParseError}\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t<div className={fragmentOptions}>\n\t\t\t\t<FormItem>\n\t\t\t\t\t<p className='bx--file--label'>Upload file</p>\n\t\t\t\t\t<p className='bx--label-description'>\n\t\t\t\t\t\tMax file size is 500kb. Supported file type is .json\n\t\t\t\t\t</p>\n\t\t\t\t\t<FileUploaderDropContainer accept={['.json']} onAddFiles={onAddFiles} />\n\t\t\t\t\t<div className={'bx--file-container'} style={{ width: '100%' }}>\n\t\t\t\t\t\t{files.map(\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\tuuid,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tfilesize,\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\ticonDescription,\n\t\t\t\t\t\t\t\tinvalid,\n\t\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<FileUploaderItem\n\t\t\t\t\t\t\t\t\tkey={uid()}\n\t\t\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t\t\t\tuuid={uuid}\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tfilesize={filesize}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t\t\t\t\t\tsize={500}\n\t\t\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t\t\t\ticonDescription={iconDescription}\n\t\t\t\t\t\t\t\t\tinvalid={invalid}\n\t\t\t\t\t\t\t\t\tonDelete={handleFileUploaderItemClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</FormItem>\n\t\t\t\t<code style={{ color: '#a00', marginBottom: '10pt', width: '100%' }}>\n\t\t\t\t\t<pre>{jsonParseError}</pre>\n\t\t\t\t</code>\n\t\t\t\t<TextArea\n\t\t\t\t\tlabelText='JSON to load'\n\t\t\t\t\tplaceholder=\"{'your': 'json', 'goes': 'here'}\"\n\t\t\t\t\thelperText=''\n\t\t\t\t\tvalue={jsonString}\n\t\t\t\t\tonChange={(event: any) => setJsonString(event.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, {\n\tuseState,\n\tuseContext,\n\tuseEffect\n} from 'react';\nimport { css } from 'emotion';\nimport { DashboardSearch, SortDirection } from './dashboard-search';\nimport { FragmentGroupDisplayed, DashboardHeader } from './dashboard-header';\n\nimport {\n\tCol,\n\tMain,\n\tRow\n} from './../../components';\nimport { FragmentTileList } from './fragment-tile-list';\nimport { FragmentWizard } from './fragment-wizard/fragment-wizard';\nimport { FragmentModal } from '../edit/fragment-modal';\nimport { GlobalStateContext } from '../../context';\nimport { getFragmentTemplates } from '../../utils/fragment-tools';\n\nconst fragmentSort = (sortDirection: SortDirection) => function(a: any, b: any) {\n\tif (sortDirection === SortDirection.Descending) {\n\t\treturn Date.parse(a.lastModified) - Date.parse(b.lastModified);\n\t}\n\treturn Date.parse(b.lastModified) - Date.parse(a.lastModified);\n};\n\n// styles for the header (title and content switcher)\n// to override carbon styling for <main>\nconst headerRowSyles = css`\n\tbackground: white;\n\tpadding: 0 2rem;\n\tmargin: 0 -2rem;\n\tpadding-top: 2rem;\n\tmargin-top: -2rem;\n\t.bx--col {\n\t\tpadding: 0;\n\t}\n`;\n\n// additional styles for the search row\nconst searchRowStyles = css`\n\tpadding-right: 0;\n\tpadding-left: 1rem;\n\tmargin: 0 -2rem;\n\tborder-bottom: 1px solid #d6d6d6;\n\t.bx--col {\n\t\tpadding-right: 0;\n\t}\n`;\n\nexport const Dashboard = () => {\n\tconst { fragments, updateFragments } = useContext(GlobalStateContext);\n\tconst [fragmentGroupDisplayed, setFragmentGroupDisplayed] = useState(FragmentGroupDisplayed.LocalOnly);\n\tconst [fragmentTitleFilter, setFragmentTitleFilter] = useState('');\n\tconst [sortDirection, setSortDirection] = useState(SortDirection.Ascending);\n\tconst [displayWizard, setDisplayWizard] = useState(false);\n\n\tuseEffect(() => {\n\t\tupdateFragments(fragments);\n\t// we don't want to run this effect when fragments change because it creates a loop\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\tdocument.title = 'Carbon Components Builder • UI Fragments Composer';\n\t}, []);\n\n\tconst filterFragments = (fragments: any) => fragments.filter((fragment: any) => fragment?.title?.toLowerCase()\n\t\t?.includes(fragmentTitleFilter.toLowerCase()) && !fragment.hidden)\n\t\t?.sort(fragmentSort(sortDirection));\n\n\tlet displayedFragments;\n\n\tswitch (fragmentGroupDisplayed) {\n\t\tcase FragmentGroupDisplayed.Templates: {\n\t\t\tdisplayedFragments = filterFragments(getFragmentTemplates(fragments));\n\t\t\tbreak;\n\t\t}\n\t\tcase FragmentGroupDisplayed.AllFragments:\n\t\tdefault:\n\t\t\tdisplayedFragments = filterFragments(fragments);\n\t\t\tbreak;\n\t}\n\tconst [modalFragment, setModalFragment] = useState<any>(null);\n\n\treturn (\n\t\t<>\n\t\t\t<Main style={{ marginLeft: '0px' }}>\n\t\t\t\t<Row styles={headerRowSyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardHeader\n\t\t\t\t\t\t\tonDisplayedSwitchHandler={setFragmentGroupDisplayed}\n\t\t\t\t\t\t\tfragmentGroupDisplayed={fragmentGroupDisplayed} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row styles={searchRowStyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardSearch\n\t\t\t\t\t\t\tonSearchHandler={setFragmentTitleFilter}\n\t\t\t\t\t\t\tonSortHandler={setSortDirection}\n\t\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\t\tdisplayWizard={displayWizard}\n\t\t\t\t\t\t\tsetDisplayWizard={setDisplayWizard} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FragmentTileList\n\t\t\t\t\t\t\t\tfragments={displayedFragments}\n\t\t\t\t\t\t\t\tsetModalFragment={setModalFragment} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Main>\n\t\t\t<FragmentWizard\n\t\t\t\tshouldDisplay={displayWizard}\n\t\t\t\tsetShouldDisplay={setDisplayWizard} />\n\t\t\t{modalFragment && <FragmentModal fragment={modalFragment} />}\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport { useHistory } from 'react-router-dom';\nimport { Header } from '../components/header';\n// import the img placeholder svg\nimport placeholder from '../assets/chart-404.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 64px;\n\talign-items: center;\n`;\n\nexport const NotFound = () => {\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className={placeholderContainer}>\n\t\t\t\t<img alt=\"Fragment not found\" src={placeholder} className={svgStyle} />\n\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t<h3>404: Not found</h3>\n\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\tThis page does not exist, click  <strong>Go back</strong><br /> to return.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button style={{ marginTop: '1rem' }} onClick={() => history.goBack()}>Go back</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { ErrorInfo } from 'react';\nimport { NotFound } from './not-found';\n\n/* Currently, there lacks react hooks with equivalent\neffect of getDerivedStateFromError and componentDidCatch,\ncurrent component based on: https://gist.github.com/andywer/800f3f25ce3698e8f8b5f1e79fed5c9c,\nthis should be written once the above hooks mentioned above are released.\n*/\n\ntype ErrorHandler = (error: Error, info: ErrorInfo) => void;\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => React.ReactNode;\n\ntype ErrorState = { error?: Error };\n\nfunction Catch<Props extends {}>(\n\tcomponent: ErrorHandlingComponent<Props>,\n\terrorHandler?: ErrorHandler\n): React.ComponentType<Props> {\n\treturn class Boundary extends React.Component<Props, ErrorState> {\n\t\tstate: ErrorState = { error: undefined };\n\n\t\tstatic getDerivedStateFromError(error: Error) {\n\t\t\treturn { error };\n\t\t}\n\n\t\tcomponentDidCatch(error: Error, info: React.ErrorInfo) {\n\t\t\tif (errorHandler) {\n\t\t\t\terrorHandler(error, info);\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\treturn component(this.props, this.state.error);\n\t\t}\n\t};\n}\n\ntype Props = {\n\tchildren: React.ReactNode;\n};\n\nexport const ErrorBoundary = Catch((props: Props, error?: Error) => {\n\tif (error) {\n\t\treturn <NotFound />;\n\t}\n\treturn <>{props.children}</>;\n});\n","import React, { useState } from 'react';\nimport { HeaderContainer } from 'carbon-components-react';\nimport { Header } from '../components/index';\n\nexport const UIShell = () => {\n\tconst [isSideNavExpanded, setIsSideNavExpanded] = useState(false);\n\n\treturn (\n\t\t<HeaderContainer\n\t\t\trender={() => (\n\t\t\t\t<Header\n\t\t\t\t\tisSideNavExpanded={isSideNavExpanded}\n\t\t\t\t\tsetIsSideNavExpanded={setIsSideNavExpanded} />\n\t\t\t)}\n\t\t/>\n\t);\n};\n","import React from 'react';\nimport {\n\tRoute, BrowserRouter as Router, Switch\n} from 'react-router-dom';\nimport { Notification } from './components/index';\nimport {\n\tDashboard,\n\tEdit,\n\tErrorBoundary,\n\tNotFound\n} from './routes';\nimport { GlobalStateContextProvider } from './context/global-state-context';\nimport { ModalContextProvider } from './context/modal-context';\nimport { NotificationContextProvider } from './context/notification-context';\nimport { UIShell } from './components/ui-shell';\nimport { css } from 'emotion';\n\nconst app = css`\n\tnav.bx--side-nav--expanded + div#edit-content {\n\t\tpadding-left: calc(2.25rem + 16rem);\n\t}\n\t// This is the viewport width that causes the edit header items to overlap\n\t@media screen and (max-width: 38.75rem) {\n\t\tnav.bx--side-nav--expanded + div#edit-content {\n\t\t\tpadding-left: 36px;\n\t\t}\n\t}\n`;\n\nexport const App = () => (\n\t<Router basename='carbon-components-builder'>\n\t\t<div className={app}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<GlobalStateContextProvider>\n\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t<UIShell />\n\t\t\t\t\t\t<Notification />\n\t\t\t\t\t\t<ModalContextProvider>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path='/' exact component={Dashboard} />\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath={['/edit', '/edit/:id']}\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tcomponent={Edit} />\n\t\t\t\t\t\t\t\t<Route path=\"*\" component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</ModalContextProvider>\n\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t</GlobalStateContextProvider>\n\t\t\t</ErrorBoundary>\n\t\t\t<span id=\"forkongithub\">\n\t\t\t\t<a href=\"https://github.com/IBM/carbon-components-builder\">Fork on GitHub</a>\n\t\t\t</span>\n\t\t</div>\n\t</Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// disable eslint beacuse reasons\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.UI_BASE_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if UI_BASE_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.UI_BASE_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line\nconst render = (Component: any) => ReactDOM.render(<Component/>, document.getElementById('root'));\n\nrender(App);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n\tmodule.hot.accept('./app', () => {\n\t\tconsole.info('App updated');\n\t\tconst Next = require('./app').App;\n\t\trender(Next);\n\t});\n}\n"],"sourceRoot":""}