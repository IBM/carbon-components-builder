{
	"name": "bootstrap",
	"styleUrls": [
		"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
	],
	"angular": {
		"dependencies": {
			"bootstrap": "5.3.2"
		},
		"stylePaths": [
			"node_modules/bootstrap/dist/css/bootstrap.min.css"
		],
		"styleImportPaths": [
			"~bootstrap/dist/css/bootstrap.min.css"
		]
	},
	"components": [
		{
			"type": "bs-rating",
			"htmlPreview": "<ngbd-rating-basic><ngb-rating role='slider' aria-valuemin='0' class='d-inline-flex' tabindex='0' aria-valuemax='10' aria-valuenow='8' aria-valuetext='8 out of 10'><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>★ </span><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>★ </span><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>★ </span><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>★ </span><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>☆ </span><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>☆ </span> </ngb-rating><hr><pre>Rate: <b>4</b></pre></ngbd-rating-basic>",
			"inputs": {
				"disabled": "boolean",
				"max": "number",
				"rate": "number",
				"readonly": "boolean",
				"resettable": "boolean"
			},
			"defaultInputs": {
				"rate": "4",
				"max": "6"
			},
			"angular": {
				"inputs": "@Input() {{variableName}}IsResettable = '{{model.resettable}}'; @Input() {{variableName}}IsReadonly = '{{model.readonly}}'; @Input() {{variableName}}Rate = '{{model.rate}}'; @Input() {{variableName}}Max = '{{model.max}}'; @Input() {{variableName}}IsDisabled = '{{model.disabled}}';",
				"outputs": "@Output() {{variableName}}RateChange = new EventEmitter<any>(); @Output() {{variableName}}Hover = new EventEmitter<any>(); @Output() {{variableName}}Leave = new EventEmitter<any>();",
				"template": "<ngb-rating [max]='{{variableName}}Max' {{#if model.disabled}}[disabled]='{{variableName}}IsDisabled'{{/if}} {{#if model.readonly}}[readonly]='{{variableName}}IsReadonly'{{/if}} {{#if model.resettable}}[resettable]='{{variableName}}IsResettable'{{/if}} [(rate)]='{{variableName}}Rate' /><hr /><pre>Rate: <b>{{ model.rate }}</b></pre>"
			},
			"htmlThumbnail": "<ngbd-rating-basic><ngb-rating role='slider' aria-valuemin='0' class='d-inline-flex' tabindex='0' aria-valuemax='10' aria-valuenow='8' aria-valuetext='8 out of 10'><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>★ </span><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>☆ </span><span  style='width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important;'></span><span style='cursor: pointer;'>☆ </span> </ngb-rating><hr><pre>Rate: <b>1</b></pre></ngbd-rating-basic>"
		},
		{
			"type": "bs-nav-item",
			"htmlPreview": "<li style='display: list-item; text-align: -webkit-match-parent;' role='presentation'><button type='button' ngbnavlink id='ngb-nav-207' role='tab' aria-controls='gb-nav-207-panel' aria-selected='true' aria-disabled='false' style='padding: .5rem; color: black; background-color: white; border-color: #dee2e6 #dee2e6 #fff; margin-bottom: calc(-1 * 1px); border: 1px solid transparent; border-left: 1px solid #dee2e6; border-top: 1px solid #dee2e6; border-right: 1px solid #dee2e6; border-top-left-radius: 0.375rem; border-top-right-radius: 0.375rem;'>{{title}}</button></li><div ngbnavpane style='display: block; padding-left: .5rem;' id='ngb-nav-207-panel' role='tabpanel' aria-labelledby='ngb-nav-207'><p>{{description}}</p></div></div></ngbd-nav-basic>",
			"inputs": {
				"title": "string",
				"description": "string",
				"id": "string"
			},
			"defaultInputs": {
				"title": "title",
				"description": "description",
				"id": "sample id"
			},
			"angular": {
				"template": "<li [ngbNavItem]=''><button ngbNavLink>One</button><ng-template ngbNavContent><p>{{model.description}}</p></ng-template></li>"
			},
			"htmlThumbnail": "<p>bs-nav item</p>"
		},
		{
			"type": "bs-nav",
			"htmlPreview": "<ngbd-nav-basic><ul ngbnav style='margin: .5rem .5rem 0 .5rem; border-bottom: 1px solid #dee2e6; border-color: #dee2e6; display: flex; flex-wrap: wrap; padding-left: 0; margin-bottom: 0; list-style: none;' role='tablist'><li style='display: list-item; text-align: -webkit-match-parent;' role='presentation'><button type='button' ngbnavlink id='ngb-nav-207' role='tab' aria-controls='gb-nav-207-panel' aria-selected='true' aria-disabled='false' style='padding: .5rem; color:#0d6efd; background-color: white; border-color: #dee2e6 #dee2e6 #fff; margin-bottom: calc(-1 * 1px); border: 1px solid transparent; border-top-left-radius: 0.375rem; border-top-right-radius: 0.375rem; border-bottom: 1px'>One</button></li><li style='display: list-item; text-align: -webkit-match-parent;' role='presentation'><button type='button' ngbnavlink id='ngb-nav-207' role='tab' aria-controls='gb-nav-207-panel' aria-selected='true' aria-disabled='false' style='padding: .5rem; color: black; background-color: white; border-color: #dee2e6 #dee2e6 #fff; margin-bottom: calc(-1 * 1px); border: 1px solid transparent; border-left: 1px solid #dee2e6; border-top: 1px solid #dee2e6; border-right: 1px solid #dee2e6; border-top-left-radius: 0.375rem; border-top-right-radius: 0.375rem;'>Two</button></li>{{children}}</ul><div style='margin-top: 0.5rem !important;'><div ngbnavpane style='display: block; padding-left: .5rem;' id='ngb-nav-207-panel' role='tabpanel' aria-labelledby='ngb-nav-207'><p>{{description}}</p></div></div></ngbd-nav-basic>",
			"inputs": {
				"activeId": "string",
				"animation": "boolean",
				"destroyOnHide": "boolean",
				"keyboard": {
					"type": "multi-select",
					"items": [
						{
							"id": "true",
							"text": "True"
						},
						{
							"id": "false",
							"text": "False"
						},
						{
							"id": "changeWithArrows",
							"text": "Change with arrows"
						}
					]
				},
				"orientation": {
					"type": "multi-select",
					"items": [
						{
							"id": "horizontal",
							"text": "Horizontal"
						},
						{
							"id": "vertical",
							"text": "Vertical"
						}
					]
				},
				"description": "string"
			},
			"defaultInputs": {
				"keyboard": "true",
				"destroyOnHide": "true",
				"description": "sample description 2",
				"items": []
			},
			"angular": {
				"inputs": "@Input() {{variableName}}Orientation = '{{model.orientation}}'; @Input() {{variableName}}Keyboard = '{{model.keyboard}}'; @Input() {{variableName}}ActiveId = '{{model.activeId}}'; @Input() {{variableName}}IsAnimation = '{{model.animation}}'; @Input() {{variableName}}isDestroyOnHide = '{{model.destroyOnHide}}';",
				"outputs": "@Output() {{variableName}}IsShown = new EventEmitter<any>(); @Output() {{variableName}}NavChange = new EventEmitter<any>(); @Output() {{variableName}}ActiveIdChange = new EventEmitter<any>(); @Output() {{variableName}}IsHidden = new EventEmitter<any>();",
				"template": "<ul ngbNav #nav='ngbNav' {{#if model.destroyOnHide}}[destroyOnHide]='{{variableName}}isDestroyOnHide'{{/if}} {{#if model.animation}}[animation]='{{variableName}}IsAnimation'{{/if}} [Orientation]='{{variableName}}Orientation' [keyboard]='{{variableName}}Keyboard' [(activeId)]='{{variableName}}ActiveId' class='nav-tabs'><li [ngbNavItem]='1'><button ngbNavLink>One</button><ng-template ngbNavContent><p>sample description 1</p></ng-template></li><li [ngbNavItem]='2'><button ngbNavLink>Two</button><ng-template ngbNavContent><p>{{model.description}}</p></ng-template></li>{{children}}</ul>"
			},
			"htmlThumbnail": "<ngbd-nav-basic><ul ngbnav style='margin: .5rem .5rem 0 .5rem; border-bottom: 1px solid #dee2e6; border-color: #dee2e6; display: flex; flex-wrap: wrap; padding-left: 0; margin-bottom: 0; list-style: none;' role='tablist'><li style='display: list-item; text-align: -webkit-match-parent; border-top: 1px solid #dee2e6; border-left: 1px solid #dee2e6; border-right: 1px solid #dee2e6; border-top-left-radius: 0.375rem; border-top-right-radius: 0.375rem;' role='presentation'><button type='button' ngbnavlink id='ngb-nav-207' role='tab' aria-controls='gb-nav-207-panel' aria-selected='true' aria-disabled='false' style='padding: .5rem; color:#0d6efd; background-color: white; border-color: #dee2e6 #dee2e6 #fff; margin-bottom: calc(-1 * 1px); border: 1px solid transparent; border-bottom: 1px'>One</button></li></ul><div style='margin-top: 0.5rem !important;'><div ngbnavpane style='display: block; padding-left: .5rem;' id='ngb-nav-207-panel' role='tabpanel' aria-labelledby='ngb-nav-207'><p>description</p></div></div></ngbd-nav-basic>"
		},
		{
			"type": "bs-collapse",
			"htmlPreview": "<ngbd-collapse-basic><p><button type='button' aria-controls='collapseExample' class='btn btn-outline-primary' aria-expanded='true'> {{title}} </button></p><div class='collapse show' style><div style='position:relative; display:flex; flex-direction:column; min-width:0; color:#212529; word-wrap:break-word; background-clip:border-box; border:1px solid rgba(0, 0, 0, .175); border-radius: 0.375rem;'><div style='flex:1 1 auto; padding: 1rem 1rem;'>{{content}} {{children}}</div></div></div></ngbd-collapse-basic>",
			"inputs": {
				"animation": "boolean",
				"horizontal": "boolean",
				"isCollapsed": "boolean",
				"title": "string",
				"content": "string"
			},
			"defaultInputs": {
				"title": "Collapse",
				"content": "placeholder text or child components",
				"items": []
			},
			"angular": {
				"inputs": "@Input() {{variableName}}Content = '{{model.content}}'; @Input() {{variableName}}Title = '{{model.title}}'; @Input() {{variableName}}IsCollapsed = '{{model.isCollapsed}}'; @Input() {{variableName}}Animation = '{{model.animation}}'; @Input() {{variableName}}Horizontal = '{{model.horizontal}}';",
				"outputs": "@Output() {{variableName}}isHidden = new EventEmitter<any>(); @Output() {{variableName}}isShown = new EventEmitter<any>();",
				"template": "<p><button type='button' class='btn btn-outline-primary' (click)='{{variableName}}isCollapsed = !{{variableName}}isCollapsed' [attr.aria-expanded]='!{{variableName}}isCollapsed' aria-controls='collapseExample'> {{model.title}} </button> </p> <div #collapse='ngbCollapse' [(ngbCollapse)]='{{variableName}}IsCollapsed'> <div class='card'> <div class='card-body'>{{model.content}} {{children}}</div> </div> </div>"
			},
			"htmlThumbnail": "<p><button style='background: white; padding: .375rem .4rem; font-size: 1rem; color: #0d6efd; text-align: center; vertical-align: middle; line-height: .5rem; border: 1px solid #0d6efd; border-radius: .375rem; margin-left: 1px; margin-top: .3rem;'>toggle</button></p><div class='collapse show' style><div style='position:relative; display:flex; flex-direction:column; min-width:0; color:#212529; word-wrap:break-word; background-clip:border-box; border:1px solid rgba(0, 0, 0, .175); border-radius: 0.375rem;'><div style='flex:1 1 auto; padding: .8rem 1rem;'>content</div></div></div>"
		},
		{
			"type": "bs-dropdown",
			"htmlPreview": "<div ngbdropdown class='d-inline-block dropdown'><button type='button'  ngbdropdowntoggle class='dropdown-toggle btn btn-outline-primary' aria-expanded='false'> {{ title }} </button><div ngbdropdownmenu aria-labelledby='dropdownBasic1' class='dropdown-menu' style='position: absolute; inset: 0px auto auto 0px; margin: 0px; transform: translate(0px, 40px);'>{{ children }}</div></div>",
			"inputs": {
				"autoClose": {
					"type": "multi-select",
					"items": [
						{
							"id": "true",
							"text": "True"
						},
						{
							"id": "false",
							"text": "False"
						},
						{
							"id": "inside",
							"text": "Inside"
						},
						{
							"id": "outside",
							"text": "Outside"
						}
					]
				},
				"display": {
					"type": "multi-select",
					"items": [
						{
							"id": "dynamic",
							"text": "Dynamic"
						},
						{
							"id": "static",
							"text": "Static"
						}
					]
				},
				"open": "boolean",
				"placement": {
					"type": "multi-select",
					"items": [
						{
							"id": "top",
							"text": "Top"
						},
						{
							"id": "top-start",
							"text": "Top-start"
						},
						{
							"id": "top-left",
							"text": "Top-left"
						},
						{
							"id": "top-end",
							"text": "Top-end"
						},
						{
							"id": "top-right",
							"text": "Top-right"
						},
						{
							"id": "bottom",
							"text": "Bottom"
						},
						{
							"id": "bottom-start",
							"text": "Bottom-start"
						},
						{
							"id": "bottom-left",
							"text": "Bottom-left"
						},
						{
							"id": "bottom-end",
							"text": "Bottom-end"
						},
						{
							"id": "bottom-right",
							"text": "Bottom-right"
						},
						{
							"id": "start",
							"text": "Start"
						},
						{
							"id": "left",
							"text": "Left"
						},
						{
							"id": "start-top",
							"text": "Start-top"
						},
						{
							"id": "left-top",
							"text": "Left-top"
						},
						{
							"id": "start-bottom",
							"text": "Start-bottom"
						},
						{
							"id": "left-bottom",
							"text": "Left-bottom"
						},
						{
							"id": "end",
							"text": "End"
						},
						{
							"id": "right",
							"text": "Right"
						},
						{
							"id": "end-top",
							"text": "End-top"
						},
						{
							"id": "right-top",
							"text": "Right-top"
						},
						{
							"id": "end-bottom",
							"text": "End-bottom"
						},
						{
							"id": "right-bottom",
							"text": "Right-bottom"
						}
					]
				},
				"title": "string"
			},
			"defaultInputs": {
				"title": "Toggle dropdown",
				"listItems": [
					{
						"id": "action1",
						"text": "Action 1"
					},
					{
						"id": "action2",
						"text": "Action 2"
					}
				]
			},
			"angular": {
				"inputs": "@Input() {{variableName}}Title = '{{model.title}}'; @Input() {{variableName}}Placement = '{{model.placement}}'; @Input() {{variableName}}IsOpen = '{{model.open}}'; @Input() {{variableName}}Display = '{{model.display}}'; @Input() {{variableName}}AutoClose = '{{model.autoClose}}';",
				"outputs": "@Output() {{variableName}}OpenChange = new EventEmitter<any>();",
				"template": "<div ngbDropdown [autoClose]='{{variableName}}AutoClose' [display]='{{variableName}}Display' [open]='{{variableName}}IsOpen' [placement]='{{variableName}}Placement' class='d-inline-block'> <button type='button' class='btn btn-outline-primary' id='dropdownBasic1' ngbDropdownToggle> {{model.title}} </button> <div ngbDropdownMenu aria-labelledby='dropdownBasic1'> {{#each model.listItems}} <button ngbDropdownItem>{{text}}</button> {{/each}} </div>"
			},
			"htmlThumbnail": "<button style='margin-left:-8px; background: transparent; padding: .375rem .75rem; font-size: 1rem; text-align: center; vertical-align: middle; line-height: 1.5rem; border: 1px solid #0d6efd; border-radius: .375rem;  margin-top: 1rem; display: flex; align-items: center; justify-content: center;'><span style='color:#0d6efd'>Dropdown</span><span style='width: 0; height: 0; border: solid 5px; border-color: #0d6efd transparent transparent transparent; margin-left: 5px'></span></button>"
		},
		{
			"type": "bs-progressbar",
			"htmlPreview": "<ngbd-progressbar-basic><ngb-progressbar role='progressbar' aria-valuemin='0' type='success' class='progress' aria-valuenow='25' aria-valuemax='100' aria-label='progress bar'><div class='progress-bar text-bg-success' style='width: 25%;'></div></ngb-progressbar></ngbd-progressbar-basic>",
			"inputs": {
				"animated": "boolean",
				"ariaLabel": "string",
				"height": "string",
				"max": "number",
				"showValue": "boolean",
				"striped": "boolean",
				"value": "number",
				"textType": {
					"type": "multi-select",
					"items": [
						{
							"id": "success",
							"text": "Success"
						},
						{
							"id": "info",
							"text": "Info"
						},
						{
							"id": "warning",
							"text": "Warning"
						},
						{
							"id": "danger",
							"text": "Danger"
						},
						{
							"id": "primary",
							"text": "Primary"
						},
						{
							"id": "secondary",
							"text": "Secondary"
						},
						{
							"id": "light",
							"text": "Light"
						},
						{
							"id": "dark",
							"text": "Dark"
						}
					]
				},
				"category": {
					"type": "multi-select",
					"items": [
						{
							"id": "success",
							"text": "Success"
						},
						{
							"id": "info",
							"text": "Info"
						},
						{
							"id": "warning",
							"text": "Warning"
						},
						{
							"id": "danger",
							"text": "Danger"
						},
						{
							"id": "primary",
							"text": "Primary"
						},
						{
							"id": "secondary",
							"text": "Secondary"
						},
						{
							"id": "light",
							"text": "Light"
						},
						{
							"id": "dark",
							"text": "Dark"
						}
					]
				}
			},
			"defaultInputs": {
				"category": "success",
				"value": 0,
				"max": 100
			},
			"angular": {
				"inputs": "@Input() {{variableName}}Type = '{{model.category}}'; @Input() {{variableName}}TextType = '{{model.textType}}'; @Input() {{variableName}}Value = '{{model.value}}'; @Input() {{variableName}}Striped = '{{model.striped}}'; @Input() {{variableName}}Animated = '{{model.animated}}'; @Input() {{variableName}}AriaLabel = '{{model.ariaLabel}}'; @Input() {{variableName}}Height = '{{model.height}}'; @Input() {{variableName}}Max = '{{model.max}}'; @Input() {{variableName}}ShowValue = '{{model.showValue}}';",
				"outputs": "",
				"template": "<ngb-progressbar [max]='{{variableName}}Max' [height]='{{variableName}}Height' [ariaLabel]='{{variableName}}AriaLabel' [type]='{{variableName}}Category' [textType]='{{variableName}}TextType' [value]='{{variableName}}Value' {{#if model.striped}}[striped]='{{variableName}}Striped'{{/if}} {{#if model.animated}}[animated]='{{variableName}}Animated'{{/if}} {{#if model.showValue}}[showValue]='{{variable}}ShowValue'{{/if}}></ngb-progressbar>"
			},
			"htmlThumbnail": "<div style='margin-top: 1.5rem; background-color: #f1f1f1'><div style=' color: #000 ; background-color: #0dcaf0  ; height:24px;width:60%'></div></div>"
		},
		{
			"type": "bs-alert",
			"htmlPreview": "<ngbd-alert-basic><ngb-alert class='alert alert-warning show fade' role='alert'> {{message}} </ngb-alert></ngbd-alert-basic>",
			"inputs": {
				"animation": "boolean",
				"dismissible": "boolean",
				"message": "string",
				"category": {
					"type": "multi-select",
					"items": [
						{
							"id": "success",
							"text": "Success"
						},
						{
							"id": "info",
							"text": "Info"
						},
						{
							"id": "warning",
							"text": "Warning"
						},
						{
							"id": "danger",
							"text": "Danger"
						},
						{
							"id": "primary",
							"text": "Primary"
						},
						{
							"id": "secondary",
							"text": "Secondary"
						},
						{
							"id": "light",
							"text": "Light"
						},
						{
							"id": "dark",
							"text": "Dark"
						}
					]
				}
			},
			"defaultInputs": {
				"category": "warning",
				"message": "Alert"
			},
			"angular": {
				"inputs": "@Input() {{variableName}}Animation = '{{model.animation}}'; @Input() {{variableName}}Dismissible = '{{model.dismissible}}'; @Input() {{variableName}}Message = '{{model.message}}'; @Input() {{variableName}}Type = '{{model.category}}';",
				"outputs": "@Output() {{variableName}}isClosed = new EventEmitter<any>();",
				"template": "<ngb-alert {{#if model.animation}}[animation]='{{variableName}}Animation'{{/if}} {{#if model.dismissible}}[dismissible]='{{variableName}}Dismissible'{{/if}}  [type]='{{variableName}}Type' class='alert alert-warning show fade' role='alert'> {{model.message}} </ngb-alert>"
			},
			"htmlThumbnail": "<button style='background: #fff3cd; padding: .375rem .75rem; font-size: 1rem; text-align: center; vertical-align: middle; line-height: 1.5rem; border: 1px solid #ffc107; border-radius: .375rem;  margin-top: .5rem;' {{#if disabled}}disabled{{/if}}>{{message}}: Message</button>"
		},
		{
			"type": "bs-popover",
			"htmlPreview": "<button class='btn btn-outline-secondary'> {{title}} </button>",
			"inputs": {
				"triggers": "string",
				"placement": {
					"type": "multi-select",
					"items": [
						{
							"id": "top",
							"text": "Top"
						},
						{
							"id": "top-start",
							"text": "Top-start"
						},
						{
							"id": "top-left",
							"text": "Top-left"
						},
						{
							"id": "top-end",
							"text": "Top-end"
						},
						{
							"id": "top-right",
							"text": "Top-right"
						},
						{
							"id": "bottom",
							"text": "Bottom"
						},
						{
							"id": "bottom-start",
							"text": "Bottom-start"
						},
						{
							"id": "bottom-left",
							"text": "Bottom-left"
						},
						{
							"id": "bottom-end",
							"text": "Bottom-end"
						},
						{
							"id": "bottom-right",
							"text": "Bottom-right"
						},
						{
							"id": "start",
							"text": "Start"
						},
						{
							"id": "left",
							"text": "Left"
						},
						{
							"id": "start-top",
							"text": "Start-top"
						},
						{
							"id": "left-top",
							"text": "Left-top"
						},
						{
							"id": "start-bottom",
							"text": "Start-bottom"
						},
						{
							"id": "left-bottom",
							"text": "Left-bottom"
						},
						{
							"id": "end",
							"text": "End"
						},
						{
							"id": "right",
							"text": "Right"
						},
						{
							"id": "end-top",
							"text": "End-top"
						},
						{
							"id": "right-top",
							"text": "Right-top"
						},
						{
							"id": "end-bottom",
							"text": "End-bottom"
						},
						{
							"id": "right-bottom",
							"text": "Right-bottom"
						}
					]
				},
				"openDelay": "number",
				"title": "string",
				"description": "string",
				"closeDelay": "number"
			},
			"defaultInputs": {
				"placement": "bottom",
				"title": "Popover"
			},
			"angular": {
				"inputs": "@Input() {{variableName}}CloseDelay = '{{model.closeDelay}}'; @Input() {{variableName}}Triggers = '{{model.triggers}}'; @Input() {{variableName}}Placement = '{{model.placement}}'; @Input() {{variableName}}OpenDelay = '{{model.openDelay}}'; @Input() {{variableName}}Title = '{{model.title}}'; @Input() {{variableName}}Description = '{{model.description}}'; ",
				"outputs": "@Output() {{variableName}}hidden = new EventEmitter<any>(); @Output() {{variableName}}shown = new EventEmitter<any>();",
				"template": "<button [ngbPopover]='{{variableName}}Description' class='btn btn-outline-secondary' {{#if model.openDelay}}[openDelay]='{{variableName}}OpenDelay'{{/if}} {{#if model.closeDelay}}[closeDelay]={{variableName}}CloseDelay{{/if}} {{#if model.triggers}}[triggers]='{{variableName}}Triggers'{{/if}} [placement]='{{variableName}}Placement' {{#if model.disabled}}disablePopover{{/if}}>{{model.title}}</button>"
			},
			"htmlThumbnail": "<button style='background: white; padding: .375rem .75rem; font-size: 1rem; color: #6c757d; text-align: center; vertical-align: middle; line-height: 1.5rem; border: 1px solid #6c757d; border-radius: .375rem; margin-left: 5px; margin-top: 1rem;' {{#if disabled}}disabled{{/if}}>{{title}}</button>"
		},
		{
			"type": "bs-tooltip",
			"htmlPreview": "<button {{#if disabled}}disabled{{/if}} type=\"button\" class=\"btn btn-outline-secondary me-2\">{{text}}</button>",
			"inputs": {
				"animation": "boolean",
				"autoClose": "boolean",
				"closeDelay": "number",
				"openDelay": "number",
				"placement": {
					"type": "multi-select",
					"items": [
						{
							"id": "top",
							"text": "Top"
						},
						{
							"id": "top-start",
							"text": "Top-start"
						},
						{
							"id": "top-left",
							"text": "Top-left"
						},
						{
							"id": "top-end",
							"text": "Top-end"
						},
						{
							"id": "top-right",
							"text": "Top-right"
						},
						{
							"id": "bottom",
							"text": "Bottom"
						},
						{
							"id": "bottom-start",
							"text": "Bottom-start"
						},
						{
							"id": "bottom-left",
							"text": "Bottom-left"
						},
						{
							"id": "bottom-end",
							"text": "Bottom-end"
						},
						{
							"id": "bottom-right",
							"text": "Bottom-right"
						},
						{
							"id": "start",
							"text": "Start"
						},
						{
							"id": "left",
							"text": "Left"
						},
						{
							"id": "start-top",
							"text": "Start-top"
						},
						{
							"id": "left-top",
							"text": "Left-top"
						},
						{
							"id": "start-bottom",
							"text": "Start-bottom"
						},
						{
							"id": "left-bottom",
							"text": "Left-bottom"
						},
						{
							"id": "end",
							"text": "End"
						},
						{
							"id": "right",
							"text": "Right"
						},
						{
							"id": "end-top",
							"text": "End-top"
						},
						{
							"id": "right-top",
							"text": "Right-top"
						},
						{
							"id": "end-bottom",
							"text": "End-bottom"
						},
						{
							"id": "right-bottom",
							"text": "Right-bottom"
						}
					]
				},
				"disabled": "boolean",
				"text": "string",
				"triggers": "string",
				"tooltip": "string"
			},
			"defaultInputs": {
				"placement": "bottom",
				"text": "Tooltip"
			},
			"angular": {
				"inputs": "@Input() {{variableName}}Text = '{{model.text}}'; @Input() {{variableName}}Triggers = '{{model.triggers}}'; @Input() {{variableName}}Tooltip = '{{model.tooltip}}'; @Input() {{variableName}}Disabled = '{{model.disabled}}'; @Input() {{variableName}}Placement = '{{model.placement}}'; @Input() {{variableName}}Animation = '{{model.animation}}'; @Input() {{variableName}}AutoClose = '{{model.autoClose}}'; @Input() {{variableName}}CloseDelay = '{{model.closeDelay}}'; @Input() {{variableName}}OpenDelay = '{{model.openDelay}}';",
				"outputs": "@Output() {{variableName}}hidden = new EventEmitter<any>(); @Output() {{variableName}}shown = new EventEmitter<any>();",
				"template": "<button [ngbtooltip]='{{variableName}}Tooltip' class='btn btn-outline-secondary' {{#if model.openDelay}}[openDelay]='{{variableName}}OpenDelay'{{/if}} {{#if model.closeDelay}}[closeDelay]='{{variableName}}CloseDelay'{{/if}} {{#if model.triggers}}[triggers]='{{variableName}}Triggers'{{/if}} [placement]='{{variableName}}Placement' {{#if model.disabled}}disableTooltip{{/if}} >{{model.text}}</button>"
			},
			"htmlThumbnail": "<button style='background: white; padding: .375rem .75rem; font-size: 1rem; color: #6c757d; text-align: center; vertical-align: middle; line-height: 1.5rem; border: 1px solid #6c757d; border-radius: .375rem; margin-left: 10px; margin-top: 1rem;' {{#if disabled}}disabled{{/if}}>{{text}}</button>"
		},
		{
			"type": "bs-button",
			"htmlPreview": "<button className='btn btn-{{kind}}' {{#if disabled}}disabled{{/if}}>{{text}} - {{size}}</button>",
			"inputs": {
				"text": "string",
				"disabled": "boolean",
				"size": "number",
				"kind": {
					"type": "multi-select",
					"items": [
						{
							"id": "primary",
							"text": "Primary"
						},
						{
							"id": "secondary",
							"text": "Secondary"
						},
						{
							"id": "success",
							"text": "Success"
						},
						{
							"id": "danger",
							"text": "Danger"
						},
						{
							"id": "warning",
							"text": "Warning"
						},
						{
							"id": "info",
							"text": "Info"
						},
						{
							"id": "light",
							"text": "Light"
						},
						{
							"id": "dark",
							"text": "Dark"
						},
						{
							"id": "link",
							"text": "Link"
						}
					]
				}
			},
			"defaultInputs": {
				"text": "Button",
				"kind": "primary"
			},
			"angular": {
				"inputs": "@Input() {{variableName}}Label = \"{{model.label}}\";",
				"outputs": "@Output() {{variableName}}Change = new EventEmitter<any>();",
				"template": "<button class='btn btn-{{model.kind}}' [label]=\"{{variableName}}Label\" {{#if model.disabled}}disabled{{/if}}>{{model.text}} - {{model.size}}</button>"
			},
			"htmlThumbnail": "<button style='background: #0d6efd; padding: .375rem .75rem; font-size: 1rem; color: #fff; text-align: center; vertical-align: middle; line-height: 1.5rem; border: 1px solid #0d6efd; border-radius: .375rem; margin-left: 10px; margin-top: 1rem;' {{#if disabled}}disabled{{/if}}>{{text}}</button>"
		}
	]
}