{"version":3,"sources":["assets/component-icons/button.svg","assets/component-icons/accordion.svg","assets/component-icons/accordion-item.svg","assets/component-icons/checkbox.svg","assets/component-icons/combobox.svg","assets/component-icons/dropdown.svg","assets/component-icons/grid.svg","assets/component-icons/number-input.svg","assets/component-icons/progress-indicator.svg","assets/component-icons/tag.svg","assets/component-icons/search.svg","assets/component-icons/text.svg","assets/component-icons/text-area.svg","assets/component-icons/text-input.svg","assets/component-icons/link.svg","assets/component-icons/tile.svg","assets/component-icons/tile-clickable.svg","assets/component-icons/tile-expandable.svg","assets/component-icons/tile-selectable.svg","assets/component-icons/tile-selectable-group.svg","assets/component-icons/tile-radio.svg","assets/dashboard-empty-state.svg","assets/chart-404.svg","routes/edit/tools.ts","context/global-state-context.tsx","context/notification-context.tsx","context/fragments-context-helper.ts","fragment-components/a-component.tsx","components/css-class-selector.tsx","utils/fragment-tools.ts","fragment-components/accordion/a-accordion.tsx","fragment-components/accordion/a-accordion-item.tsx","fragment-components/a-button.tsx","fragment-components/a-checkbox.tsx","fragment-components/a-column.tsx","fragment-components/a-combobox.tsx","fragment-components/a-dropdown.tsx","fragment-components/a-fragment.tsx","fragment-components/a-grid.tsx","fragment-components/a-numberinput.tsx","fragment-components/a-progress-indicator.tsx","fragment-components/a-row.tsx","fragment-components/a-tag.tsx","fragment-components/a-searchinput.tsx","fragment-components/a-text.tsx","fragment-components/a-textarea.tsx","fragment-components/a-textinput.tsx","fragment-components/a-link.tsx","fragment-components/tiles/tile-morphism.tsx","fragment-components/tiles/a-tile.tsx","fragment-components/tiles/a-clickable-tile.tsx","fragment-components/tiles/a-expandable-tile.tsx","fragment-components/tiles/a-tile-fold.tsx","fragment-components/tiles/a-selectable-tile.tsx","fragment-components/tiles/a-selectable-tile-group.tsx","fragment-components/tiles/a-radio-tile.tsx","fragment-components/tiles/a-radio-tile-group.tsx","fragment-components/index.ts","components/adder.tsx","components/header.tsx","components/header-menu-item-link.tsx","context/modal-context.tsx","components/link-button.tsx","styles.ts","components/main.tsx","components/fragment.tsx","components/grid.tsx","components/notification.tsx","components/draggable-list.tsx","routes/edit/index.tsx","routes/edit/duplicate-fragment-modal.tsx","routes/edit/delete-fragment-modal.tsx","routes/edit/share-options/exports/create-fragment-sandbox.ts","routes/edit/share-options/exports/frameworks/react-fragment.ts","routes/edit/share-options/exports/frameworks/angular-fragment.ts","utils/file-tools.ts","routes/edit/share-options/exports/export-image-component.tsx","routes/edit/share-options/exports/export-modal.tsx","routes/edit/fragment-modal.tsx","routes/edit/edit-header.tsx","components/element-tile.tsx","routes/edit/elements-pane.tsx","routes/edit/style-pane.tsx","routes/edit/code-pane.tsx","routes/edit/selected-component-breadcrumbs.tsx","routes/edit/settings-context-pane.tsx","routes/edit/code-context-pane.tsx","routes/dashboard/dashboard-search.tsx","routes/dashboard/dashboard-header.tsx","routes/dashboard/fragment-wizard/create-fragment-modal.tsx","components/fragment-preview.tsx","routes/dashboard/fragment-tile.tsx","routes/dashboard/fragment-tile-list.tsx","components/selection-tile.tsx","routes/dashboard/fragment-wizard/generate-new-fragment.ts","routes/dashboard/fragment-wizard/fragment-wizard.tsx","routes/dashboard/fragment-wizard/choose-fragment-modal-tile.tsx","routes/dashboard/fragment-wizard/choose-fragment-modal.tsx","routes/dashboard/fragment-wizard/import-json-modal.tsx","routes/dashboard/index.tsx","routes/not-found.tsx","routes/error-boundary.tsx","components/ui-shell.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","drag","event","dragObj","stopPropagation","dataTransfer","setData","JSON","stringify","GlobalStateContext","createContext","displayName","NotificationActionType","useFragment","id","context","useContext","history","useHistory","console","info","_","fragments","updateFragment","pathSegments","location","pathname","split","length","find","fragment","GlobalStateContextProvider","localFragments","children","useState","parse","localStorage","getItem","Array","isArray","filter","_setFragments","actionHistory","setActionHistory","actionHistoryIndex","setActionHistoryIndex","styleClasses","_setStyleClasses","settings","_setSettings","setFragments","frags","setItem","addAction","action","newActionHistoryIndex","actionClone","slice","setStyleClasses","sc","updateActionHistory","csString","canUndo","updatedFragments","map","f","assign","setAction","newIndex","canRedo","fragmentHelpers","addFragment","duplicate","expandedFragments","concat","getFragment","fragmentId","updateFragments","some","actionFragment","updatedFragment","every","toggleFragmentVisibility","hidden","removeFragment","removeFragments","ids","remainingFragments","getFragmentHelpers","useEffect","filteredFragments","Provider","value","setSettings","undoAction","redoAction","clearActionHistory","NotificationContext","initialState","notifications","notificationCounter","NotificationReducer","state","type","REMOVE_NOTIFICATION","notification","data","ADD_NOTIFICATION","NotificationContextProvider","useReducer","headerStyle","css","iconStyle","AComponentCodeUI","selectedComponent","className","dropStyle","dropStyleBefore","cx","dropStyleAfter","AComponent","componentObj","select","selected","remove","headingCss","setFragment","showDragOverIndicator","setShowDragOverIndicator","dragOverPosition","setDragOverPosition","holderRef","useRef","isDragOverBefore","current","offsetWidth","offsetHeight","ref","onClick","draggable","onDragStart","component","onDragEnter","onDragLeave","onDragOver","rect","currentTarget","getBoundingClientRect","pageX","left","pageY","top","onDrop","preventDefault","getData","updatedState","getParentComponent","items","indexOf","compareClasses","sc1","sc2","name","CssClassSelector","selectedClasses","setSelectedClasses","getAvailableClasses","ssc","sort","availableClasses","setAvailableClasses","style","marginTop","FormLabel","styleClass","Tag","key","onClose","c","deselectStyleClass","selectStyleClass","ComponentCssClassSelector","setComponent","cssClasses","sleep","ms","Promise","resolve","setTimeout","getFragmentPreview","props","a","element","document","createElement","position","zIndex","width","height","minHeight","ReactDOM","render","React","Fragment","body","appendChild","domtoimage","toBlob","imageBlob","getFragmentTemplates","labels","includes","getAllComponentStyleClasses","forEach","cssClass","co","coClasses","getAllFragmentStyleClasses","tagNameFromFragment","kebabCase","title","classNameFromFragment","upperFirst","camelCase","allClasses","Object","values","hasFragmentStyleClasses","hasComponentStyleClasses","item","getUniqueFragmentName","baseName","nameRegEx","RegExp","String","raw","nameMatch","match","count","nameBase","replace","Number","parseInt","names","push","highestNumber","n","isNaN","b","shift","getRandomId","Math","random","toString","getFragmentDuplicate","overrides","fragmentCopy","getFragmentPreviewUrl","renderProps","preview","format","reader","FileReader","readAsDataURL","Blob","onloadend","result","reactClassNamesFromComponentObj","cc","join","angularClassNamesFromComponentObj","nameStringToVariableString","AAccordionSettingsUI","sizeItems","text","alignItems","Dropdown","label","titleText","initialSelectedItem","size","itemToString","onChange","selectedItem","align","AAccordion","rest","Accordion","componentInfo","settingsUI","renderComponents","accordionItem","keywords","defaultComponentObj","image","codeExport","angular","inputs","json","codeContext","outputs","imports","code","jsonToTemplate","react","undefined","AAccordionItemSettingsUI","TextInput","labelText","Checkbox","checked","disabled","AAccordionItem","parentComponent","addAccordionItem","offset","active","topAction","bottomAction","AccordionItem","hideFromElementsPane","child","AButtonSettingsUI","kindItems","kind","AButton","Button","ACheckboxSettingsUI","ACheckboxCodeUI","ACheckbox","codeUI","helpIconStyle","AColumnSettingsUI","onNumInputchange","imaginaryTarget","isAccordionOpen","setIsAccordionOpen","small","smallSpan","smallOffset","medium","mediumSpan","mediumOffset","large","largeSpan","largeOffset","xLarge","xLargeSpan","xLargeOffset","max","maxSpan","maxOffset","href","target","rel","open","NumberInput","min","addStyle","addStyleLeft","addStyleRight","AColumn","addCell","Column","sm","span","md","lg","xlg","column","isNotDirectExport","AComboBoxSettingsUI","directionItems","selectionFeedbackItems","handleItemUpdate","index","listItems","isMulti","isInline","direction","selectionFeedback","hideLabel","placeholder","helperText","warnText","invalidText","light","dataList","setDataList","newList","updateItem","defaultObject","template","display","AComboBoxCodeUI","preventClickStyle","AComboBox","ComboboxOrFilterableMultiSelect","ComboBox","FilterableMultiSelect","filterableProps","warn","invalid","content","additionalCode","itemsKey","itemsToStringKey","itemsDefaultSelectedKey","ADropdownSettingsUI","ADropdownCodeUI","ADropdown","DropdownOrMultiSelect","MultiSelect","AFragmentSettingsUI","LinkButton","renderIcon","Edit32","to","showOutline","AFragmentCodeUI","showOutlineStyle","AFragment","pointerEvents","globalState","subFragment","otherImports","AGridSettingsUI","condensed","fullWidth","narrow","AGrid","Grid","getCellAttributeString","cell","sizeShort","sizeLong","spanString","offsetString","spanAndOffset","row","getCellParamsString","ANumberInputSettingsUI","step","ANumberInputCodeUI","ANumberInput","hideSteppers","readOnly","allowEmpty","round","AProgressIndicatorSettingsUI","handleStepUpdate","progressSteps","isVertical","description","secondaryLabel","AProgressIndicatorCodeUI","AProgressIndicator","ProgressIndicator","currentIndex","vertical","spacing","steps","ARowSettingsUI","addStyleTop","addStyleBottom","ARow","addRow","ATagSettingsUI","typeItems","ATag","defaultProps","ASearchInputSettingsUI","inputSize","defaultValue","ASearchInputCodeUI","ASearchInput","Search","ATextSettingsUI","AText","ATextAreaSettingsUI","ATextAreaCodeUI","ATextArea","TextArea","ATextInputSettingsUI","inputType","ATextInputCodeUI","ATextInput","ALinkSettingsUI","inline","ALinkCodeUI","ALink","Link","getExpandableTileItems","expandableTile","groupToSingle","tiles","tile","tileItems","defaultComponent","componentIndex","TileMorphism","tileTypes","expanded","outline","standalone","tileGroup","childDefaultComponent","legend","groupToGroup","formItemName","singleToGroup","singleToSingle","ATileSettingsUI","ATileCodeUI","ATile","Tile","AClickableTileSettingsUI","AClickableTileCodeUI","AClickableTile","AExpandableSettingsUI","AExpandableTileCodeUI","AExpandableTile","getFoldObjects","aboveFold","belowFold","fold","ATileFoldSettingsUI","ATileFold","classes","ASelectableTileSettingsUI","ASelectableTileCodeUI","preventCheckEvent","ASelectableTile","addTile","tileElement","getElementById","labelElement","parentElement","querySelector","setAttribute","stateFunction","handleSelectableTileChange","ASelectableTileGroupSettingsUI","ASelectableTileGroupCodeUI","ASelectableTileGroup","role","aria-label","ARadioTileSettingsUI","defaultChecked","ARadioTileCodeUI","ARadioTile","addRadio","RadioTile","ARadioTileGroupSettingsUI","ARadioTileGroupCodeUI","ARadioTileGroup","allComponents","accordion","accordionitem","button","checkbox","combobox","dropdown","grid","link","numberinput","progressIndicator","searchinput","tag","textarea","textinput","clickabletile","expandabletile","tilefold","selectabletile","selectableTileGroup","radiotile","radioTileGroup","componentHeaderZIndex","Adder","leftAction","rightAction","addButtonsCss","Header","isSideNavExpanded","setIsSideNavExpanded","headerName","tabIndex","isActive","prefix","onKeyDown","HeaderMenuItemLinkBase","this","Component","HeaderMenuItemLinkRouter","withRouter","forwardRef","ModalActionType","ModalType","main","Main","canvas","allowDrop","getSelectedComponent","getComponentById","i","selectedComponentId","stateWithoutComponent","componentId","findIndex","initializeIds","forceNewIds","updatedList","list","dropInIndex","dropInId","parent","SkeletonPlaceholder","drop","styles","Row","Col","cols","notificationStyle","minWidth","notificationAreaStyle","Notification","dispatch","lowContrast","aria-live","subtitle","message","caption","onCloseButtonClick","onNotificationClose","actions","actionFunction","actionText","addDragTargetStyle","addButtonDraggingStyle","addButtonStyle","trashButtonStyle","draggableIconStyle","tileStyle","DraggableTileList","dragOver","removeItemFromList","removeFromList","dragging","setDragging","draggedItem","draggedIndex","setDraggedIndex","AddButton","splice","clientHeight","setProperty","iconDescription","hasIconOnly","AddAlt32","addToList","onDragEnd","TrashCan32","ModalContext","SelectedLeftPane","ShowModal","FragmentID","modalReducer","setDuplicationModal","DUPLICATION","setDeletionModal","DELETION","setExportModal","EXPORT","closeModal","ModalContextProvider","modal","DuplicateFragmentModal","modalState","dispatchModal","dispatchNotification","useLocation","Modal","onRequestClose","secondaryButtonText","modalHeading","primaryButtonText","onRequestSubmit","DeleteFragmentModal","danger","createFragmentSandbox","fragmentTemplate","files","keys","filePath","LZString","compressToBase64","source","options","formatPrettier","formatOptions","plugins","parserBabel","trailingComma","useTabs","formatOptionsCss","parser","parserCss","addIfNotExist","arr","getAdditionalCodeAsString","collectedCode","getAdditionalCode","entries","otherImportsFromComponentObj","sortedUniq","generateTemplate","carbonImportsString","jsonToCarbonImports","componentImport","reduce","string","curr","createReactApp","sharedComponents","jsonToSharedComponents","componentJs","componentScss","dependencies","emotion","formatOptionsTypescript","formatOptionsHtml","parserHtml","jsonToAngularImports","getComponentCode","componentCode","subFragments","getAllSubfragments","getAngularInputsFromJson","getOne","getAngularOutputsFromJson","createAngularApp","tagName","getAllComponentsCode","appComponentHtml","appModule","saveBlob","blob","fileName","url","URL","createObjectURL","anchor","download","click","saveFile","revokeObjectURL","warningNotificationProps","notificationType","exportSettingForm","exportSettingFormGroup","previewContainer","selectInputWH","selectInput","fragmentImage","updatePreviewUrl","log","handleResize","doInputChange","debounce","doUpdatePreviewSize","ExportImageSettings","handleChange","onSave","onDimensionChange","ratioLock","curRatio","toFixed","numInputOnchange","parseFloat","numInputOnClick","inputChange","Form","fragmentName","Select","unit","SelectItem","Save32","ExportImageComponent","exportSettings","setInputs","previewUrl","setPreviewUrl","isPerformingAction","setIsPerformingAction","previewContainerRef","imageContainerSize","setImageContainerSize","window","addEventListener","removeEventListener","getPreviewSize","fitRatio","previewSize","imageUrl","mimeType","extension","src","alt","Loading","exportCodeModalStyle","codeSnippetWrapper","titleWrapper","codeSnippet","ExportModal","jsonCode","reactCode","angularCode","generateSandboxUrl","parameters","passiveModal","Tabs","selectedExportTabIndex","onSelectionChange","Tab","CodeSnippet","copyButtonDescription","FragmentModal","editHeader","toolBarSeparator","actionIconStyle","fragmentEditToolBar","EditHeader","lastModified","Export16","elementTileStyle","ElementTile","searchStyle","elementTileListStyle","ElementsPane","filterString","setFilterString","microLayouts","shouldShow","matches","leftPane","leftPaneHeader","searchContainerStyle","StylePane","selectedStyleClassId","setSelectedStyleClassId","getSelectedClass","updateSelectedClass","newClass","selectedClassIndex","Add16","newStyleClass","getUniqueClass","uniqueNamesGenerator","dictionaries","adjectives","colors","animals","separator","styleClassId","CodePane","SelectedComponentBreadcrumbs","Breadcrumb","noTrailingSlash","ancestors","unshift","getAncestors","BreadcrumbItem","isCurrentPage","nativeEvent","selectComponent","styleContextPaneStyle","SettingsContextPane","showComponentSettingsUI","TooltipDefinition","tooltipText","CodeContextPane","showComponentCodeOptions","transitionDetails","editPageContent","sideRail","rightPanel","actionsStyle","SortDirection","Edit","params","NONE","selectedLeftPane","setSelectedLeftPane","onRailClick","clickedLeftPane","ELEMENTS","STYLE","CODE","SideNav","isRail","SideNavItems","SideNavLink","Development16","ColorPalette16","Code16","Copy32","dashboardSearchWrapper","searchInput","sortButton","sortOverflowItem","FragmentGroupDisplayed","DashboardSearch","onSearchHandler","onSortHandler","displayWizard","setDisplayWizard","sortDirection","placeHolderText","OverflowMenu","ariaLabel","OverflowMenuItem","itemText","Ascending","Descending","CreateOptions","dashboardHeaderWrapper","fragmentTitle","contentSwitcher","DashboardHeader","onDisplayedSwitchHandler","fragmentGroupDisplayed","ContentSwitcher","selectedIndex","Switch","AllFragments","Templates","imagePlaceholderStyle","spinner","FragmentPreview","loading","withOverlay","FragmentTile","setModalFragment","handleModalState","modalAction","resetPreview","isDelete","svgStyle","placeholderContainer","fragmentRowWrapper","FragmentTileList","loaded","v","textAlign","tileFooter","SelectionTile","icon","generateNewFragment","Date","toISOString","createFragmentTiles","createFragmentTile","FragmentWizardModals","CreateFragmentModal","selectedCreateOption","setSelectedCreateOption","shouldDisplay","hasForm","shouldSubmitOnEnter","selectorPrimaryFocus","onSecondarySubmit","setShouldDisplay","setLastVisitedModal","CREATE_FRAGMENT_MODAL","IMPORT_JSON","setDisplayedModal","IMPORT_JSON_MODAL","FROM_SCRATCH","CHOOSE_FRAGMENT_MODAL","generatedFragment","generateFragment","primaryButtonDisabled","CHOOSE_TEMPLATE","ChooseFragmentModalTile","selectedFragment","setSelectedFragment","ChooseFragmentModal","lastVisitedModal","uploadedData","wasDataModified","setUploadedData","originalData","fragmentOptions","lastId","uid","ImportJsonModal","setFiles","jsonString","_setJsonString","fragmentJson","setFragmentJson","jsonParseError","setJsonParseError","setJsonString","js","e","handleDrop","handleDragover","uploadFile","fileToUpload","filesize","updatedFile","status","errorSubject","errorBody","file","uuid","invalidFileType","readAsText","onload","onerror","onAddFiles","useCallback","evt","addedFiles","newFiles","multiple","handleFileUploaderItemClick","clickedUuid","FormItem","FileUploaderDropContainer","accept","FileUploaderItem","onDelete","color","marginBottom","FragmentWizard","displayedModal","modalSwitcher","headerRowSyles","searchRowStyles","Dashboard","LocalOnly","setFragmentGroupDisplayed","fragmentTitleFilter","setFragmentTitleFilter","setSortDirection","displayedFragments","filterFragments","toLowerCase","fragmentSort","modalFragment","marginLeft","NotFound","goBack","errorHandler","ErrorBoundary","error","UIShell","HeaderContainer","app","Boolean","hostname","basename","path","exact","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c73f6afb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.f75955a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/accordion.86ae9a9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/accordion-item.9c9ebfb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.d3c186e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/combobox.edea9144.svg\";","module.exports = __webpack_public_path__ + \"static/media/dropdown.75801bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/grid.d052e9f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/number-input.7c0b9515.svg\";","module.exports = __webpack_public_path__ + \"static/media/progress-indicator.eb326ac3.svg\";","module.exports = __webpack_public_path__ + \"static/media/tag.e8c392a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.d4e4d083.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.e9252250.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-area.947a0503.svg\";","module.exports = __webpack_public_path__ + \"static/media/text-input.e389934c.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.bd08bf66.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile.3a252328.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-clickable.2c08592b.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-expandable.84f6f4fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-selectable.cdaf5fdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-selectable-group.bd4342ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile-radio.342a2a36.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard-empty-state.5e050054.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart-404.9bc8debd.svg\";","export const drag = (event: any, dragObj: any) => {\n\tevent.stopPropagation();\n\tevent.dataTransfer.setData('drag-object', JSON.stringify(dragObj));\n};\n","import React, {\n\tcreateContext,\n\tuseEffect,\n\tuseContext,\n\tuseState\n} from 'react';\nimport { useHistory } from 'react-router';\nimport assign from 'lodash/assign';\nimport { getFragmentHelpers } from './fragments-context-helper';\n\nconst GlobalStateContext: React.Context<any> = createContext(null);\nGlobalStateContext.displayName = 'GlobalStateContext';\n\nexport const useFragment = (id?: string) => {\n\tconst context = useContext(GlobalStateContext);\n\tconst history = useHistory();\n\n\tif (!context) {\n\t\t// this happens when rendering, which is fine because it's used\n\t\t// in AComponent to update the state of the whole fragment due to\n\t\t// user interaction - functionality not needed for render only\n\t\tconsole.info(\"Rendering only, won't be able to update context\");\n\t\treturn [{}, (_: any) => { }];\n\t}\n\n\tconst { fragments, updateFragment } = context;\n\n\tif (!id) {\n\t\tconst location = history.location.pathname;\n\t\tconst pathSegments = location.split('/');\n\t\tid = pathSegments[pathSegments.length - 1];\n\t}\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\tconst setFragment = (fragment: any) => {\n\t\tupdateFragment(fragment);\n\t};\n\treturn [fragment, setFragment];\n};\n\nconst validInitialFragments = (localFragments: any[] | undefined) => {\n\tif (!localFragments || !Array.isArray(localFragments)) {\n\t\treturn [];\n\t}\n\n\treturn localFragments.filter((fragment: any) => !!fragment.id && typeof fragment.id === 'string');\n};\n\nconst GlobalStateContextProvider = ({ children }: any) => {\n\tconst [fragments, _setFragments] = useState<any[]>(\n\t\tvalidInitialFragments(JSON.parse(localStorage.getItem('localFragments') as string)) || []\n\t);\n\tconst [actionHistory, setActionHistory] = useState([] as any[]);\n\tconst [actionHistoryIndex, setActionHistoryIndex] = useState(-1);\n\n\tconst [styleClasses, _setStyleClasses] = useState(JSON.parse(localStorage.getItem('globalStyleClasses') as string || '[]') as any[]);\n\tconst [settings, _setSettings] = useState(JSON.parse(localStorage.getItem('globalSettings') as string || '[]') as any[]);\n\n\tconst setFragments = (frags: any[]) => {\n\t\t_setFragments(frags);\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(frags));\n\t};\n\n\tconst addAction = (action: any) => {\n\t\tconst newActionHistoryIndex = actionHistoryIndex + 1;\n\t\tsetActionHistoryIndex(newActionHistoryIndex);\n\n\t\tconst actionClone = JSON.parse(JSON.stringify(action));\n\n\t\tsetActionHistory([...actionHistory.slice(0, newActionHistoryIndex), actionClone]);\n\t};\n\n\tconst setStyleClasses = (sc: any, updateActionHistory = true) => {\n\t\tconst csString = JSON.stringify(sc);\n\t\tlocalStorage.setItem('globalStyleClasses', csString);\n\t\t_setStyleClasses(sc);\n\t\tif (updateActionHistory) {\n\t\t\taddAction({\n\t\t\t\tstyleClasses: JSON.parse(csString)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst setSettings = (sc: any) => {\n\t\tconst csString = JSON.stringify(sc);\n\t\tlocalStorage.setItem('globalSettings', csString);\n\t\t_setSettings(sc);\n\t};\n\n\tconst canUndo = () => actionHistoryIndex > 0;\n\n\tconst updateFragment = (fragment: any, updateActionHistory = true) => {\n\t\tif (!fragments.length) {\n\t\t\tsetFragments([fragment]);\n\t\t\treturn;\n\t\t}\n\t\tconst updatedFragments = fragments.map((f: any) => {\n\t\t\tif (f.id === fragment.id) {\n\t\t\t\t// Cannot use merge because removing datasets or labels will not\n\t\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\t\treturn assign({}, f, fragment);\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\n\t\tsetFragments(updatedFragments);\n\n\t\tif (updateActionHistory) {\n\t\t\taddAction({ fragment });\n\t\t}\n\t};\n\n\tconst setAction = (newIndex: number) => {\n\t\tif (newIndex < 0 || newIndex > actionHistory.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst action = actionHistory[newIndex];\n\t\t// if there was a change in fragment\n\t\tif (action.fragment) {\n\t\t\tupdateFragment(action.fragment, false);\n\t\t}\n\n\t\t// if there was a change in styleClasses\n\t\tif (action.styleClasses) {\n\t\t\tsetStyleClasses(action.styleClasses, false);\n\t\t}\n\n\t\tsetActionHistoryIndex(newIndex);\n\t};\n\n\tfunction undoAction() {\n\t\tif (!canUndo()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAction(actionHistoryIndex - 1);\n\t}\n\n\tconst canRedo = () => actionHistoryIndex < actionHistory.length - 1;\n\n\tconst redoAction = () => {\n\t\tif (!canRedo()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAction(actionHistoryIndex + 1);\n\t};\n\n\tconst clearActionHistory = () => {\n\t\tsetActionHistoryIndex(-1);\n\t\tsetActionHistory([]);\n\t};\n\n\tconst fragmentHelpers = getFragmentHelpers({ fragments, setFragments });\n\n\tuseEffect(() => {\n\t\tconst localFragments = JSON.parse(localStorage.getItem('localFragments') as string || '[]');\n\t\t// clean up the hidden fragments (those marked for deletion but failed to be deleted)\n\t\tconst filteredFragments = localFragments.filter((fragment: any) => !fragment.hidden);\n\t\tfragmentHelpers.updateFragments(filteredFragments);\n\t\tlocalStorage.setItem('localFragments', JSON.stringify(filteredFragments));\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<GlobalStateContext.Provider value={{\n\t\t\t// FRAGMENTS\n\t\t\tfragments,\n\t\t\tsetFragments,\n\t\t\tupdateFragment,\n\t\t\t...fragmentHelpers,\n\n\t\t\t// STYLE CLASSES\n\t\t\tstyleClasses,\n\t\t\tsetStyleClasses,\n\n\t\t\t// SETTINGS\n\t\t\tsettings,\n\t\t\tsetSettings,\n\n\t\t\t// ACTION HISTORY\n\t\t\tactionHistory,\n\t\t\tactionHistoryIndex,\n\t\t\tsetActionHistory,\n\t\t\tsetActionHistoryIndex,\n\t\t\taddAction,\n\t\t\tcanUndo,\n\t\t\tundoAction,\n\t\t\tcanRedo,\n\t\t\tredoAction,\n\t\t\tclearActionHistory\n\t\t}}>\n\t\t\t{children}\n\t\t</GlobalStateContext.Provider>\n\t);\n};\n\nexport {\n\tGlobalStateContext,\n\tGlobalStateContextProvider\n};\n","import React, { createContext, useReducer } from 'react';\n\nconst NotificationContext: React.Context<any> = createContext({});\n\nNotificationContext.displayName = 'NotificationContext';\n\nexport type NotificationData = {\n\tkind: string;\n\ttitle: string;\n\tmessage: string;\n\tid: number;\n\taction?: any;\n};\nexport interface BaseNotificationAction {\n\ttype: NotificationActionType;\n\tdata: NotificationData;\n\taction?: Action;\n}\n\nexport type NotificationAction =\n\tNotificationActionAdd |\n\tNotificationActionRemove;\n\nexport enum NotificationActionType {\n\tADD_NOTIFICATION,\n\tREMOVE_NOTIFICATION\n}\n\nexport interface NotificationActionAdd extends BaseNotificationAction {\n\ttype: NotificationActionType.ADD_NOTIFICATION;\n}\n\nexport interface NotificationActionRemove extends BaseNotificationAction {\n\ttype: NotificationActionType.REMOVE_NOTIFICATION;\n}\n\ninterface Action {\n\tactionText: string;\n\tactionFunction: any;\n\tonNotificationClose: any;\n}\n\nexport interface NotificationState {\n\tnotifications: NotificationData[];\n}\n\nconst initialState = { notifications: [] };\nlet notificationCounter = 0;\n\nconst NotificationReducer = (state: NotificationState, action: NotificationAction) => {\n\tswitch (action.type) {\n\t\tcase NotificationActionType.REMOVE_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: state.notifications.filter(\n\t\t\t\t\t(notification: NotificationData) => notification.id !== action.data.id\n\t\t\t\t)\n\t\t\t};\n\t\tcase NotificationActionType.ADD_NOTIFICATION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnotifications: [\n\t\t\t\t\t...state.notifications,\n\t\t\t\t\t{\n\t\t\t\t\t\t...action.data,\n\t\t\t\t\t\tid: notificationCounter++\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\tdefault: return state;\n\t}\n};\n\nconst NotificationContextProvider = ({ children }: any) => {\n\tconst notification = useReducer(NotificationReducer, initialState);\n\treturn (\n\t\t<NotificationContext.Provider value={notification}>\n\t\t\t{children}\n\t\t</NotificationContext.Provider>\n\t);\n};\n\nexport {\n\tNotificationContext,\n\tNotificationContextProvider\n};\n","import assign from 'lodash/assign';\n\nexport const getFragmentHelpers = ({ fragments, setFragments }: any) => {\n\tconst addFragment = (fragment: any) => {\n\t\tconst duplicate = assign({}, fragment);\n\t\tconst expandedFragments = fragments.concat(duplicate);\n\t\tsetFragments(expandedFragments);\n\t};\n\n\tconst getFragment = (fragmentId: string) => fragments.find((f: any) => f.id === fragmentId);\n\n\tconst updateFragments = (frags: any[]) => {\n\t\tif (!fragments || !fragments.length) {\n\t\t\tsetFragments(frags);\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove fragments which are in the original state but not in the payload.\n\t\tconst filteredFragments = fragments\n\t\t\t.filter((fragment: any) => frags.some((actionFragment: any) => actionFragment.id === fragment.id));\n\t\t// If fragments already exist in the state, we need to merge any changes to the fragments with\n\t\t// the current matching fragments and add any new fragments (if any) to the state.\n\t\tconst mergedFragments = filteredFragments.map((fragment: any) => {\n\t\t// Find the fragment in the payload containing the same id as the current state's fragments\n\t\t// to merge updated changes with.\n\t\t\tconst updatedFragment = frags.find((actionFragment: any) => fragment.id === actionFragment.id);\n\t\t\t// Can not use merge because removing datasets or labels will not\n\t\t\t// work since it keeps the values, while assign overwrites past values.\n\t\t\treturn assign({}, fragment, updatedFragment);\n\t\t});\n\t\t// Adds any fragments in the payload which do not match any id in the current state's fragments.\n\t\tconst updatedFragments = mergedFragments\n\t\t\t.concat(frags.filter((actionFragment: any) => (\n\t\t\t\tfragments.every((fragment: any) => fragment.id !== actionFragment.id)\n\t\t\t)));\n\n\t\tsetFragments(updatedFragments);\n\t};\n\n\tconst toggleFragmentVisibility = (id: string, hidden = false) => {\n\t\tconst updatedFragments = fragments.map((f: any) => {\n\t\t\tif (f.id === id) {\n\t\t\t\treturn { ...f, hidden };\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\n\t\tsetFragments(updatedFragments);\n\t};\n\n\tconst removeFragment = (id: string) => {\n\t\tsetFragments(fragments.filter((fragment: any) => fragment.id !== id));\n\t};\n\n\tconst removeFragments = (ids: string[]) => {\n\t\tconst remainingFragments = fragments.filter((fragment: any) => (\n\t\t\t!ids.some((actionFragment: any) => actionFragment.id === fragment.id)\n\t\t));\n\t\tsetFragments(remainingFragments);\n\t};\n\n\treturn {\n\t\taddFragment,\n\t\tgetFragment,\n\t\tupdateFragments,\n\t\ttoggleFragmentVisibility,\n\t\tremoveFragment,\n\t\tremoveFragments\n\t};\n};\n","import { css, cx } from 'emotion';\nimport React, { useRef, useState } from 'react';\n\nimport { Draggable32, TrashCan32 } from '@carbon/icons-react';\nimport { drag } from '../routes/edit/tools';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\n\nexport const componentHeaderZIndex = 999;\n\nconst headerStyle = css`\n\tposition: absolute;\n\tmargin-top: -26px;\n\tpadding-left: 6px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: ${componentHeaderZIndex};\n`;\n\nconst iconStyle = css`height: 1rem; width: 1rem; float: right`;\n\nexport const AComponentCodeUI = ({ selectedComponent }: any) => {\n\treturn <span className={css`overflow-wrap: anywhere`}>\n\t\t{JSON.stringify(selectedComponent)}\n\t</span>;\n};\n\nconst dropBorderStyle = '2px solid #0f62fe';\n\nconst dropStyle = css`\n\tposition: absolute;\n\twidth: 15px;\n\theight: 15px;\n\tline-height: 21px;\n\tz-index: 2;\n`;\n\nconst dropStyleBefore = cx(dropStyle, css`\n\tmargin-left: -4px;\n\tmargin-top: -4px;\n\tborder-left: ${dropBorderStyle};\n\tborder-top: ${dropBorderStyle};\n`);\n\nconst dropStyleAfter = cx(dropStyle, css`\n\tmargin-left: calc(100% - 11px);\n\tborder-right: ${dropBorderStyle};\n\tborder-bottom: ${dropBorderStyle};\n\tbottom: -4px;\n`);\n\nexport interface ComponentInfo {\n\ttype: string;\n\tcomponent: any;\n\tkeywords: string[];\n\tname: string;\n\tdefaultComponentObj: any;\n\timage: any; // whatever fits in the <img src=\"here\">\n\tsettingsUI: any;\n\tcodeUI?: any;\n\trender?: (props: ComponentInfoRenderProps) => any;\n\thideFromElementsPane?: boolean;\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (props: { json: any }) => string;\n\t\t\toutputs: (props: { json: any }) => string;\n\t\t\timports: string[];\n\t\t\tisNotDirectExport?: boolean;\n\t\t\tcode: (props: {json: any; jsonToTemplate: (json: any, fragments: any[]) => string; fragments: any[]}) => string;\n\t\t};\n\t\treact: {\n\t\t\timports: ((props: {json: any}) => string[]) | string[];\n\t\t\totherImports?: (props: {json: any; fragments?: any[]}) => string;\n\t\t\tisNotDirectExport?: boolean;\n\t\t\tcode: (props: {json: any; jsonToTemplate: (json: any, fragments: any[]) => string; fragments: any[]}) => string;\n\t\t\tadditionalCode?: (componentObj: any) => any;\n\t\t};\n\t};\n}\n\nexport interface ComponentInfoRenderProps {\n\tcomponentObj: any;\n\tselect: () => void;\n\tremove: () => void;\n\tselected: boolean;\n\tonDragOver: (event: any) => void;\n\tonDrop: (event: any) => any;\n\trenderComponents: (componentObj: any) => any;\n}\n\nexport const AComponent = ({\n\tchildren,\n\tcomponentObj,\n\tselect,\n\tselected,\n\tremove,\n\theadingCss,\n\tclassName\n}: any) => {\n\t// TODO use fragments context instead of passing in `remove`?\n\tconst [fragment, setFragment] = useFragment();\n\tconst [showDragOverIndicator, setShowDragOverIndicator] = useState(false);\n\tconst [dragOverPosition, setDragOverPosition] = useState([] as any[]);\n\tconst holderRef = useRef(null as any);\n\n\tconst isDragOverLeft = () => dragOverPosition[0] < holderRef.current.offsetWidth / 2;\n\t// const isDragOverRight = () => !isDragOverLeft();\n\tconst isDragOverTop = () => dragOverPosition[1] < holderRef.current.offsetHeight / 2;\n\t// const isDragOverBottom = () => !isDragOverTop();\n\tconst isDragOverBefore = () => isDragOverLeft() || isDragOverTop();\n\tconst isDragOverAfter = () => !isDragOverBefore();\n\n\tconst onDrop = (event: any) => {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\tsetShowDragOverIndicator(false);\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData('drag-object'));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(\n\t\t\t\tfragment.data,\n\t\t\t\tdragObj,\n\t\t\t\tcomponentObj.id,\n\t\t\t\tgetParentComponent(fragment.data, componentObj).items.indexOf(componentObj) + (isDragOverBefore() ? 0 : 1)\n\t\t\t)\n\t\t});\n\t};\n\n\treturn (\n\t\t<span\n\t\tclassName={className}\n\t\tref={holderRef}\n\t\tonClick={(event) => {\n\t\t\tevent.stopPropagation();\n\t\t\tselect();\n\t\t}}\n\t\tdraggable='true' // TODO make Draggable32 the drag handle and this element as preview\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj,\n\t\t\ttype: 'move'\n\t\t})}\n\t\tonDragEnter={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(true);\n\t\t}}\n\t\tonDragLeave={(event: any) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetShowDragOverIndicator(false);\n\t\t}}\n\t\tonDragOver={(event) => {\n\t\t\tconst rect = event.currentTarget.getBoundingClientRect();\n\t\t\tsetDragOverPosition([event.pageX - rect.left, event.pageY - rect.top]);\n\t\t}}\n\t\tonDrop={onDrop}>\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleBefore,\n\t\t\t\tshowDragOverIndicator && isDragOverBefore() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(\n\t\t\t\tdropStyleAfter,\n\t\t\t\tshowDragOverIndicator && isDragOverAfter() ? css`` : css`display: none`\n\t\t\t)} />\n\t\t\t<span className={cx(headerStyle, headingCss, selected ? css`` : css`display: none`)}>\n\t\t\t\t<span className={css`margin-right: 1rem`}>\n\t\t\t\t\t{componentObj && componentObj.type ? componentObj.type : 'Header'}\n\t\t\t\t</span>\n\t\t\t\t<Draggable32 className={iconStyle} />\n\t\t\t\t<TrashCan32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif (remove) {\n\t\t\t\t\t\tremove();\n\t\t\t\t\t}\n\t\t\t\t}} className={iconStyle} />\n\t\t\t</span>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n\tFormLabel,\n\tTag\n} from 'carbon-components-react';\nimport { GlobalStateContext } from '../context';\n\nconst compareClasses = (sc1: any, sc2: any) => sc1.name < sc2.name ? -1 : 1;\n\nexport const CssClassSelector = ({ selectedClasses, setSelectedClasses }: any) => {\n\tconst { styleClasses } = useContext(GlobalStateContext);\n\n\tconst getAvailableClasses = () => {\n\t\t// available is anything in styleClasses, not yet in selecteClasses, sorted\n\t\treturn styleClasses\n\t\t\t.filter((sc: any) => !selectedClasses?.find((ssc: any) => ssc.id === sc.id))\n\t\t\t.sort(compareClasses);\n\t};\n\n\tconst [availableClasses, setAvailableClasses] = useState(getAvailableClasses());\n\n\tuseEffect(() => {\n\t\tif (!selectedClasses) {\n\t\t\tsetSelectedClasses([]);\n\t\t}\n\t}, [selectedClasses, setSelectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update available classes based on styleClasses and selectedClasses\n\t\tsetAvailableClasses(getAvailableClasses());\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses, selectedClasses]);\n\n\tuseEffect(() => {\n\t\t// update the contents of selected classes when needed\n\t\tsetSelectedClasses(\n\t\t\tstyleClasses.filter((sc: any) => !!selectedClasses?.find((ssc: any) => ssc.id === sc.id)),\n\t\t\tfalse\n\t\t);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [styleClasses]);\n\n\tconst selectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses([...selectedClasses, styleClass]);\n\t\tsetAvailableClasses(availableClasses.filter((c: any) => c.id !== styleClass.id));\n\t};\n\n\tconst deselectStyleClass = (styleClass: any) => {\n\t\tsetSelectedClasses(selectedClasses.filter((c: any) => c.id !== styleClass.id));\n\t\tsetAvailableClasses([...availableClasses, styleClass].sort(compareClasses));\n\t};\n\n\treturn (\n\t\t<div style={{ marginTop: '1rem' }}>\n\t\t\t<p>Custom CSS classes</p>\n\t\t\t<FormLabel>Selected classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tselectedClasses?.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tkey={styleClass.name}\n\t\t\t\t\tfilter\n\t\t\t\t\tonClose={() => deselectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t\t<br />\n\t\t\t<FormLabel>Available classes</FormLabel>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tavailableClasses.map((styleClass: any) => (\n\t\t\t\t\t<Tag\n\t\t\t\t\tkey={styleClass.name}\n\t\t\t\t\tonClick={() => selectStyleClass(styleClass)}>\n\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t</Tag>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport const ComponentCssClassSelector = ({ componentObj, setComponent }: any) => {\n\tconst setSelectedClasses = (cssClasses: any[], updateActionHistory = true) => {\n\t\tsetComponent(\n\t\t\t{\n\t\t\t\t...componentObj,\n\t\t\t\tcssClasses\n\t\t\t},\n\t\t\tupdateActionHistory\n\t\t);\n\t};\n\n\treturn (\n\t\t<CssClassSelector\n\t\t\tselectedClasses={componentObj.cssClasses}\n\t\t\tsetSelectedClasses={setSelectedClasses}\n\t\t/>\n\t);\n};\n","import React from 'react';\nimport domtoimage from 'dom-to-image';\nimport ReactDOM from 'react-dom';\nimport { Fragment } from '../components';\nimport { camelCase, kebabCase, upperFirst } from 'lodash';\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport interface RenderProps {\n\tid: string;\n\tname: string;\n\twidth?: number;\n\theight?: number;\n\tformat?: string;\n\tpreview?: { // only sent for preview\n\t\tformat?: string; // optional\n\t\twidth: number;\n\t\theight: number;\n\t};\n}\n\nexport const getFragmentPreview = async (fragment: any, props: RenderProps) => {\n\tconst element = document.createElement('div');\n\telement.className = 'render-preview';\n\n\t(element as HTMLElement).style.position = 'absolute';\n\t(element as HTMLElement).style.top = '0';\n\t(element as HTMLElement).style.left = '0';\n\t(element as HTMLElement).style.zIndex = '-1';\n\t(element as HTMLElement).style.width = `${props.width || 800}px`;\n\t(element as HTMLElement).style.height = `${props.height || 400}px`;\n\t(element as HTMLElement).style.minHeight = `${props.height || 400}px`;\n\tReactDOM.render(React.createElement(Fragment, { fragment }), element);\n\tdocument.body.appendChild(element);\n\n\tawait sleep(100); // wait for render to finish\n\n\tconst imageBlob = await domtoimage.toBlob(element as Node);\n\t(element as HTMLElement).remove();\n\treturn imageBlob;\n};\n\nexport const getFragmentTemplates = (fragments: any[]) => (\n\tfragments.filter((fragment: any) => !!fragment.labels?.includes('template'))\n);\n\nexport const getAllComponentStyleClasses = (componentObj: any, fragments: any[]) => {\n\tlet styleClasses: any = {};\n\n\t// convert into an object so all classes are unique\n\tcomponentObj.cssClasses?.forEach((cssClass: any) => {\n\t\t// NOTE do we need to merge them deeply?\n\t\tstyleClasses[cssClass.id] = cssClass;\n\t});\n\n\tcomponentObj.items?.map((co: any) => {\n\t\tconst coClasses = getAllComponentStyleClasses(co, fragments);\n\t\tstyleClasses = {\n\t\t\t...styleClasses,\n\t\t\t...coClasses\n\t\t};\n\n\t\tif (co.type === 'fragment') {\n\t\t\tconst fragment = fragments.find(f => f.id === co.id);\n\n\t\t\tstyleClasses = {\n\t\t\t\t...styleClasses,\n\t\t\t\t// we can't avoid this without a messy declare+reassign+export\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\t\t...getAllFragmentStyleClasses(fragment || {}, fragments)\n\t\t\t};\n\t\t}\n\t});\n\n\treturn styleClasses;\n};\n\nexport const tagNameFromFragment = (fragment: any) => {\n\t// TODO fragment can have a tag name?\n\treturn kebabCase(fragment.title);\n};\n\nexport const classNameFromFragment = (fragment: any) => {\n\t// TODO fragment can have a class name?\n\treturn upperFirst(camelCase(fragment.title));\n};\n\nexport const getAllFragmentStyleClasses = (fragment: any, fragments: any[] = []) => {\n\tif (!fragment || !fragment.data) {\n\t\treturn [];\n\t}\n\n\tconst allClasses = {\n\t\t...getAllComponentStyleClasses(fragment, fragments),\n\t\t...getAllComponentStyleClasses(fragment.data, fragments)\n\t};\n\treturn Object.values(allClasses);\n};\n\nexport const hasComponentStyleClasses = (componentObj: any) => {\n\tif (componentObj.cssClasses) {\n\t\treturn true;\n\t}\n\n\tif (componentObj.items) {\n\t\treturn componentObj.items.some((item: any) => hasComponentStyleClasses(item));\n\t}\n\n\treturn false;\n};\n\nexport const hasFragmentStyleClasses = (fragment: any) => {\n\tif (!fragment || !fragment.data) {\n\t\treturn false;\n\t}\n\n\treturn hasComponentStyleClasses(fragment.data);\n};\n\nexport const getUniqueFragmentName = (fragments: Array<any>, baseName: string) => {\n\tconst nameRegEx = new RegExp(String.raw`(.*)\\s+(copy)*(\\s+(\\d+))?$`);\n\tconst nameMatch = baseName.match(nameRegEx);\n\tlet count = 0;\n\n\tlet nameBase = baseName;\n\t// If match, increment the count and update name base and new name\n\tif (nameMatch) {\n\t\tnameBase = baseName.replace(nameRegEx, '$1');\n\t\tcount = Number.parseInt(baseName.replace(nameRegEx, '$4'), 10);\n\t\tif (!count) {\n\t\t\tcount = 0;\n\t\t}\n\t}\n\n\t// Get a list containing names of all duplicates of original fragment\n\t// e.g. [ \"Fragment copy\", \"Fragment copy 1\", \"Fragment copy 7\", ...]\n\tconst names: string[] = [];\n\tfragments.forEach((fragment) => {\n\t\tif (fragment.title.includes(nameBase)) {\n\t\t\tnames.push(fragment.title);\n\t\t}\n\t});\n\n\tif (names.length <= 1) {\n\t\t// because the fragment we're copying is already in there\n\t\treturn `${nameBase} copy`;\n\t}\n\n\tconst highestNumber = names\n\t\t.map((n) => Number.parseInt(n.replace(nameRegEx, '$4'), 10))\n\t\t.filter((n) => !isNaN(n)).sort((a, b) => b - a)\n\t\t.shift();\n\n\treturn `${nameBase} copy ${highestNumber && count < highestNumber ? highestNumber + 1 : count + 1}`;\n};\n\nexport const getRandomId = () => `${Math.random().toString().slice(2)}${Math.random().toString().slice(2)}`;\n\nexport const getFragmentDuplicate = (fragments: any, fragment: any, overrides = {}) => {\n\t// copy current fragment and change fragment title\n\tconst fragmentCopy = JSON.parse(JSON.stringify(fragment));\n\tfragmentCopy.title = getUniqueFragmentName(fragments, fragmentCopy.title);\n\tfragmentCopy.id = getRandomId();\n\treturn { ...fragmentCopy, ...overrides };\n};\n\nexport const getFragmentPreviewUrl = async (fragment: any) => {\n\tconst renderProps: RenderProps = {\n\t\tid: fragment.id,\n\t\tname: fragment.title,\n\t\twidth: 800,\n\t\theight: 400,\n\t\tpreview: {\n\t\t\tformat: 'png',\n\t\t\twidth: 330,\n\t\t\theight: 200\n\t\t}\n\t};\n\n\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\treturn new Promise((resolve) => {\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => resolve(reader.result ? reader.result.toString() : '');\n\t});\n};\n\nexport const reactClassNamesFromComponentObj = (componentObj: any) =>\n\tcomponentObj.cssClasses\n\t\t&& Array.isArray(componentObj.cssClasses)\n\t\t&& componentObj.cssClasses.length > 0\n\t\t? `className='${componentObj.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t\t: '';\n\nexport const angularClassNamesFromComponentObj = (componentObj: any) =>\n\tcomponentObj.cssClasses\n\t\t&& Array.isArray(componentObj.cssClasses)\n\t\t&& componentObj.cssClasses.length > 0\n\t\t? `class='${componentObj.cssClasses.map((cc: any) => cc.id).join(' ')}'`\n\t\t: '';\n\nexport const nameStringToVariableString = (name: string) => camelCase(name);\n","import React from 'react';\nimport { Accordion, Dropdown } from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\n\nimport image from '../../assets/component-icons/accordion.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const AAccordionSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'lg', text: 'Large' }\n\t];\n\n\tconst alignItems = [\n\t\t{ id: 'end', text: 'End' },\n\t\t{ id: 'start', text: 'Start' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t})}/>\n\t\t<Dropdown\n\t\t\tlabel='Alignment of accordion heading'\n\t\t\ttitleText='Alignment'\n\t\t\titems={alignItems}\n\t\t\tinitialSelectedItem={alignItems.find(item => item.id === selectedComponent.align)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\talign: event.selectedItem.id\n\t\t})}/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AAccordion = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Accordion\n\t\t\talign={componentObj.align}\n\t\t\tsize={componentObj.size}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Accordion>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AAccordion,\n\tsettingsUI: AAccordionSettingsUI,\n\trender: ({ componentObj, select, remove, selected, renderComponents }) => <AAccordion\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.items.map((accordionItem: any) => renderComponents(accordionItem))}\n\t</AAccordion>,\n\tkeywords: ['accordion'],\n\tname: 'Accordion',\n\ttype: 'accordion',\n\tdefaultComponentObj: {\n\t\ttype: 'accordion',\n\t\talign: 'end',\n\t\tsize: 'md',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'accordion-item',\n\t\t\t\ttitle: 'Accordion item',\n\t\t\t\titems: [{ type: 'text', text: 'Accordion item content' }]\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Align = \"${json.align}\";`,\n\t\t\toutputs: () => '',\n\t\t\timports: ['AccordionModule'],\n\t\t\t// NOTE: Angular accordion does not support size yet.\n\t\t\t// Issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2022\n\t\t\t// NOTE: Angular accordion align end does not behave as expected.\n\t\t\t// Issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2023\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-accordion\n\t\t\t\t\t[align]=\"${nameStringToVariableString(json.codeContext?.name)}Align\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-accordion>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Accordion'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<Accordion\n\t\t\t\t\t${json.align !== undefined ? `align='${json.align}'` : ''}\n\t\t\t\t\t${json.size !== undefined ? `size='${json.size}'` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</Accordion>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tAccordionItem,\n\tCheckbox,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\n\nimport image from '../../assets/component-icons/accordion-item.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\nimport { useFragment } from '../../context';\nimport {\n\tAdder,\n\tgetParentComponent,\n\tupdatedState\n} from '../../components';\n\nexport const AAccordionItemSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.title}\n\t\t\tlabelText='Title'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}} />\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AAccordionItem = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\tconst addAccordionItem = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'accordionitem',\n\t\t\t\t\ttitle: 'New accordion item',\n\t\t\t\t\titems: [{ type: 'text', text: 'New accordion item content' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t<Adder\n\t\tactive={selected}\n\t\ttopAction={() => addAccordionItem()}\n\t\tbottomAction={() => addAccordionItem(1)}>\n\t\t\t<AComponent\n\t\t\t{...rest}\n\t\t\tcomponentObj={componentObj}\n\t\t\tselected={selected}>\n\t\t\t\t<AccordionItem\n\t\t\t\ttitle={componentObj.title}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t\t{children}\n\t\t\t\t</AccordionItem>\n\t\t\t</AComponent>\n\t\t</Adder>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AAccordionItem,\n\thideFromElementsPane: true,\n\tsettingsUI: AAccordionItemSettingsUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AAccordionItem\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}\n\t\tselected={selected}>\n\t\t\t{componentObj.items.map((child: any) => renderComponents(child))}\n\t</AAccordionItem>,\n\tkeywords: ['accordion', 'item'],\n\tname: 'Accordion item',\n\ttype: 'accordion-item',\n\tdefaultComponentObj: {\n\t\ttype: 'accordionitem',\n\t\ttitle: 'Accordion item',\n\t\tdisabled: false,\n\t\titems: [{ type: 'text', text: 'Accordion item content' }]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Title = \"${json.title}\";`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Selected = new EventEmitter();`,\n\t\t\timports: ['AccordionModule'],\n\t\t\t// NOTE: Angular accordion item currently does not support 'disabled'.\n\t\t\t// issue being tracked here: https://github.com/IBM/carbon-components-angular/issues/2021\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-accordion-item\n\t\t\t\t\t[title]=\"${nameStringToVariableString(json.codeContext?.name)}Title\"\n\t\t\t\t\t(selected)=\"${nameStringToVariableString(json.codeContext?.name)}Selected.emit($event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-accordion-item>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['AccordionItem'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<AccordionItem\n\t\t\t\t\ttitle=\"${json.title || ''}\"\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</AccordionItem>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tButton,\n\tDropdown,\n\tTextInput\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/button.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const AButtonSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst kindItems = [\n\t\t{ id: 'primary', text: 'Primary' },\n\t\t{ id: 'secondary', text: 'Secondary' },\n\t\t{ id: 'tertiary', text: 'Tertiary' },\n\t\t{ id: 'danger', text: 'Danger' },\n\t\t{ id: 'danger--tertiary', text: 'Danger tertiary' },\n\t\t{ id: 'danger--ghost', text: 'Danger ghost' },\n\t\t{ id: 'ghost', text: 'Ghost' }\n\t];\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\ttext: event.currentTarget.value\n\t\t\t})} />\n\t\t<Dropdown\n\t\t\tlabel='Kind'\n\t\t\ttitleText='Kind'\n\t\t\titems={kindItems}\n\t\t\tinitialSelectedItem={kindItems.find(item => item.id === selectedComponent.kind)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tkind: event.selectedItem.id\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AButton = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={css`position: relative; display: inline-flex`}\n\t\t{...rest}>\n\t\t\t<Button\n\t\t\tkind={componentObj.kind}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Button>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AButton,\n\tsettingsUI: AButtonSettingsUI,\n\trender: ({ componentObj, select, remove, selected }) => <AButton\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</AButton>,\n\tkeywords: ['button'],\n\tname: 'Button',\n\ttype: 'button',\n\tdefaultComponentObj: {\n\t\ttype: 'button',\n\t\tkind: 'primary',\n\t\ttext: 'Button'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Clicked = new EventEmitter();`,\n\t\t\timports: ['ButtonModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<button\n\t\t\t\t\t${json.kind ? `ibmButton='${json.kind}'` : 'ibmButton'}\n\t\t\t\t\t(click)='${nameStringToVariableString(json.codeContext?.name)}Clicked.emit()'\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.text}\n\t\t\t\t</button>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Button'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Button${json.kind && ` kind=\"${json.kind}\"`} ${reactClassNamesFromComponentObj(json)}>${json.text}</Button>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Checkbox, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/checkbox.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ACheckboxSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ACheckboxCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ACheckbox = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<Checkbox\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ACheckbox,\n\tsettingsUI: ACheckboxSettingsUI,\n\tcodeUI: ACheckboxCodeUI,\n\tkeywords: ['checkbox', 'check box'],\n\tname: 'Checkbox',\n\ttype: 'checkbox',\n\tdefaultComponentObj: {\n\t\ttype: 'checkbox',\n\t\tlabel: 'Checkbox'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Checked: boolean;`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}CheckedChange = new EventEmitter<boolean>();`,\n\t\t\timports: ['CheckboxModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-checkbox\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\t[(checked)]=\"${nameStringToVariableString(json.codeContext?.name)}Checked\"\n\t\t\t\t\t(checkedChange)=\"${nameStringToVariableString(json.codeContext?.name)}CheckedChange.emit($event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.label}\n\t\t\t\t</ibm-checkbox>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Checkbox'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Checkbox\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\tchecked={state[\"${json.codeContext?.name}\"]?.checked}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={(checked) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\tvalue: checked\n\t\t\t\t\t\t}\n\t\t\t\t\t})} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n\tAccordion,\n\tAccordionItem,\n\tColumn,\n\tNumberInput\n} from 'carbon-components-react';\nimport { Add32, Help32 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { AComponent } from './a-component';\nimport { useFragment } from '../context';\nimport { getParentComponent, updatedState } from '../components';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nconst helpIconStyle = css`\n\tcolor: #525252;\n\tposition: absolute;\n\tright: 1rem;\n\tz-index: 1;\n\tbackground: white;\n\n\tsvg {\n\t\twidth: 1rem;\n\t\theight: 1rem;\n\t}\n`;\n\nexport const AColumnSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst onNumInputchange = (event: any) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\t[event.imaginaryTarget.name]: Number(event.imaginaryTarget.value)\n\t\t});\n\t};\n\n\tconst [isAccordionOpen, setIsAccordionOpen] = useState({} as any);\n\n\tuseEffect(() => {\n\t\tsetIsAccordionOpen({\n\t\t\tsmall: selectedComponent.smallSpan || selectedComponent.smallOffset,\n\t\t\tmedium: selectedComponent.mediumSpan || selectedComponent.mediumOffset,\n\t\t\tlarge: selectedComponent.largeSpan || selectedComponent.largeOffset,\n\t\t\txLarge: selectedComponent.xLargeSpan || selectedComponent.xLargeOffset,\n\t\t\tmax: selectedComponent.maxSpan || selectedComponent.maxOffset\n\t\t});\n\t}, [selectedComponent]);\n\n\treturn <>\n\t\t<a\n\t\thref='https://www.carbondesignsystem.com/guidelines/2x-grid/implementation/'\n\t\ttarget='_blank'\n\t\trel='noopener noreferrer'\n\t\tclassName={helpIconStyle}>\n\t\t\t<Help32 />\n\t\t</a>\n\t\t<Accordion align='start'>\n\t\t\t<AccordionItem title='Small' open={isAccordionOpen.small}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={4}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='smallSpan'\n\t\t\t\t\tvalue={selectedComponent.smallSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={3}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='smallOffset'\n\t\t\t\t\tvalue={selectedComponent.smallOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Medium' open={isAccordionOpen.medium}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={8}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='mediumSpan'\n\t\t\t\t\tvalue={selectedComponent.mediumSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={7}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='mediumOffset'\n\t\t\t\t\tvalue={selectedComponent.mediumOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Large' open={isAccordionOpen.large}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='largeSpan'\n\t\t\t\t\tvalue={selectedComponent.largeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='largeOffset'\n\t\t\t\t\tvalue={selectedComponent.largeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Extra large' open={isAccordionOpen.xLarge}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='xLargeSpan'\n\t\t\t\t\tvalue={selectedComponent.xLargeSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='xLargeOffset'\n\t\t\t\t\tvalue={selectedComponent.xLargeOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\n\t\t\t<AccordionItem title='Max' open={isAccordionOpen.max}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={16}\n\t\t\t\t\tlabel='Span'\n\t\t\t\t\tname='maxSpan'\n\t\t\t\t\tvalue={selectedComponent.maxSpan}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={15}\n\t\t\t\t\tlabel='Offset'\n\t\t\t\t\tname='maxOffset'\n\t\t\t\t\tvalue={selectedComponent.maxOffset}\n\t\t\t\t\tonChange={onNumInputchange} />\n\t\t\t</AccordionItem>\n\t\t</Accordion>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-top: -2px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: 1;\n`;\n\nconst addStyleLeft = cx(addStyle, css`\n\tmargin-left: -30px;\n`);\n\nconst addStyleRight = cx(addStyle, css`\n\tmargin-left: calc(100% - 30px);\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const AColumn = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addCell = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\titems: [{ type: 'text', text: 'New cell' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<Column\n\t\tonDrop={onDrop}\n\t\tclassName={cx(componentObj.cssClasses?.map((cc: any) => cc.id).join(' '), css`position: relative`)}\n\t\tsm={{\n\t\t\tspan: componentObj.smallSpan || undefined,\n\t\t\toffset: componentObj.smallOffset || undefined\n\t\t}}\n\t\tmd={{\n\t\t\tspan: componentObj.mediumSpan || undefined,\n\t\t\toffset: componentObj.mediumOffset || undefined\n\t\t}}\n\t\tlg={{\n\t\t\tspan: componentObj.largeSpan || undefined,\n\t\t\toffset: componentObj.largeOffset || undefined\n\t\t}}\n\t\txlg={{\n\t\t\tspan: componentObj.xLargeSpan || undefined,\n\t\t\toffset: componentObj.xLargeOffset || undefined\n\t\t}}\n\t\tmax={{\n\t\t\tspan: componentObj.maxSpan || undefined,\n\t\t\toffset: componentObj.maxOffset || undefined\n\t\t}}>\n\t\t\t<span className={cx(addStyleLeft, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell();\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<span className={cx(addStyleRight, selected ? css`` : css`display: none`)}>\n\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\taddCell(1);\n\t\t\t\t}} className={iconStyle}/>\n\t\t\t</span>\n\t\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\tclassName={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t{children}\n\t\t\t</AComponent>\n\t\t</Column>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AColumn,\n\tsettingsUI: AColumnSettingsUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AColumn\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((column: any) => (\n\t\t\t\trenderComponents(column)\n\t\t\t))}\n\t</AColumn>,\n\tkeywords: ['column', 'grid'],\n\tname: 'Column',\n\ttype: 'column',\n\thideFromElementsPane: true,\n\tdefaultComponentObj: undefined,\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t},\n\t\treact: {\n\t\t\timports: ['Column'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tComboBox,\n\tFilterableMultiSelect,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\nimport { DraggableTileList } from '../components';\n\nimport image from './../assets/component-icons/combobox.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const AComboBoxSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'lg', text: 'Large' }\n\t];\n\n\tconst directionItems = [\n\t\t{ id: 'bottom' },\n\t\t{ id: 'top' }\n\t];\n\n\tconst selectionFeedbackItems = [\n\t\t{ id: 'top' },\n\t\t{ id: 'fixed' },\n\t\t{ id: 'top-after-reopen' }\n\t];\n\n\tconst handleItemUpdate = (key: string, value: any, index: number) => {\n\t\tconst item = {\n\t\t\t...selectedComponent.listItems[index],\n\t\t\t[key]: value\n\t\t};\n\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tlistItems: [\n\t\t\t\t...selectedComponent.listItems.slice(0, index),\n\t\t\t\titem,\n\t\t\t\t...selectedComponent.listItems.slice(index + 1)\n\t\t\t]\n\t\t});\n\t};\n\n\tconst template = (item: any, index: number) => {\n\t\treturn <>\n\t\t\t<TextInput\n\t\t\t\tlight\n\t\t\t\tvalue={item.text}\n\t\t\t\tlabelText='Display text'\n\t\t\t\tonChange={(event: any) => handleItemUpdate('text', event.currentTarget.value, index)} />\n\t\t\t{\n\t\t\t\tselectedComponent.isMulti &&\n\t\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tstyle={{ display: 'inline-flex' }}\n\t\t\t\t\t\tlabelText='Is default selected'\n\t\t\t\t\t\tid={`invalid-select-${index}`}\n\t\t\t\t\t\tchecked={item.selected}\n\t\t\t\t\t\tonChange={(checked: any) => handleItemUpdate('selected', checked, index)} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>;\n\t};\n\n\tconst updateStepList = (newList: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tlistItems: newList\n\t\t});\n\t};\n\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Is multiselect'\n\t\t\tid='multi-label'\n\t\t\tchecked={selectedComponent.isMulti}\n\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tisMulti: checked\n\t\t\t})} />\n\t\t{\n\t\t\tselectedComponent.isMulti && <Checkbox\n\t\t\t\tlabelText='Is inline'\n\t\t\t\tid='inline-label'\n\t\t\t\tchecked={selectedComponent.isInline}\n\t\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tisInline: checked\n\t\t\t\t})}\n\t\t\t/>\n\t\t}\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t})} />\n\t\t<Dropdown\n\t\t\tlabel='Direction'\n\t\t\ttitleText='Dropdown direction'\n\t\t\titems={directionItems}\n\t\t\tinitialSelectedItem={directionItems.find(item => item.id === selectedComponent.direction)}\n\t\t\titemToString={(item: any) => (item ? item.id : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tdirection: event.selectedItem.id\n\t\t})} />\n\t\t{selectedComponent.isMulti && <Dropdown\n\t\t\tlabel='Feedback'\n\t\t\ttitleText='Selection feedback'\n\t\t\titems={selectionFeedbackItems}\n\t\t\tinitialSelectedItem={selectionFeedbackItems.find(item => item.id === selectedComponent.selectionFeedback)}\n\t\t\titemToString={(item: any) => (item ? item.id : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tselectionFeedback: event.selectedItem.id\n\t\t})} />}\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tlabel: event.currentTarget.value\n\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Hide label'\n\t\t\tid='hide-label'\n\t\t\tchecked={selectedComponent.hideLabel}\n\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\thideLabel: checked\n\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tplaceholder: event.currentTarget.value\n\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\thelperText: event.currentTarget.value\n\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.warnText}\n\t\t\tlabelText='Warning text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\twarnText: event.currentTarget.value\n\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.invalidText}\n\t\t\tlabelText='Invalid text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinvalidText: event.currentTarget.value\n\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tlight: checked\n\t\t})} />\n\t\t<hr />\n\t\t<h4>Items</h4>\n\t\t<DraggableTileList\n\t\t\tdataList={[...selectedComponent.listItems]}\n\t\t\tsetDataList={updateStepList}\n\t\t\tupdateItem={handleItemUpdate}\n\t\t\tdefaultObject={{\n\t\t\t\ttext: 'Text'\n\t\t\t}}\n\t\t\ttemplate={template} />\n\t\t<hr />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AComboBoxCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>;\n};\n\nconst preventClickStyle = css`\n\tpointer-events: none;\n`;\n\nexport const AComboBox = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\t// Determine which React Component to render based on dropdownType\n\tlet ComboboxOrFilterableMultiSelect = ComboBox;\n\tif (componentObj.isMulti) {\n\t\tComboboxOrFilterableMultiSelect = FilterableMultiSelect;\n\t}\n\tconst filterableProps = {\n\t\ttype: componentObj.isInline ? 'inline' : 'default',\n\t\thideLabel: componentObj.hideLabel,\n\t\tselectionFeedback: componentObj.selectionFeedback\n\t};\n\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<ComboboxOrFilterableMultiSelect\n\t\t\t\t{...componentObj.isMulti ? filterableProps: {}}\n\t\t\t\tid={componentObj.codeContext?.name}\n\t\t\t\ttitleText={componentObj.label}\n\t\t\t\tsize={componentObj.size}\n\t\t\t\tlight={componentObj.light}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\twarn={componentObj.warn}\n\t\t\t\twarnText={componentObj.warnText}\n\t\t\t\tinvalid={componentObj.invalid}\n\t\t\t\tinvalidText={componentObj.invalidText}\n\t\t\t\tdirection={componentObj.direction}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\titems={[]}\n\t\t\t\tclassName={`${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} ${preventClickStyle}`} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\ttype: 'combobox',\n\tcomponent: AComboBox,\n\tsettingsUI: AComboBoxSettingsUI,\n\tcodeUI: AComboBoxCodeUI,\n\tkeywords: ['ComboBox', 'filterable', 'multiselect'],\n\tname: 'ComboBox',\n\tdefaultComponentObj: {\n\t\ttype: 'combobox',\n\t\tplaceholder: 'placeholder',\n\t\tisMulti: false,\n\t\tisInline: false,\n\t\tselectionFeedback: 'top-after-reopen',\n\t\tdirection: 'bottom',\n\t\tsize: 'md',\n\t\tlabel: 'Label',\n\t\thelperText: 'Optional helper text here',\n\t\tlistItems: [\n\t\t\t{\n\t\t\t\ttext: 'Text'\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) =>{\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\tconst items = json.listItems.map((item: any) => ({\n\t\t\t\t\tcontent: item.text,\n\t\t\t\t\t...(json.isMulti && item.selected) && { selected: item.selected }\n\t\t\t\t}));\n\n\t\t\t\treturn `@Input() ${name}Label = \"${json.label}\";\n\t\t\t\t@Input() ${name}HelperText = \"${json.helperText}\";\n\t\t\t\t@Input() ${name}Placeholder = \"${json.placeholder}\";\n\t\t\t\t@Input() ${name}Theme = \"${json.light ? 'light' : 'dark'}\";\n\t\t\t\t@Input() ${name}Invalid = ${!!json.invalid};\n\t\t\t\t@Input() ${name}InvalidText = \"${json.invalidText ? json.invalidText : ''}\";\n\t\t\t\t@Input() ${name}Size = \"${json.size}\";\n\t\t\t\t@Input() ${name}Warn = ${!!json.warn};\n\t\t\t\t@Input() ${name}WarnText = \"${json.warnText ? json.warnText : ''}\";\n\t\t\t\t@Input() ${name}Disabled = ${!!json.disabled};\n\t\t\t\t@Input() ${name}DropUp = ${json.direction !== 'bottom'};\n\t\t\t\t@Input() ${name}SelectionFeedback = \"${json.selectionFeedback}\";\n\t\t\t\t@Input() ${name}Type: \"single\" | \"multi\" = \"${json.isMulti ? 'multi' : 'single'}\";\n\t\t\t\t@Input() ${name}Items = ${JSON.stringify(items)};`;\n\t\t\t},\n\t\t\toutputs: ({ json }) => {\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\treturn `@Output() ${name}Selected = new EventEmitter<any>();\n\t\t\t\t@Output() ${name}OnClose = new EventEmitter<any>();\n\t\t\t\t@Output() ${name}Search = new EventEmitter<string>();`;\n\t\t\t},\n\t\t\timports: ['ComboBoxModule'],\n\t\t\tcode: ({ json }) =>{\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\treturn `<ibm-combo-box\n\t\t\t\t\t[label]=\"${name}Label\"\n\t\t\t\t\t[helperText]=\"${name}HelperText\"\n\t\t\t\t\t[placeholder]=\"${name}Placeholder\"\n\t\t\t\t\t[theme]=\"${name}Theme\"\n\t\t\t\t\t[invalid]=\"${name}Invalid\"\n\t\t\t\t\t[invalidText]=\"${name}InvalidText\"\n\t\t\t\t\t[size]=\"${name}Size\"\n\t\t\t\t\t[warn]=\"${name}Warn\"\n\t\t\t\t\t[warnText]=\"${name}WarnText\"\n\t\t\t\t\t[disabled]=\"${name}Disabled\"\n\t\t\t\t\t[dropUp]=\"${name}DropUp\"\n\t\t\t\t\t[selectionFeedback]=\"${name}SelectionFeedback\"\n\t\t\t\t\t[type]=\"${name}Type\"\n\t\t\t\t\t[items]=\"${name}Items\"\n\t\t\t\t\t(selected)=\"${name}Selected.emit(event)\"\n\t\t\t\t\t(search)=\"${name}Search.emit(event)\"\n\t\t\t\t\t(close)=\"${name}OnClose.emit(event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t<ibm-dropdown-list></ibm-dropdown-list>\n\t\t\t\t</ibm-combo-box>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ({ json }) => [json.isMulti ? 'FilterableMultiSelect' : 'ComboBox'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\tconst filterableProps = `${json.isInline ? 'type=\"inline\"': ''}\n\t\t\t\t\t${json.hideLabel !== undefined ? `hideLabel={${json.hideLabel}}` : ''}\n\t\t\t\t\t${json.selectionFeedback !== 'top-after-reopen' ? `selectionFeedback=\"${json.selectionFeedback}\"`: ''}`;\n\n\t\t\t\t// Items are required\n\t\t\t\treturn `<${json.isMulti ? 'FilterableMultiSelect' : 'ComboBox'}\n\t\t\t\t\tid=\"${name}\"\n\t\t\t\t\ttitleText=\"${json.label}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\t${json.isMulti ? filterableProps : ''}\n\t\t\t\t\t${json.direction !== 'bottom' ? `direction=\"${json.direction}\"` : ''}\n\t\t\t\t\t${json.light ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${json.size !== 'md' ? `size=\"${json.size}\"` : ''}\n\t\t\t\t\titems={${name}Items}\n\t\t\t\t\titemToString={${name}ItemsToString}\n\t\t\t\t\tinitialSelectedItem${json.isMulti ? 's' : ''}={${name}DefaultSelected}\n\t\t\t\t\tonChange={(selectedItem) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${name}\",\n\t\t\t\t\t\t\tvalue: selectedItem\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t/>`;\n\t\t\t},\n\t\t\tadditionalCode: (json) => {\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\tconst itemsKey = `${name}Items`;\n\t\t\t\tconst itemsToStringKey = `${name}ItemsToString`;\n\t\t\t\tconst itemsDefaultSelectedKey = `${name}DefaultSelected`;\n\t\t\t\treturn {\n\t\t\t\t\t[itemsKey]: `const ${itemsKey} = state[\"${name}Items\"] || ${json.listItems ?\n\t\t\t\t\t\tJSON.stringify(json.listItems) : '[]'};`,\n\t\t\t\t\t[itemsToStringKey]: `const ${itemsToStringKey} = state[\"${name}ItemToString\"] || ((item) => (item ? item.text : \"\"));`,\n\t\t\t\t\t[itemsDefaultSelectedKey]: `const ${itemsDefaultSelectedKey} = state[\"${name}initialSelectedItems\"] || ${json.isMulti ?\n\t\t\t\t\t\t`(${itemsKey}.filter(item => item.selected))`: `(${itemsKey}.find(item => item.selected))`};`\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tMultiSelect,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\nimport { DraggableTileList } from '../components';\n\nimport image from './../assets/component-icons/dropdown.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const ADropdownSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'lg', text: 'Large' }\n\t];\n\n\tconst directionItems = [\n\t\t{ id: 'bottom' },\n\t\t{ id: 'top' }\n\t];\n\n\tconst selectionFeedbackItems = [\n\t\t{ id: 'top' },\n\t\t{ id: 'fixed' },\n\t\t{ id: 'top-after-reopen' }\n\t];\n\n\tconst handleItemUpdate = (key: string, value: any, index: number) => {\n\t\tconst item = {\n\t\t\t...selectedComponent.listItems[index],\n\t\t\t[key]: value\n\t\t};\n\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tlistItems: [\n\t\t\t\t...selectedComponent.listItems.slice(0, index),\n\t\t\t\titem,\n\t\t\t\t...selectedComponent.listItems.slice(index + 1)\n\t\t\t]\n\t\t});\n\t};\n\n\tconst template = (item: any, index: number) => {\n\t\treturn <>\n\t\t\t<TextInput\n\t\t\t\tlight\n\t\t\t\tvalue={item.text}\n\t\t\t\tlabelText='Display text'\n\t\t\t\tonChange={(event: any) => handleItemUpdate('text', event.currentTarget.value, index)} />\n\t\t\t{\n\t\t\t\tselectedComponent.isMulti &&\n\t\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tstyle={{ display: 'inline-flex' }}\n\t\t\t\t\t\tlabelText='Is default selected'\n\t\t\t\t\t\tid={`invalid-select-${index}`}\n\t\t\t\t\t\tchecked={item.selected}\n\t\t\t\t\t\tonChange={(checked: any) => handleItemUpdate('selected', checked, index)} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>;\n\t};\n\n\tconst updateStepList = (newList: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tlistItems: newList\n\t\t});\n\t};\n\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Is multiselect'\n\t\t\tid='multiselect-label'\n\t\t\tchecked={selectedComponent.isMulti}\n\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tisMulti: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Is inline'\n\t\t\tid='inline-label'\n\t\t\tchecked={selectedComponent.isInline}\n\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tisInline: checked\n\t\t\t})} />\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t\t})} />\n\t\t<Dropdown\n\t\t\tlabel='Direction'\n\t\t\ttitleText='Dropdown direction'\n\t\t\titems={directionItems}\n\t\t\tinitialSelectedItem={directionItems.find(item => item.id === selectedComponent.direction)}\n\t\t\titemToString={(item: any) => (item ? item.id : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tdirection: event.selectedItem.id\n\t\t\t})} />\n\t\t<Dropdown\n\t\t\tlabel='Feedback'\n\t\t\ttitleText='Selection feedback'\n\t\t\titems={selectionFeedbackItems}\n\t\t\tinitialSelectedItem={selectionFeedbackItems.find(item => item.id === selectedComponent.selectionFeedback)}\n\t\t\titemToString={(item: any) => (item ? item.id : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tselectionFeedback: event.selectedItem.id\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tlabel: event.currentTarget.value\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Hide label'\n\t\t\tid='hide-label'\n\t\t\tchecked={selectedComponent.hideLabel}\n\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\thideLabel: checked\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\thelperText: event.currentTarget.value\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.warnText}\n\t\t\tlabelText='Warning text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\twarnText: event.currentTarget.value\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.invalidText}\n\t\t\tlabelText='Invalid text'\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinvalidText: event.currentTarget.value\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tlight: checked\n\t\t\t})} />\n\t\t<hr />\n\t\t<h4>Items</h4>\n\t\t<DraggableTileList\n\t\t\tdataList={[...selectedComponent.listItems]}\n\t\t\tsetDataList={updateStepList}\n\t\t\tupdateItem={handleItemUpdate}\n\t\t\tdefaultObject={{\n\t\t\t\ttext: 'Text'\n\t\t\t}}\n\t\t\ttemplate={template} />\n\t\t<hr />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ADropdownCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>;\n};\n\nconst preventClickStyle = css`\n\tpointer-events: none;\n`;\n\nexport const ADropdown = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\t// Determine which React Component to render based on dropdownType\n\tlet DropdownOrMultiSelect = Dropdown;\n\tif (componentObj.isMulti) {\n\t\tDropdownOrMultiSelect = MultiSelect;\n\t}\n\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<DropdownOrMultiSelect\n\t\t\t\tid={componentObj.codeContext?.name}\n\t\t\t\tlabel={componentObj.placeholder}\n\t\t\t\ttitleText={componentObj.label}\n\t\t\t\tsize={componentObj.size}\n\t\t\t\tlight={componentObj.light}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\ttype={componentObj.isInline ? 'inline' : 'default'}\n\t\t\t\twarn={componentObj.warn}\n\t\t\t\twarnText={componentObj.warnText}\n\t\t\t\thideLabel={componentObj.hideLabel}\n\t\t\t\tinvalid={componentObj.invalid}\n\t\t\t\tinvalidText={componentObj.invalidText}\n\t\t\t\tdirection={componentObj.direction}\n\t\t\t\titems={[]}\n\t\t\t\tclassName={`${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} ${preventClickStyle}`} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\ttype: 'dropdown',\n\tcomponent: ADropdown,\n\tsettingsUI: ADropdownSettingsUI,\n\tcodeUI: ADropdownCodeUI,\n\tkeywords: ['dropdown', 'multiselect', 'select'],\n\tname: 'Dropdown',\n\tdefaultComponentObj: {\n\t\ttype: 'dropdown',\n\t\tplaceholder: 'placeholder',\n\t\tisMulti: false,\n\t\tisInline: false,\n\t\tselectionFeedback: 'top-after-reopen',\n\t\tdirection: 'bottom',\n\t\tsize: 'md',\n\t\tlabel: 'Label',\n\t\thelperText: 'Optional helper text',\n\t\tlistItems: [\n\t\t\t{\n\t\t\t\ttext: 'Text'\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => {\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\tconst items = json.listItems.map((item: any) => ({\n\t\t\t\t\tcontent: item.text,\n\t\t\t\t\t...(json.isMulti && item.selected) && { selected: item.selected }\n\t\t\t\t}));\n\n\t\t\t\treturn `@Input() ${name}Label = \"${json.label}\";\n\t\t\t\t@Input() ${name}HelperText = \"${json.helperText}\";\n\t\t\t\t@Input() ${name}Placeholder = \"${json.placeholder}\";\n\t\t\t\t@Input() ${name}Theme = \"${json.light ? 'light' : 'dark'}\";\n\t\t\t\t@Input() ${name}Invalid = ${!!json.invalid};\n\t\t\t\t@Input() ${name}InvalidText = \"${json.invalidText ? json.invalidText : ''}\";\n\t\t\t\t@Input() ${name}Size = \"${json.size}\";\n\t\t\t\t@Input() ${name}Warn = ${!!json.warn};\n\t\t\t\t@Input() ${name}WarnText = \"${json.warnText ? json.warnText : ''}\";\n\t\t\t\t@Input() ${name}Disabled = ${!!json.disabled};\n\t\t\t\t@Input() ${name}DropUp = ${json.direction !== 'bottom'};\n\t\t\t\t@Input() ${name}SelectionFeedback = \"${json.selectionFeedback}\";\n\t\t\t\t@Input() ${name}Type: \"single\" | \"multi\" = \"${json.isMulti ? 'multi' : 'single'}\";\n\t\t\t\t@Input() ${name}Items = ${JSON.stringify(items)};`;\n\t\t\t},\n\t\t\toutputs: ({ json }) =>{\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\treturn `@Output() ${name}Selected = new EventEmitter<any>();\n\t\t\t\t\t@Output() ${name}Close = new EventEmitter<any>();`;\n\t\t\t},\n\t\t\timports: ['DropdownModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\treturn `<ibm-dropdown\n\t\t\t\t\t[label]=\"${name}Label\"\n\t\t\t\t\t[helperText]=\"${name}HelperText\"\n\t\t\t\t\t[placeholder]=\"${name}Placeholder\"\n\t\t\t\t\t[theme]=\"${name}Theme\"\n\t\t\t\t\t[invalid]=\"${name}Invalid\"\n\t\t\t\t\t[invalidText]=\"${name}InvalidText\"\n\t\t\t\t\t[size]=\"${name}Size\"\n\t\t\t\t\t[warn]=\"${name}Warn\"\n\t\t\t\t\t[warnText]=\"${name}WarnText\"\n\t\t\t\t\t[disabled]=\"${name}Disabled\"\n\t\t\t\t\t[dropUp]=\"${name}DropUp\"\n\t\t\t\t\t[selectionFeedback]=\"${name}SelectionFeedback\"\n\t\t\t\t\t[type]=\"${name}Type\"\n\t\t\t\t\t(selected)=\"${name}Selected.emit(event)\"\n\t\t\t\t\t(close)=\"${name}Close.emit(event)\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t<ibm-dropdown-list [items]=\"${name}Items\"></ibm-dropdown-list>\n\t\t\t\t</ibm-dropdown>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ({ json }) => [json.isMulti ? 'MultiSelect': 'Dropdown'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\n\t\t\t\t// Items are required\n\t\t\t\treturn `<${json.isMulti ? 'MultiSelect' : 'Dropdown'}\n\t\t\t\t\tid=\"${name}\"\n\t\t\t\t\ttitleText=\"${json.label}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tlabel=\"${json.placeholder}\"\n\t\t\t\t\t${json.isInline ? 'type=\"inline\"': ''}\n\t\t\t\t\t${json.selectionFeedback !== 'top-after-reopen' && json.isMulti ? `selectionFeedback=\"${json.selectionFeedback}` : ''}\n\t\t\t\t\t${json.hideLabel !== undefined ? `hideLabel={${json.hideLabel}}` : ''}\n\t\t\t\t\t${json.direction !== 'bottom' ? `direction=\"${json.direction}\"` : ''}\n\t\t\t\t\t${json.light ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${json.size !== 'md' ? `size=\"${json.size}\"` : ''}\n\t\t\t\t\titems={${name}Items}\n\t\t\t\t\titemToString={${name}ItemsToString}\n\t\t\t\t\tinitialSelectedItem${json.isMulti ? 's' : ''}={${name}DefaultSelected}\n\t\t\t\t\tonChange={(selectedItem) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${name}\",\n\t\t\t\t\t\t\tvalue: selectedItem\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t/>`;\n\t\t\t},\n\t\t\tadditionalCode: (json) => {\n\t\t\t\tconst name = nameStringToVariableString(json.codeContext?.name);\n\t\t\t\tconst itemsKey = `${name}Items`;\n\t\t\t\tconst itemsToStringKey = `${name}ItemsToString`;\n\t\t\t\tconst itemsDefaultSelectedKey = `${name}DefaultSelected`;\n\t\t\t\treturn {\n\t\t\t\t\t[itemsKey]: `const ${itemsKey} = state[\"${name}Items\"] || ${json.listItems ?\n\t\t\t\t\t\tJSON.stringify(json.listItems) : '[]'};`,\n\t\t\t\t\t[itemsToStringKey]: `const ${itemsToStringKey} = state[\"${name}ItemToString\"] || ((item) => (item ? item.text : \"\"));`,\n\t\t\t\t\t[itemsDefaultSelectedKey]: `const ${itemsDefaultSelectedKey} = state[\"${name}initialSelectedItems\"] || ${json.isMulti ?\n\t\t\t\t\t\t`(${itemsKey}.filter(item => item.selected))`: `(${itemsKey}.find(item => item.selected))`};`\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useContext } from 'react';\nimport {\n\tCheckbox,\n\tTextInput\n} from 'carbon-components-react';\nimport { Edit32 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/button.svg';\nimport { GlobalStateContext } from '../context';\nimport { classNameFromFragment, tagNameFromFragment } from '../utils/fragment-tools';\nimport { LinkButton } from '../components';\n\nexport const AFragmentSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<LinkButton\n\t\tkind='secondary'\n\t\tsize='sm'\n\t\trenderIcon={Edit32}\n\t\tclassName={css`margin-bottom: 1rem`}\n\t\tto={selectedComponent.id}>\n\t\t\tEdit fragment\n\t\t</LinkButton>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='fragment-showOutline'\n\t\t\tchecked={selectedComponent.showOutline}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tshowOutline: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AFragmentCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nconst showOutlineStyle = css`\n\toutline: 1px dashed #78a9ff;\n`;\n\nexport const AFragment = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={css`position: relative; display: inline-flex`}\n\t\t{...rest}>\n\t\t\t<div\n\t\t\tstyle={{ pointerEvents: 'none' }}\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcomponentObj.showOutline ? showOutlineStyle : ''\n\t\t\t)}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AFragment,\n\tsettingsUI: AFragmentSettingsUI,\n\trender: ({ componentObj, select, remove, selected, renderComponents }) => {\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tconst globalState = useContext(GlobalStateContext); // used for fetching subcomponents/microlayouts\n\t\tconst subFragment = globalState?.getFragment(componentObj.id);\n\n\t\tif (!subFragment) {\n\t\t\treturn ''; // NOTE should we also remove it from the fragment?\n\t\t}\n\n\t\treturn <AFragment\n\t\t\tcomponentObj={componentObj}\n\t\t\tselect={select}\n\t\t\tremove={remove}\n\t\t\tselected={selected}>\n\t\t\t\t{renderComponents(subFragment.data)}\n\t\t</AFragment>;\n\t},\n\tkeywords: ['fragment'],\n\tname: 'Fragment',\n\thideFromElementsPane: true,\n\ttype: 'fragment',\n\tdefaultComponentObj: {\n\t\ttype: 'fragment'\n\t},\n\timage,\n\tcodeExport: { // TODO exports\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: [],\n\t\t\tcode: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `<app-${tagNameFromFragment(fragment)}></app-${tagNameFromFragment(fragment)}>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\totherImports: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `import {${classNameFromFragment(fragment)}} from \"/src/shared/${tagNameFromFragment(fragment)}.js\";`;\n\t\t\t},\n\t\t\tcode: ({ json, fragments }) => {\n\t\t\t\tconst fragment = fragments?.find(f => f.id === json.id);\n\t\t\t\treturn `<${classNameFromFragment(fragment)} state={state} setState={setState} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Checkbox, Grid } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css, cx } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/grid.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const AGridSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='grid-showOutline'\n\t\t\tchecked={selectedComponent.showOutline}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tshowOutline: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Full width'\n\t\t\tid='grid-fullWidth'\n\t\t\tchecked={selectedComponent.fullWidth}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tfullWidth: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nconst showOutlineStyle = css`\n\t.bx--col {\n\t\toutline: 1px dashed #78a9ff;\n\t}\n`;\n\nexport const AGrid = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<Grid\n\t\t\tclassName={cx(\n\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\tcomponentObj.showOutline ? showOutlineStyle : ''\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tfullWidth={componentObj.fullWidth}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t{children}\n\t\t\t</Grid>\n\t\t</AComponent>\n\t);\n};\n\nconst getCellAttributeString = (cell: any, sizeShort: string, sizeLong: string) => {\n\tconst span = cell[`${sizeLong}Span`];\n\tconst offset = cell[`${sizeLong}Offset`];\n\n\tif (!span && ! offset) {\n\t\treturn '';\n\t}\n\n\tconst spanString = `span: ${span}`;\n\tconst offsetString = `offset: ${offset}`;\n\n\tconst spanAndOffset = `{\n\t\t${span ? spanString : ''}${span && offset ? ',' : ''}\n\t\t${offset ? offsetString : ''}\n\t}`;\n\n\treturn `${sizeShort}={${!offset ? span : spanAndOffset}}`;\n};\n\nconst getCellParamsString = (cell: any) => {\n\treturn `\n\t\t${getCellAttributeString(cell, 'sm', 'small')}\n\t\t${getCellAttributeString(cell, 'md', 'medium')}\n\t\t${getCellAttributeString(cell, 'lg', 'large')}\n\t\t${getCellAttributeString(cell, 'xlg', 'xLarge')}\n\t\t${getCellAttributeString(cell, 'max', 'max')}\n\t`;\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AGrid,\n\tsettingsUI: AGridSettingsUI,\n\tkeywords: ['grid', 'row', 'column'],\n\tname: 'Grid',\n\ttype: 'grid',\n\tdefaultComponentObj: {\n\t\ttype: 'grid',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'A' }] },\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'B' }] }\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'C' }] },\n\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'D' }] }\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<div ibmGrid ${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.items.map((row: any) => `<div ibmRow ${angularClassNamesFromComponentObj(row)}>\n\t\t\t\t\t\t${row.items.map((cell: any) => `<div ibmCol ${angularClassNamesFromComponentObj(cell)}>\n\t\t\t\t\t\t\t\t${jsonToTemplate(cell, fragments)}\n\t\t\t\t\t\t</div>`).join('\\n')}\n\t\t\t\t\t</div>`).join('\\n')}\n\t\t\t\t</div>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Grid', 'Column', 'Row'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<Grid ${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.items.map((row: any) => `<Row ${reactClassNamesFromComponentObj(row)}>\n\t\t\t\t\t\t${row.items.map((cell: any) => `<Column ${getCellParamsString(cell)} ${reactClassNamesFromComponentObj(cell)}>\n\t\t\t\t\t\t\t\t${jsonToTemplate(cell, fragments)}\n\t\t\t\t\t\t</Column>`).join('\\n')}\n\t\t\t\t\t</Row>`).join('\\n')}\n\t\t\t\t</Grid>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tTextInput,\n\tNumberInput\n} from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/number-input.svg';\nimport { angularClassNamesFromComponentObj, nameStringToVariableString, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ANumberInputSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'lg', text: 'Large' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Hide label'\n\t\t\tid='hide-label'\n\t\t\tchecked={selectedComponent.hideLabel}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thideLabel: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.min}\n\t\t\tlabel='Min'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tmin: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.max}\n\t\t\tlabel='Max'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tmax: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<NumberInput\n\t\t\tvalue={selectedComponent.step}\n\t\t\tlabel='Step'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tstep: +event.imaginaryTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.warnText}\n\t\t\tlabelText='Warning text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\twarnText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.invalidText}\n\t\t\tlabelText='Invalid text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tinvalidText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ANumberInputCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ANumberInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<NumberInput\n\t\t\t\tsize={componentObj.size}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\twarn={componentObj.warn}\n\t\t\t\twarnText={componentObj.warnText}\n\t\t\t\tlabel={componentObj.label}\n\t\t\t\thideLabel={componentObj.hideLabel}\n\t\t\t\thideSteppers={componentObj.hideSteppers}\n\t\t\t\tmin={componentObj.min}\n\t\t\t\tmax={componentObj.max}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\treadOnly={componentObj.readOnly}\n\t\t\t\tinvalid={componentObj.invalid}\n\t\t\t\tinvalidText={componentObj.invalidText}\n\t\t\t\tlight={componentObj.light}\n\t\t\t\tallowEmpty={componentObj.allowEmpty}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest}\n\t\t\t\ttype='number' />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ANumberInput,\n\tsettingsUI: ANumberInputSettingsUI,\n\tcodeUI: ANumberInputCodeUI,\n\tkeywords: ['number', 'input'],\n\tname: 'Number input',\n\ttype: 'number-input',\n\tdefaultComponentObj: {\n\t\ttype: 'number-input',\n\t\tsize: 'md',\n\t\tlabel: 'Number input label',\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tstep: 10,\n\t\thelperText: 'Helper text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) =>\n\t\t\t\t`@Input() ${nameStringToVariableString(json.codeContext?.name)}HelperText = \"${json.helperText}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Value = ${Math.round((json.min + json.max) / 2)};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Label = \"${json.label}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Theme = \"${json.light ? 'light' : ''}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Min = ${json.min};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Max = ${json.max};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Step = ${json.step};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Invalid = ${!!json.invalid};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}InvalidText = ${json.invalidText};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Warn = ${json.warn};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}WarnText = ${json.warnText};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Size = \"${json.size}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled};`,\n\t\t\toutputs: ({ json }) =>\n\t\t\t\t`@Output() ${nameStringToVariableString(json.codeContext?.name)}ValueChange = new EventEmitter<number>();\n\t\t\t\t@Output() ${nameStringToVariableString(json.codeContext?.name)}Change = new EventEmitter<any>();`,\n\t\t\timports: ['NumberModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-number\n\t\t\t\t\t[helperText]=\"${nameStringToVariableString(json.codeContext?.name)}HelperText\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t[value]=\"${nameStringToVariableString(json.codeContext?.name)}Value\"\n\t\t\t\t\t(change)=\"${nameStringToVariableString(json.codeContext?.name)}ValueChange.emit($event.value) || numberinput78Change.emit($event)\"\n\t\t\t\t\t[label]=\"${nameStringToVariableString(json.codeContext?.name)}Label\"\n\t\t\t\t\t[theme]=\"${nameStringToVariableString(json.codeContext?.name)}Theme\"\n\t\t\t\t\t[min]=\"${nameStringToVariableString(json.codeContext?.name)}Min\"\n\t\t\t\t\t[max]=\"${nameStringToVariableString(json.codeContext?.name)}Max\"\n\t\t\t\t\t[step]=\"${nameStringToVariableString(json.codeContext?.name)}Step\"\n\t\t\t\t\t[invalid]=\"${nameStringToVariableString(json.codeContext?.name)}Invalid\"\n\t\t\t\t\t[invalidText]=\"${nameStringToVariableString(json.codeContext?.name)}InvalidText\"\n\t\t\t\t\t[warn]=\"${nameStringToVariableString(json.codeContext?.name)}Warn\"\n\t\t\t\t\t[warnText]=\"${nameStringToVariableString(json.codeContext?.name)}WarnText\"\n\t\t\t\t\t[size]=\"${nameStringToVariableString(json.codeContext?.name)}Size\"\n\t\t\t\t\t[disabled]=\"${nameStringToVariableString(json.codeContext?.name)}Disabled\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t</ibm-number>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['NumberInput'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<NumberInput\n\t\t\t\t\tsize=\"${json.size}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tmin=\"${json.min}\"\n\t\t\t\t\tmax=\"${json.max}\"\n\t\t\t\t\tstep=\"${json.step}\"\n\t\t\t\t\tlabel=\"${json.label}\"\n\t\t\t\t\t${json.warnText !== undefined && json.warnText !== '' ? `warnText=\"${json.warnText}\"` : ''}\n\t\t\t\t\t${json.warn !== undefined ? `warn=\"${json.warn}\"` : ''}\n\t\t\t\t\t${json.hideLabel !== undefined ? `hideLabel=\"${json.hideLabel}\"` : ''}\n\t\t\t\t\t${json.hideSteppers !== undefined ? `hideSteppers=\"${json.hideSteppers}\"` : ''}\n\t\t\t\t\t${json.disabled !== undefined ? `disabled=\"${json.disabled}\"` : ''}\n\t\t\t\t\t${json.readOnly !== undefined ? `readOnly=\"${json.readOnly}\"` : ''}\n\t\t\t\t\t${json.invalid !== undefined ? `invalid=\"${json.invalid}\"` : ''}\n\t\t\t\t\t${json.invalidText !== undefined ? `invalidText=\"${json.invalidText}\"` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${json.allowEmpty !== undefined ? `allowEmpty=\"${json.allowEmpty}\"` : ''}\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tProgressIndicator,\n\tProgressStep,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\nimport image from './../assets/component-icons/progress-indicator.svg';\nimport { DraggableTileList } from '../components';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const AProgressIndicatorSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst handleStepUpdate = (key: string, value: any, index: number) => {\n\t\tconst step = {\n\t\t\t...selectedComponent.progressSteps[index],\n\t\t\t[key]: value\n\t\t};\n\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tprogressSteps: [\n\t\t\t\t...selectedComponent.progressSteps.slice(0, index),\n\t\t\t\tstep,\n\t\t\t\t...selectedComponent.progressSteps.slice(index + 1)\n\t\t\t]\n\t\t});\n\t};\n\n\tconst template = (item: any, index: number) => {\n\t\treturn <>\n\t\t\t<TextInput\n\t\t\t\tlight\n\t\t\t\tvalue={item.label}\n\t\t\t\tlabelText=\"Label\"\n\t\t\t\tonChange={(event: any) => handleStepUpdate('label', event.currentTarget.value, index)} />\n\t\t\t<TextInput\n\t\t\t\tlight\n\t\t\t\tvalue={item.secondaryLabel}\n\t\t\t\tlabelText='Secondary label'\n\t\t\t\tonChange={(event: any) => handleStepUpdate('secondaryLabel', event.currentTarget.value, index)} />\n\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t<Checkbox\n\t\t\t\t\tstyle={{ display: 'inline-flex' }}\n\t\t\t\t\tlabelText='Is invalid'\n\t\t\t\t\tid={`invalid-select-${index}`}\n\t\t\t\t\tchecked={item.invalid}\n\t\t\t\t\tonChange={(checked: any) => handleStepUpdate('invalid', checked, index)} />\n\t\t\t\t<Checkbox\n\t\t\t\t\tstyle={{ display: 'inline-flex' }}\n\t\t\t\t\tlabelText='Is disabled'\n\t\t\t\t\tid={`disabled-select-${index}`}\n\t\t\t\t\tchecked={item.disabled}\n\t\t\t\t\tonChange={(checked: any) => handleStepUpdate('disabled', checked, index)} />\n\t\t\t</div>\n\t\t</>;\n\t};\n\n\tconst updateStepList = (newList: any[]) => {\n\t\tsetComponent({\n\t\t\t...selectedComponent,\n\t\t\tprogressSteps: newList\n\t\t});\n\t};\n\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Is vertical'\n\t\t\tid='layout-select'\n\t\t\tchecked={selectedComponent.isVertical}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tisVertical: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<DraggableTileList\n\t\t\tdataList={[...selectedComponent.progressSteps]}\n\t\t\tsetDataList={updateStepList}\n\t\t\tupdateItem={handleStepUpdate}\n\t\t\tdefaultObject={{\n\t\t\t\tlabel: 'Step',\n\t\t\t\tdescription: 'Description',\n\t\t\t\tsecondaryLabel: 'Optional label',\n\t\t\t\tinvalid: false,\n\t\t\t\tdisabled: false\n\t\t\t}}\n\t\t\ttemplate={template} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AProgressIndicatorCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\tvalue={selectedComponent.codeContext?.name}\n\t\tlabelText='Input name'\n\t\tonChange={(event: any) => {\n\t\t\tsetComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t}\n\t\t\t});\n\t\t}}\n\t/>;\n};\n\nexport const AProgressIndicator = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<ProgressIndicator\n\t\t\tcurrentIndex={componentObj.currentIndex}\n\t\t\tvertical={componentObj.isVertical}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{\n\t\t\t\t\tcomponentObj.progressSteps.map((step: any, index: number) => (\n\t\t\t\t\t\t<ProgressStep {...step} key={index} />\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</ProgressIndicator>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AProgressIndicator,\n\tsettingsUI: AProgressIndicatorSettingsUI,\n\tcodeUI: AProgressIndicatorCodeUI,\n\ttype: 'progress-indicator',\n\tkeywords: ['progress', 'indicator', 'step', 'wizard'],\n\tname: 'Progress indicator',\n\tdefaultComponentObj: {\n\t\ttype: 'progress-indicator',\n\t\tisVertical: true,\n\t\tcurrentIndex: 0,\n\t\tspacing: true,\n\t\tprogressSteps: [\n\t\t\t{\n\t\t\t\tlabel: 'Step 1',\n\t\t\t\tdescription: 'Step 1 description',\n\t\t\t\tsecondaryLabel: 'Optional label',\n\t\t\t\tinvalid: false,\n\t\t\t\tdisabled: false\n\t\t\t}\n\t\t]\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => {\n\t\t\t\tconst steps = json.progressSteps.map((step: any) => ({\n\t\t\t\t\ttext: step.label,\n\t\t\t\t\tdescription: step.secondaryLabel,\n\t\t\t\t\tstate: ['incomplete'],\n\t\t\t\t\t...(step.disabled ? { disabled: step.disabled } : {})\n\t\t\t\t}));\n\t\t\t\treturn `@Input() ${nameStringToVariableString(json.codeContext?.name)}Steps = ${JSON.stringify(steps)};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Vertical = ${json.isVertical || false}\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Spacing = ${json.spacing || false}\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Current = ${json.currentIndex}`;\n\t\t\t},\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}StepSelected = new EventEmitter<Event>();`,\n\t\t\timports: ['ProgressIndicatorModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-progress-indicator\n\t\t\t\t\t[steps]=\"${nameStringToVariableString(json.codeContext?.name)}Steps\"\n\t\t\t\t\t[current]=\"${nameStringToVariableString(json.codeContext?.name)}Current\"\n\t\t\t\t\t(stepSelected)=\"${nameStringToVariableString(json.codeContext?.name)}StepSelected.emit($event)\"\n\t\t\t\t\t[spacing]=\"${nameStringToVariableString(json.codeContext?.name)}Spacing\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t</ibm-progress-indicator>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['ProgressIndicator', 'ProgressStep'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ProgressIndicator\n\t\t\t\t\tcurrentIndex={state[\"${json.codeContext?.name}StepIndex\"] | 0}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={(selectedStep) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\tvalue: selectedStep\n\t\t\t\t\t\t}\n\t\t\t\t\t})}>\n\t\t\t\t\t${json.progressSteps.map((step: any) => (`<ProgressStep\n\t\t\t\t\t\t\tlabel=\"${step.label}\"\n\t\t\t\t\t\t\t${step.invalid ? 'invalid' : ''}\n\t\t\t\t\t\t\t${step.disabled ? 'disabled' : ''}\n\t\t\t\t\t\t\t${step.secondaryLabel !== undefined || step.secondaryLabel !== '' ? `secondaryLabel=\"${step.secondaryLabel}\"` : ''}\n\t\t\t\t\t\t\t${step.description !== undefined || step.description !== '' ? `description=\"${step.description}\"` : ''}\n\t\t\t\t\t\t/>`)).join('\\n')}\n\t\t\t\t\t</ProgressIndicator>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tRow,\n\tCheckbox\n} from 'carbon-components-react';\nimport { Add32 } from '@carbon/icons-react';\nimport { AComponent } from './a-component';\nimport { getParentComponent, updatedState } from '../components';\nimport { css, cx } from 'emotion';\nimport { useFragment } from '../context';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nexport const ARowSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Condensed'\n\t\t\tid='grid-condensed'\n\t\t\tchecked={selectedComponent.condensed}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcondensed: checked\n\t\t\t})} />\n\t\t<Checkbox\n\t\t\tlabelText='Narrow'\n\t\t\tid='grid-narrow'\n\t\t\tchecked={selectedComponent.narrow}\n\t\t\tonChange={(checked: boolean) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tnarrow: checked\n\t\t\t})} />\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-left: calc(50% - 10px);\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n`;\n\nconst addStyleTop = cx(addStyle, css`\n\ttop: -20px;\n`);\n\nconst addStyleBottom = cx(addStyle, css`\n\tbottom: -20px;\n\tz-index: 1;\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer`;\n\nexport const ARow = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\t/**\n\t * @param offset 0 - add left, 1 - add right\n\t */\n\tconst addRow = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\ttype: 'row', items: [\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 1' }] },\n\t\t\t\t\t\t{ type: 'column', items: [{ type: 'text', text: 'Cell 2' }] }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\treturn (\n\t\t// position: relative doesn't seem to affect the grid layout and it's needed atm\n\t\t// to position right add icon\n\t\t<AComponent componentObj={componentObj} selected={selected} {...rest}>\n\t\t\t<Row\n\t\t\tclassName={cx(\n\t\t\t\tcomponentObj.cssClasses?.map((cc: any) => cc.id).join(' '),\n\t\t\t\tcss`position: relative`\n\t\t\t)}\n\t\t\tcondensed={componentObj.condensed}\n\t\t\tnarrow={componentObj.narrow}>\n\t\t\t\t<span className={cx(addStyleTop, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow();\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t<span className={cx(addStyleBottom, selected ? css`` : css`display: none`)}>\n\t\t\t\t\t<Add32 onClick={(event: any) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\taddRow(1);\n\t\t\t\t\t}} className={iconStyle}/>\n\t\t\t\t</span>\n\t\t\t\t{children}\n\t\t\t</Row>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ARow,\n\tsettingsUI: ARowSettingsUI,\n\tkeywords: ['grid', 'row'],\n\tname: 'Row',\n\thideFromElementsPane: true,\n\tdefaultComponentObj: undefined,\n\ttype: 'row',\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['GridModule'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t},\n\t\treact: {\n\t\t\timports: ['Row'],\n\t\t\tisNotDirectExport: true,\n\t\t\tcode: (_) => ''\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tDropdown,\n\tTag,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/tag.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const ATagSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst typeItems = [\n\t\t{ id: 'gray', text: 'Gray' },\n\t\t{ id: 'red', text: 'Red' },\n\t\t{ id: 'magenta', text: 'Magenta' },\n\t\t{ id: 'purple', text: 'Purple' },\n\t\t{ id: 'blue', text: 'Blue' },\n\t\t{ id: 'cyan', text: 'Cyan' },\n\t\t{ id: 'teal', text: 'Teal' },\n\t\t{ id: 'green', text: 'Green' },\n\t\t{ id: 'cool-gray', text: 'Cool gray' },\n\t\t{ id: 'warm-gray', text: 'Warm gray' },\n\t\t{ id: 'high-contrast', text: 'High contrast' },\n\t\t{ id: 'outline', text: 'Outline' }\n\t];\n\n\tconst sizeItems = [\n\t\t{ id: 'md', text: 'Medium' },\n\t\t{ id: 'sm', text: 'Small' }\n\t];\n\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.title}\n\t\t\tlabelText='Title'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<Dropdown\n\t\t\tlabel='Type'\n\t\t\ttitleText='Type'\n\t\t\titems={typeItems}\n\t\t\tinitialSelectedItem={typeItems.find(item => item.id === selectedComponent.kind)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tkind: event.selectedItem.id\n\t\t\t})}\n\t\t/>\n\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.size)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tsize: event.selectedItem.id\n\t\t\t})}\n\t\t/>\n\n\t\t<Checkbox\n\t\t\tlabelText='Is filter'\n\t\t\tid='filter'\n\t\t\tchecked={selectedComponent.filter}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tfilter: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATag = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Tag\n\t\t\ttype={componentObj.kind}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tsize={componentObj.size}\n\t\t\tfilter={componentObj.filter}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Tag>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATag,\n\tsettingsUI: ATagSettingsUI,\n\trender: ({ componentObj, select, remove, selected }) => <ATag\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.title}\n\t</ATag>,\n\tkeywords: ['tag'],\n\tname: 'Tag',\n\ttype: 'tag',\n\tdefaultComponentObj: {\n\t\ttype: 'tag',\n\t\t// This field is `type` in the `Tag` component\n\t\tkind: 'gray',\n\t\tsize: 'md',\n\t\tfilter: false,\n\t\tdisabled: false,\n\t\ttitle: 'Tag'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Title = \"${json.title}\";\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Type = \"${json.kind}\";`,\n\t\t\toutputs: ({ json }) => `${json.filter\n\t\t\t\t? `@Output() ${nameStringToVariableString(json.codeContext?.name)}Close = new EventEmitter();`\n\t\t\t\t: ''\n\t\t\t}`,\n\t\t\timports: ['TagModule'],\n\t\t\t// NOTE: Angular tag does not support 'disabled' yet. Filtered tag is able to take in 'disabled' as an input\n\t\t\t// but it doesn't do anything.\n\t\t\t// Issue is being tracked here: https://github.com/IBM/carbon-components-angular/issues/2061\n\t\t\tcode: ({ json }) => {\n\t\t\t\tconst defaultProps = `\n\t\t\t\t\t[type]=\"${nameStringToVariableString(json.codeContext?.name)}Type\"\n\t\t\t\t\t[title]=\"${nameStringToVariableString(json.codeContext?.name)}Title\"\n\t\t\t\t\t${`size='${json.size ? json.size : 'md'}'`}\n\t\t\t\t`;\n\t\t\t\tif (json.filter) {\n\t\t\t\t\treturn `<ibm-tag-filter\n\t\t\t\t\t\t${defaultProps}\n\t\t\t\t\t\t(close)='${nameStringToVariableString(json.codeContext?.name)}Close.emit()'\n\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t[disabled]='${json.disabled}'>\n\t\t\t\t\t\t\t${json.title}\n\t\t\t\t\t</ibm-tag-filter>\n\t\t\t\t\t`;\n\t\t\t\t}\n\n\t\t\t\treturn `<ibm-tag\n\t\t\t\t\t${defaultProps}\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.title}\n\t\t\t\t</ibm-tag>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Tag'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Tag\n\t\t\t\t\t${json.kind && ` type=\"${json.kind}\"`}\n\t\t\t\t\t${`size='${json.size ? json.size : 'md'}'`}\n\t\t\t\t\tdisabled={${json.disabled}}\n\t\t\t\t\tfilter={${json.filter}}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.title}\n\t\t\t\t</Tag>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput, Dropdown, Search } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/search.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ASearchInputSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst sizeItems = [\n\t\t{ id: 'sm', text: 'Small' },\n\t\t{ id: 'lg', text: 'Large' },\n\t\t{ id: 'xl', text: 'Extra large' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Size'\n\t\t\ttitleText='Size'\n\t\t\titems={sizeItems}\n\t\t\tinitialSelectedItem={sizeItems.find(item => item.id === selectedComponent.inputSize)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinputSize: event.selectedItem.id\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.defaultValue}\n\t\t\tlabelText='Default value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultValue: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ASearchInputCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ASearchInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<Search\n\t\t\t\tsize={componentObj.inputSize}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ASearchInput,\n\tsettingsUI: ASearchInputSettingsUI,\n\tcodeUI: ASearchInputCodeUI,\n\tkeywords: ['search', 'search input'],\n\tname: 'Search',\n\ttype: 'search',\n\tdefaultComponentObj: {\n\t\ttype: 'search',\n\t\tlabel: 'Search',\n\t\tplaceholder: 'Search',\n\t\tinputSize: 'lg'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['SearchModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-search\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\">\n\t\t\t\t</ibm-search>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Search'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Search\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AText = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t{...rest}>\n\t\t\t{children}\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AText,\n\tsettingsUI: ATextSettingsUI,\n\trender: ({ componentObj, select, remove, selected }) => <AText\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</AText>,\n\tkeywords: ['text'],\n\tname: 'Text',\n\ttype: 'text',\n\tdefaultComponentObj: {\n\t\ttype: 'text',\n\t\ttext: 'Text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: [],\n\t\t\tcode: ({ json }) => {\n\t\t\t\tif (json.cssClasses) {\n\t\t\t\t\treturn `<span ${angularClassNamesFromComponentObj(json)}>${json.text}</span>`;\n\t\t\t\t}\n\t\t\t\treturn json.text;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\tcode: ({ json }) => {\n\t\t\t\tif (json.cssClasses) {\n\t\t\t\t\treturn `<span ${reactClassNamesFromComponentObj(json)}>${json.text}</span>`;\n\t\t\t\t}\n\t\t\t\treturn json.text;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextArea, TextInput } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text-area.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextAreaSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATextAreaCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ATextArea = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent componentObj={componentObj} {...rest}>\n\t\t\t<TextArea\n\t\t\t\tkind={componentObj.kind}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tplaceholder={componentObj.placeholder}\n\t\t\t\thelperText={componentObj.helperText}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATextArea,\n\tsettingsUI: ATextAreaSettingsUI,\n\tcodeUI: ATextAreaCodeUI,\n\tkeywords: ['textarea', 'text area', 'input'],\n\tname: 'Text area',\n\ttype: 'text-area',\n\tdefaultComponentObj: {\n\t\ttype: 'text-area',\n\t\tlabel: 'Text area label',\n\t\tplaceholder: 'Text area placeholder',\n\t\thelperText: 'Helper text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['InputModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-label\n\t\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t\t${json.label}\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tibmTextArea\n\t\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\t\tplaceholder=\"${json.placeholder}\"></textarea>\n\t\t\t\t</ibm-label>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TextArea'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<TextArea\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { TextInput, Dropdown } from 'carbon-components-react';\nimport { AComponent } from './a-component';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\nimport { ComponentInfo } from '.';\n\nimport image from './../assets/component-icons/text-input.svg';\nimport { angularClassNamesFromComponentObj, reactClassNamesFromComponentObj } from '../utils/fragment-tools';\n\nexport const ATextInputSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst typeItems = [\n\t\t{ id: 'text', text: 'Text' },\n\t\t{ id: 'email', text: 'Email' },\n\t\t{ id: 'password', text: 'Password' }\n\t];\n\n\treturn <>\n\t\t<Dropdown\n\t\t\tlabel='Type'\n\t\t\ttitleText='Type'\n\t\t\titems={typeItems}\n\t\t\tinitialSelectedItem={typeItems.find(item => item.id === selectedComponent.inputType)}\n\t\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\t\tonChange={(event: any) => setComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tinputType: event.selectedItem.id\n\t\t\t})} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.label}\n\t\t\tlabelText='Label'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlabel: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.helperText}\n\t\t\tlabelText='Helper text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\thelperText: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.placeholder}\n\t\t\tlabelText='Placeholder'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tplaceholder: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.defaultValue}\n\t\t\tlabelText='Default value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultValue: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATextInputCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn (\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport const ATextInput = ({\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tclassName={css`position: relative; display: flex`}\n\t\t{...rest}>\n\t\t\t<TextInput\n\t\t\t\ttype={componentObj.inputType}\n\t\t\t\tlabelText={componentObj.label}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\t{...componentObj}\n\t\t\t\t{...rest} />\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATextInput,\n\tsettingsUI: ATextInputSettingsUI,\n\tcodeUI: ATextInputCodeUI,\n\tkeywords: ['text', 'text', 'input'],\n\tname: 'Text input',\n\ttype: 'text-input',\n\tdefaultComponentObj: {\n\t\ttype: 'text-input',\n\t\tlabel: 'Text input label',\n\t\tplaceholder: 'Text input placeholder',\n\t\thelperText: 'Helper text',\n\t\tinputType: 'text'\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: (_) => '',\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['InputModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<ibm-label\n\t\t\t\t\thelperText=\"${json.helperText}\">\n\t\t\t\t\t\t${json.label}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tibmText\n\t\t\t\t\t\t\t${angularClassNamesFromComponentObj(json)}\n\t\t\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t\t\tplaceholder=\"${json.placeholder}\">\n\t\t\t\t</ibm-label>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TextInput'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<TextInput\n\t\t\t\t\tlabelText=\"${json.label}\"\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\thelperText=\"${json.helperText}\"\n\t\t\t\t\tplaceholder=\"${json.placeholder}\"\n\t\t\t\t\tvalue={state[\"${json.codeContext?.name}\"]}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={handleInputChange} />`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Link, Checkbox, TextInput } from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from './a-component';\nimport { ComponentCssClassSelector } from '../components/css-class-selector';\n\nimport image from './../assets/component-icons/link.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../utils/fragment-tools';\n\nexport const ALinkSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.text}\n\t\t\tlabelText='Text'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\ttext: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disable-label'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Inline'\n\t\t\tid='Inline-select'\n\t\t\tchecked={selectedComponent.inline}\n\t\t\tonChange={(checked: boolean) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tinline: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ALinkCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.href || ''}\n\t\t\tlabelText='href'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\thref: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\nexport const ALink = ({\n\tchildren,\n\tcomponentObj,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<Link\n\t\t\tinline={componentObj.inline}\n\t\t\tdisabled={componentObj.disabled}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}>\n\t\t\t\t{children}\n\t\t\t</Link>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ALink,\n\tsettingsUI: ALinkSettingsUI,\n\tcodeUI: ALinkCodeUI,\n\trender: ({ componentObj, select, remove, selected }) => <ALink\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}>\n\t\t\t{componentObj.text}\n\t</ALink>,\n\tkeywords: ['link'],\n\tname: 'Link',\n\ttype: 'link',\n\tdefaultComponentObj: {\n\t\ttype: 'link',\n\t\ttext: 'Link',\n\t\tinline: false,\n\t\tdisabled: false,\n\t\tcodeContext: {\n\t\t\thref: '#'\n\t\t}\n\t},\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Inline = ${json.inline};\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled};\n\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Href = '${json.codeContext?.href}'`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Clicked = new EventEmitter();`,\n\t\t\timports: ['LinkModule'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<a\n\t\t\t\t\tibmLink\n\t\t\t\t\t[inline]=\"${nameStringToVariableString(json.codeContext?.name)}Inline\"\n\t\t\t\t\t[disabled]=\"${nameStringToVariableString(json.codeContext?.name)}Disabled\"\n\t\t\t\t\t[href]=\"${nameStringToVariableString(json.codeContext?.name)}Href\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.text}\n\t\t\t\t</a>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Link'],\n\t\t\tcode: ({ json }) => {\n\t\t\t\treturn `<Link\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${json.inline !== undefined ? `inline={${json.inline}}` : ''}\n\t\t\t\t\t${json.codeContext?.href !== undefined && json.codeContext?.href !== '' ? `href='${json.codeContext?.href}'` : ''}\n\t\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t${json.text}\n\t\t\t\t</Link>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { Dropdown } from 'carbon-components-react';\nimport { getParentComponent, updatedState } from '../../components';\nimport { useFragment } from '../../context';\n\n// Combine all items from 'top' & 'bottom' folds into a single array\nconst getExpandableTileItems = (expandableTile: any) => {\n\tconst items: any = [];\n\texpandableTile.items.forEach((item: any) => {\n\t\tif (item.type === 'tile-fold') {\n\t\t\titems.push(...item.items);\n\t\t} else {\n\t\t\titems.push({ ...item });\n\t\t}\n\t});\n\n\treturn items;\n};\n\n/**\n *  Morph parent (Group) & children to other group type\n */\nconst groupToGroup = (selectedItem: any, component: any) => {\n\treturn {\n\t\t...component,\n\t\t...selectedItem.defaultComponent,\n\t\titems: component.items.map((tile: any) => ({\n\t\t\t...tile,\n\t\t\t...selectedItem.childDefaultComponent\n\t\t}))\n\t};\n};\n\n/**\n * Takes the children tiles of the group, converts them & places them in current components position\n */\nconst groupToSingle = (selectedItem: any, component: any, parentComponent: any) => {\n\tconst tiles = component.items.map((tile: any) => {\n\t\tconst tileItems = [...tile.items];\n\n\t\t// Adds empty bottom fold\n\t\tif (selectedItem.id === 'expandabletile') {\n\t\t\ttileItems.push(...selectedItem.defaultComponent.items);\n\t\t}\n\n\t\treturn {\n\t\t\t...tile,\n\t\t\t...selectedItem.defaultComponent,\n\t\t\titems: tileItems\n\t\t};\n\t});\n\n\t// We are not destructuring entire component object since we do not want tile `group` specific attributes\n\tconst componentIndex = parentComponent.items.indexOf(component);\n\tconst items = [\n\t\t...parentComponent.items.slice(0, componentIndex),\n\t\t...tiles,\n\t\t...parentComponent.items.slice(componentIndex + 1)\n\t];\n\n\treturn {\n\t\t...parentComponent,\n\t\titems\n\t};\n};\n\n/**\n * Sets current component as a wrapper & passes a single tile as an item (child)\n */\nconst singleToGroup = (selectedItem: any, component: any) => {\n\treturn {\n\t\t...component,\n\t\t...selectedItem.defaultComponent,\n\t\titems: [\n\t\t\t{\n\t\t\t\t...selectedItem.childDefaultComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tformItemName: component.codeContext?.name\n\t\t\t\t},\n\t\t\t\titems: (component.type === 'expandable-tile') ? getExpandableTileItems(component) : [...component.items]\n\t\t\t}\n\t\t],\n\t\ttileGroup: true\n\t};\n};\n\n/**\n * Majority of the atrributes are the same, so they will be overwrriten to default state\n */\nconst singleToSingle = (selectedItem: any, component: any) => {\n\tconst items = [];\n\n\tif (component.type === 'expandable-tile') {\n\t\titems.push(...getExpandableTileItems(component));\n\t} else if (selectedItem.id === 'expandabletile') {\n\t\titems.push(...component.items, ...selectedItem.defaultComponent.items);\n\t} else {\n\t\titems.push(...component.items);\n\t}\n\n\treturn {\n\t\t...component,\n\t\t...selectedItem.defaultComponent,\n\t\titems\n\t};\n};\n\n/**\n * Dropdown component to morph between different tiles\n */\nexport const TileMorphism = ({ component, setComponent }: any) => {\n\tconst tileTypes = [\n\t\t{\n\t\t\tid: 'tile',\n\t\t\ttext: 'Tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'tile'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'clickabletile',\n\t\t\ttext: 'Clickable tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'clickable-tile'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'expandabletile',\n\t\t\ttext: 'Expandable tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'expandable-tile',\n\t\t\t\texpanded: true,\n\t\t\t\toutline: false,\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'tile-fold',\n\t\t\t\t\t\titems: []\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'selectabletile',\n\t\t\ttext: 'Standalone selectable tile',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tstandalone: true,\n\t\t\t\tdisabled: false,\n\t\t\t\tselected: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'selectableTileGroup',\n\t\t\ttext: 'Multiselect tiles',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'selectable-tile-group',\n\t\t\t\ttileGroup: true\n\t\t\t},\n\t\t\tchildDefaultComponent: {\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tselected: false,\n\t\t\t\tstandalone: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'radioTileGroup',\n\t\t\ttext: 'Radio tiles',\n\t\t\tdefaultComponent: {\n\t\t\t\ttype: 'radio-tile-group',\n\t\t\t\tlegend: 'Radio Tile Group',\n\t\t\t\ttileGroup: true\n\t\t\t},\n\t\t\tchildDefaultComponent: {\n\t\t\t\ttype: 'radio-tile'\n\t\t\t}\n\t\t}\n\t];\n\n\tconst [fragment, setFragment] = useFragment();\n\n\tconst convert = ({ selectedItem }: any) => {\n\t\t// Conversion to different types\n\t\tif (component?.tileGroup && selectedItem.defaultComponent?.tileGroup) {\n\t\t\tsetComponent(\n\t\t\t\tgroupToGroup(selectedItem, component)\n\t\t\t);\n\t\t} else if (component?.tileGroup && !selectedItem.defaultComponent?.tileGroup) {\n\t\t\tconst parentComponent: any = getParentComponent(fragment.data, component);\n\n\t\t\tsetFragment({\n\t\t\t\t...fragment,\n\t\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\t\ttype: 'update',\n\t\t\t\t\tcomponent: groupToSingle(selectedItem, component, parentComponent)\n\t\t\t\t})\n\t\t\t});\n\t\t} else if (!component.tileGroup && selectedItem.defaultComponent?.tileGroup) {\n\t\t\tsetComponent(\n\t\t\t\tsingleToGroup(selectedItem, component)\n\t\t\t);\n\t\t} else {\n\t\t\tsetComponent(\n\t\t\t\tsingleToSingle(selectedItem, component)\n\t\t\t);\n\t\t}\n\t};\n\n\treturn <Dropdown\n\t\tid=\"tile-morpher\"\n\t\tlabel=\"Convert to another tile type\"\n\t\ttitleText=\"Tile type\"\n\t\tinitialSelectedItem={tileTypes.find(item => item.id === component.type)}\n\t\titems={tileTypes}\n\t\titemToString={(item: any) => (item ? item.text : '')}\n\t\tonChange={convert}\n\t/>;\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tTextInput,\n\tTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '../';\nimport image from '../../assets/component-icons/tile.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ATileSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ATileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\tvalue={selectedComponent.codeContext?.name}\n\t\tlabelText='Input name'\n\t\tonChange={(event: any) => {\n\t\t\tsetComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t}\n\t\t\t});\n\t\t}}\n\t/>;\n};\n\nexport const ATile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tselected={selected}\n\t\t{...rest}>\n\t\t\t<Tile\n\t\t\tonDrop={onDrop}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\tlight={componentObj.light}>\n\t\t\t\t{children}\n\t\t\t</Tile>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATile,\n\tsettingsUI: ATileSettingsUI,\n\tkeywords: ['tile', 'card'],\n\tname: 'Tile',\n\ttype: 'tile',\n\tdefaultComponentObj: {\n\t\ttype: 'tile',\n\t\titems: [\n\t\t\t{ type: 'text', text: 'A simple tile' }\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ATile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t{componentObj.items.map((tile: any) => renderComponents(tile))}\n\t</ATile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Theme = '${json.light ? 'light' : ''}';`,\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-tile\n\t\t\t\t\t[theme]=\"${nameStringToVariableString(json.codeContext?.name)}Theme\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['Tile'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<Tile\n\t\t\t\t\t${json.light !== undefined ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</Tile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tClickableTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport image from '../../assets/component-icons/tile-clickable.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const AClickableTileSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AClickableTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.href || ''}\n\t\t\tlabelText='href for clickable UI'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\thref: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\nexport const AClickableTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\t// Prevent users from being redirected\n\tconst onClick = (event: any) => {\n\t\tevent.preventDefault();\n\t};\n\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\theadingCss={css`display: block;`}\n\t\tselected={selected}\n\t\t{...rest}>\n\t\t\t<ClickableTile\n\t\t\tonClick={onClick}\n\t\t\tonDrop={onDrop}\n\t\t\tlight={componentObj.light}\n\t\t\thref={componentObj.codeContext?.href}\n\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\tdisabled={componentObj.disabled}>\n\t\t\t\t{children}\n\t\t\t</ClickableTile>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AClickableTile,\n\tsettingsUI: AClickableTileSettingsUI,\n\tcodeUI: AClickableTileCodeUI,\n\tkeywords: ['tile', 'clickable', 'card'],\n\tname: 'Clickable tile',\n\ttype: 'clickable-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'clickable-tile',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'text',\n\t\t\t\ttext: 'A clickable tile'\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AClickableTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</AClickableTile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Href = '${json.href}';\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Disabled = ${json.disabled || false}`,\n\t\t\toutputs: (_) => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-clickable-tile\n\t\t\t\t\t[href]=${nameStringToVariableString(json.codeContext?.name)}Href\n\t\t\t\t\t[disabled]=${nameStringToVariableString(json.codeContext?.name)}Disabled\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-clickable-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['ClickableTile'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ClickableTile\n\t\t\t\t\t${json.codeContext?.href !== undefined && json.codeContext?.href !== '' ? `href='${json.codeContext?.href}'` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light=\"${json.light}\"` : ''}\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ClickableTile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tExpandableTile,\n\tTileAboveTheFoldContent,\n\tTextInput\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport image from '../../assets/component-icons/tile-expandable.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const AExpandableSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Expanded'\n\t\t\tid='expanded'\n\t\t\tchecked={selectedComponent.expanded}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\texpanded: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Show outline'\n\t\t\tid='outline'\n\t\t\tchecked={selectedComponent.outline}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\toutline: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const AExpandableTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>;\n};\n\nconst showOutlineStyle = css`\n\tspan.bx--tile-content__above-the-fold,\n\tspan.bx--tile-content__below-the-fold {\n\t\tmin-height: 16px;\n\t\toutline: 1px dashed #78a9ff;\n\t}\n`;\n\nexport const AExpandableTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\tselected={selected}\n\t\theadingCss={css`display: block;`}\n\t\t{...rest}>\n\t\t\t<ExpandableTile\n\t\t\tlight={componentObj.light}\n\t\t\tclassName={`${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')} ${componentObj.outline ? showOutlineStyle : ''}`}\n\t\t\texpanded={componentObj.expanded}>\n\t\t\t\t<TileAboveTheFoldContent onDrop={onDrop}>\n\t\t\t\t\t{children.filter(({ props }: any) => props && props.componentObj.type !== 'tilefold')}\n\t\t\t\t</TileAboveTheFoldContent>\n\t\t\t\t{\n\t\t\t\t\t// Renders bottom fold component\n\t\t\t\t\tchildren.filter(({ props }: any) => props && props.componentObj.type === 'tilefold')\n\t\t\t\t}\n\t\t\t</ExpandableTile>\n\t\t</AComponent>\n\t);\n};\n\n// Splits data into folds - all exports will have a common approach\nconst getFoldObjects = (json: any) => {\n\treturn {\n\t\taboveFold: json.items.filter((item: any) => item.type !== 'tilefold'),\n\t\tbelowFold: json.items.filter((item: any) => item.type === 'tilefold')\n\t};\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: AExpandableTile,\n\tsettingsUI: AExpandableSettingsUI,\n\tkeywords: ['tile', 'fold', 'expandable'],\n\tname: 'Expandable tile',\n\ttype: 'expandable-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'expandable-tile',\n\t\tlight: false,\n\t\texpanded: true,\n\t\toutline: false,\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'text',\n\t\t\t\ttext: 'Above fold'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'tile-fold',\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: 'Below fold'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <AExpandableTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t{componentObj.items.map((fold: any) => renderComponents(fold))}\n\t</AExpandableTile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Expanded = ${json.expanded}`,\n\t\t\toutputs: () => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\tconst { aboveFold, belowFold } = getFoldObjects(json);\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-expandable-tile\n\t\t\t\t\t${json.expanded !== undefined ? `[expanded]=\"${nameStringToVariableString(json.codeContext?.name)}Expanded\"` : ''}\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t<span class=\"bx--tile-content__above-the-fold\">\n\t\t\t\t\t\t\t${aboveFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t${belowFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-expandable-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['ExpandableTile', 'TileAboveTheFoldContent', 'TileBelowTheFoldContent'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\tconst { aboveFold, belowFold } = getFoldObjects(json);\n\t\t\t\treturn `<ExpandableTile\n\t\t\t\t\t${json.light !== undefined && !!json.light ? `light={${json.light}}` : ''}\n\t\t\t\t\t${json.expanded !== undefined && !!json.expanded ? `expanded={${json.expanded}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t<TileAboveTheFoldContent>\n\t\t\t\t\t\t\t${aboveFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t\t</TileAboveTheFoldContent>\n\t\t\t\t\t\t${belowFold.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ExpandableTile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React from 'react';\nimport {\n\tTileBelowTheFoldContent\n} from 'carbon-components-react';\nimport { AComponent, ComponentInfo } from '../a-component';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport {\n\tangularClassNamesFromComponentObj,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ATileFoldSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />;\n};\n\nexport const ATileFold = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<AComponent\n\t\tcomponentObj={componentObj}\n\t\t{...rest}>\n\t\t\t<TileBelowTheFoldContent onDrop={onDrop}>{children}</TileBelowTheFoldContent>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ATileFold,\n\tsettingsUI: ATileFoldSettingsUI,\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ATileFold\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</ATileFold>,\n\tkeywords: ['tile', 'tile fold', 'fold'],\n\tname: 'tilefold',\n\thideFromElementsPane: true,\n\timage: undefined,\n\ttype: 'tile-fold',\n\tdefaultComponentObj: {\n\t\ttype: 'tile-fold',\n\t\titems: []\n\t},\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: () => '',\n\t\t\toutputs: () => '',\n\t\t\timports: [],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t// Appends below the fold class to class list\n\t\t\t\tlet classes = angularClassNamesFromComponentObj(json);\n\t\t\t\tif (classes) {\n\t\t\t\t\tclasses = classes.split('=\"').join('=\"bx--tile-content__below-the-fold ');\n\t\t\t\t} else {\n\t\t\t\t\tclasses = 'class=\"bx--tile-content__below-the-fold\"';\n\t\t\t\t}\n\n\t\t\t\treturn `<span ${classes}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<TileBelowTheFoldContent\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t</TileBelowTheFoldContent>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tSelectableTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport image from '../../assets/component-icons/tile-selectable.svg';\nimport {\n\tAdder,\n\tgetParentComponent,\n\tupdatedState\n} from '../../components';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ASelectableTileSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t{\n\t\t\tselectedComponent.standalone && <>\n\t\t\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t\t\t<Checkbox\n\t\t\t\t\tlabelText='Light theme'\n\t\t\t\t\tid='theme-select'\n\t\t\t\t\tchecked={selectedComponent.light}\n\t\t\t\t\tonChange={(checked: any) => {\n\t\t\t\t\t\tsetComponent({\n\t\t\t\t\t\t\t...selectedComponent,\n\t\t\t\t\t\t\tlight: checked\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</>\n\t\t}\n\t\t<Checkbox\n\t\t\tlabelText='Selected'\n\t\t\tid='selected'\n\t\t\tchecked={selectedComponent.selected}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tselected: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ASelectableTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.title || ''}\n\t\t\tlabelText='Title'\n\t\t\tplaceholder='Title attribute'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\ttitle: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.value || ''}\n\t\t\tlabelText='Value'\n\t\t\tplaceholder='Tile value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tvalue: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\n// Prevent users from clicking on the selectable tile\nconst preventCheckEvent = css`\n\tpointer-events: none;\n\t.bx--tile-content {\n\t\tpointer-events: initial;\n\t}\n`;\n\nexport const ASelectableTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\n\tconst addTile = (offset = 0) => setFragment({\n\t\t...fragment,\n\t\tdata: updatedState(\n\t\t\tfragment.data,\n\t\t\t{\n\t\t\t\ttype: 'insert',\n\t\t\t\tcomponent: {\n\t\t\t\t\tstandalone: false,\n\t\t\t\t\ttype: 'selectable-tile',\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\tformItemName: componentObj.codeContext?.formItemName\n\t\t\t\t\t},\n\t\t\t\t\t...(componentObj.light !== undefined ? { light: componentObj.light } : ''),\n\t\t\t\t\titems: [{ type: 'text', text: 'New selectable tile' }]\n\t\t\t\t}\n\t\t\t},\n\t\t\tparentComponent.id,\n\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t)\n\t});\n\n\t// Removing `for` attribute so users can select text and other non-form elements.\n\tuseEffect(() => {\n\t\tconst tileElement = document.getElementById(componentObj.codeContext.name);\n\t\tconst labelElement = tileElement?.parentElement?.querySelector('label.bx--tile.bx--tile--selectable');\n\t\t// Setting to empty instead of removing so users can select non-form elements within tile when a form element is present\n\t\t// Although form elements should never be added within another\n\t\tlabelElement?.setAttribute('for', '');\n\t}, [componentObj.codeContext]);\n\n\treturn (\n\t\t<Adder\n\t\t\tactive={parentComponent?.tileGroup && selected}\n\t\t\ttopAction={() => addTile()}\n\t\t\tbottomAction={() => addTile(1)}\n\t\t\tkey={componentObj.id}>\n\t\t\t<AComponent\n\t\t\t\tcomponentObj={componentObj}\n\t\t\t\theadingCss={css`display: block;`}\n\t\t\t\tclassName={css`cursor: pointer;`}\n\t\t\t\tselected={selected}\n\t\t\t\t{...rest}>\n\t\t\t\t\t<SelectableTile\n\t\t\t\t\tid={componentObj.codeContext?.name}\n\t\t\t\t\tname={componentObj.codeContext?.formItemName || componentObj.codeContext?.name}\n\t\t\t\t\ttitle={componentObj.title}\n\t\t\t\t\tvalue={componentObj.value}\n\t\t\t\t\tlight={componentObj.light}\n\t\t\t\t\tselected={componentObj.selected}\n\t\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\t\tclassName={`${preventCheckEvent} ${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}`}\n\t\t\t\t\tonDrop={onDrop}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</SelectableTile>\n\t\t\t</AComponent>\n\t\t</Adder>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ASelectableTile,\n\tsettingsUI: ASelectableTileSettingsUI,\n\tcodeUI: ASelectableTileCodeUI,\n\tkeywords: ['tile', 'card', 'multi', 'selectable'],\n\tname: 'Selectable tile',\n\ttype: 'selectable-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'selectable-tile',\n\t\tstandalone: true,\n\t\tdisabled: false,\n\t\tselected: false,\n\t\titems: [\n\t\t\t{ type: 'text', text: 'A standalone selectable tile' }\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ASelectableTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</ASelectableTile>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Selected = ${json.selected || false};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Value = '${json.value}';`,\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Change = new EventEmitter<Event>();`,\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light & disabled\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-selection-tile\n\t\t\t\t\t[value]=\"${nameStringToVariableString(json.codeContext?.name)}Value\"\n\t\t\t\t\t[selected]=\"${nameStringToVariableString(json.codeContext?.name)}Selected\"\n\t\t\t\t\t${json.standalone ? `(change)=\"${nameStringToVariableString(json.codeContext?.name)}Change.emit($event)\"` : ''}\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t\t</ibm-selection-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['SelectableTile'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\tconst stateFunction = json.standalone ?\n\t\t\t\t\t`() => {\n\t\t\t\t\t\thandleInputChange({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\t\tvalue: \"${json.codeContext?.value}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t})}` :\n\t\t\t\t\t`() =>\n\t\t\t\t\t\thandleSelectableTileChange(\n\t\t\t\t\t\t\t\"${json.codeContext?.formItemName}\",\n\t\t\t\t\t\t\t\"${json.codeContext?.name}\"\n\t\t\t\t\t\t)\n\t\t\t\t\t`;\n\n\t\t\t\treturn `<SelectableTile\n\t\t\t\t\tid=\"${json.codeContext?.name}\"\n\t\t\t\t\t${(json.codeContext?.value !== undefined && json.codeContext?.value !== '') ? `value=\"${json.codeContext?.value}\"` : ''}\n\t\t\t\t\t${(json.codeContext?.title !== undefined && json.codeContext?.title !== '') ? `title=\"${json.codeContext?.title}\"` : ''}\n\t\t\t\t\t${\n\t\t\t\t\t\t(json.codeContext?.formItemName !== undefined && !json.standalone)\n\t\t\t\t\t\t\t? `name=\"${json.codeContext?.formItemName}\"` : `name=\"${json.codeContext?.name}\"`\n\t\t\t\t\t}\n\t\t\t\t\t${json.selected !== undefined ? `selected={${json.selected}}` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light={${json.light}}` : ''}\n\t\t\t\t\t${json.disabled !== undefined && !!json.disabled ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonClick={${stateFunction}}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</SelectableTile>`;\n\t\t\t},\n\t\t\tadditionalCode: (json) => {\n\t\t\t\tif (json.standalone) {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\thandleSelectableTileChange: `const handleSelectableTileChange = (name, id) => {\n\t\t\t\t\t\thandleInputChange({\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t...state[name],\n\t\t\t\t\t\t\t\t\t[id]: !state[name]?.[id]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};`\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport { TextInput, Checkbox } from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { getParentComponent, updatedState } from '../../components';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\n\nimport image from '../../assets/component-icons/tile-selectable-group.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ASelectableTileGroupSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\t/**\n\t\t\t\t * It usually is not common for users to have different theme for each tile,\n\t\t\t\t * this approach will ensure users don't have to go through each child `tile` & update theme\n\t\t\t\t */\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked,\n\t\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t\t...tile,\n\t\t\t\t\t\tlight: checked\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ASelectableTileGroupCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\tvalue={selectedComponent.codeContext?.name}\n\t\tlabelText='Input name'\n\t\tonChange={(event: any) => {\n\t\t\tsetComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t},\n\t\t\t\t// Grouped form elements (Radio) within a fieldset should have the same name\n\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...tile.codeContext,\n\t\t\t\t\t\t// Selectable Tiles (Children) use formItemName\n\t\t\t\t\t\tformItemName: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t});\n\t\t}}\n\t/>;\n};\n\nexport const ASelectableTileGroup = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\t// Initialize the child tiles with the form item name\n\t// We use the name property because it unique by default\n\tuseEffect(() => {\n\t\tconst parentComponent: any = getParentComponent(fragment.data, componentObj);\n\t\tconst componentIndex = parentComponent.items.indexOf(componentObj);\n\t\tconst items = [\n\t\t\t...parentComponent.items.slice(0, componentIndex),\n\t\t\t{\n\t\t\t\t...componentObj,\n\t\t\t\titems: componentObj.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: { ...tile.codeContext, formItemName: componentObj.codeContext?.name }\n\t\t\t\t}))\n\t\t\t},\n\t\t\t...parentComponent.items.slice(componentIndex + 1)\n\t\t];\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent: {\n\t\t\t\t\t...parentComponent,\n\t\t\t\t\titems\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t\t// Disabling since we want to call this only once to initialize children `formItemName` attribute in code context\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\theadingCss={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t<div\n\t\t\t\trole=\"group\"\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\taria-label=\"Selectable tiles\">\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ASelectableTileGroup,\n\tsettingsUI: ASelectableTileGroupSettingsUI,\n\tcodeUI: ASelectableTileGroupCodeUI,\n\tkeywords: ['tile', 'card', 'multi', 'select'],\n\tname: 'Selectable tile group',\n\ttype: 'selectable-tile-group',\n\tdefaultComponentObj: {\n\t\ttype: 'selectable-tile-group',\n\t\ttileGroup: true,\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 1'\n\t\t\t\t},\n\t\t\t\tstandalone: false,\n\t\t\t\tselected: false,\n\t\t\t\titems: [{ type: 'text', text: 'Selectable tile A' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 2'\n\t\t\t\t},\n\t\t\t\tstandalone: false,\n\t\t\t\tselected: false,\n\t\t\t\titems: [{ type: 'text', text: 'Selectable tile B' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'selectable-tile',\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 3'\n\t\t\t\t},\n\t\t\t\tstandalone: false,\n\t\t\t\tselected: false,\n\t\t\t\titems: [{ type: 'text', text: 'Selectable tile C' }]\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ASelectableTileGroup\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((tile: any) => renderComponents(tile))}\n\t</ASelectableTileGroup>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: () => '',\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Selected = new EventEmitter<Event>();`,\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-tile-group\n\t\t\t\t\t(selected)=\"${nameStringToVariableString(json.codeContext?.name)}Selected.emit($event)\"\n\t\t\t\t\t[multiple]=\"true\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-tile-group>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: [],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<div\n\t\t\t\t\trole=\"group\"\n\t\t\t\t\taria-label=\"Selectable tiles\"\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</div>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tRadioTile\n} from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '..';\nimport {\n\tAdder,\n\tgetParentComponent,\n\tupdatedState\n} from '../../components';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ARadioTileSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\tconst [fragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, selectedComponent);\n\n\t// Removes checkmark from siblings and checks current\n\tconst updateParentDefaultChecked = (checked: boolean) => {\n\t\t// Deleting attribute to prevent from being in export\n\t\tif (!checked && parentComponent.defaultChecked) {\n\t\t\tdelete parentComponent.defaultChecked;\n\t\t} else {\n\t\t\tparentComponent.items.forEach((item: any) => {\n\t\t\t\titem.defaultChecked = false;\n\t\t\t});\n\n\t\t\tparentComponent.defaultChecked = selectedComponent.value;\n\t\t}\n\t};\n\n\treturn <>\n\t\t<Checkbox\n\t\t\tlabelText='Default checked'\n\t\t\tid='default-checked'\n\t\t\tchecked={selectedComponent.defaultChecked}\n\t\t\tonChange={(defaultChecked: any) => {\n\t\t\t\tupdateParentDefaultChecked(defaultChecked);\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdefaultChecked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ARadioTileCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.name}\n\t\t\tlabelText='Input name'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.codeContext?.value || ''}\n\t\t\tlabelText='Value*'\n\t\t\tplaceholder='Tile value'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\t\tvalue: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t</>;\n};\n\nexport const ARadioTile = ({\n\tchildren,\n\tcomponentObj,\n\tonDrop,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\t// Removing `for` attribute so users can select text and other non-form elements.\n\tuseEffect(() => {\n\t\tconst tileElement = document.getElementById(componentObj.codeContext?.name);\n\t\tconst labelElement = tileElement?.parentElement?.querySelector('label.bx--tile.bx--tile--selectable');\n\t\t// Setting to empty instead of removing so users can select non-form elements within tile when a form element is present\n\t\t// Although form elements should never be added within another\n\t\tlabelElement?.setAttribute('for', '');\n\t}, [componentObj.codeContext]);\n\n\tconst addRadio = (offset = 0) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(\n\t\t\t\tfragment.data,\n\t\t\t\t{\n\t\t\t\t\ttype: 'insert',\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\ttype: 'radio-tile',\n\t\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t\tvalue: 'Tile',\n\t\t\t\t\t\t\tformItemName: componentObj.codeContext?.formItemName\n\t\t\t\t\t\t},\n\t\t\t\t\t\t...(componentObj.light !== undefined ? { light: componentObj.light } : ''),\n\t\t\t\t\t\titems: [{ type: 'text', text: 'New radio tile' }]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tparentComponent.id,\n\t\t\t\tparentComponent.items.indexOf(componentObj) + offset\n\t\t\t)\n\t\t});\n\t};\n\n\treturn (\n\t\t<Adder\n\t\tactive={selected}\n\t\ttopAction={() => addRadio()}\n\t\tbottomAction={() => addRadio(1)}\n\t\tkey={componentObj.id}>\n\t\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\theadingCss={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t<RadioTile\n\t\t\t\tid={componentObj.codeContext?.name}\n\t\t\t\tname={componentObj.codeContext?.formItemName}\n\t\t\t\tlight={componentObj.light}\n\t\t\t\tchecked={componentObj.defaultChecked}\n\t\t\t\tdisabled={componentObj.disabled}\n\t\t\t\tvalue={componentObj.codeContext?.value}\n\t\t\t\tclassName={componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}\n\t\t\t\tonDrop={onDrop}>\n\t\t\t\t\t{children}\n\t\t\t\t</RadioTile>\n\t\t\t</AComponent>\n\t\t</Adder>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ARadioTile,\n\tsettingsUI: ARadioTileSettingsUI,\n\tcodeUI: ARadioTileCodeUI,\n\tkeywords: ['tile', 'card', 'radio', 'selectable'],\n\tname: 'Radio tile',\n\ttype: 'radio-tile',\n\tdefaultComponentObj: {\n\t\ttype: 'radio-tile',\n\t\tdisabled: false,\n\t\tdefaultChecked: false,\n\t\titems: []\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ARadioTile\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((item: any) => renderComponents(item))}\n\t</ARadioTile>,\n\t/**\n\t * Can only be added by adding tile-group or by clicking `plus` icon on top or bottom\n\t * of existing RadioTile\n\t */\n\thideFromElementsPane: true,\n\timage: undefined,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: ({ json }) => `@Input() ${nameStringToVariableString(json.codeContext?.name)}Checked = ${json.checked || false};\n\t\t\t\t@Input() ${nameStringToVariableString(json.codeContext?.name)}Value = '${json.value}';`,\n\t\t\toutputs: () => '',\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\t/**\n\t\t\t\t * @todo - CCA does not support light & disabled\n\t\t\t\t * https://github.com/IBM/carbon-components-angular/issues/1999\n\t\t\t\t */\n\t\t\t\treturn `<ibm-selection-tile\n\t\t\t\t\t[value]=\"${nameStringToVariableString(json.codeContext?.name)}Value\"\n\t\t\t\t\t[selected]=\"${nameStringToVariableString(json.codeContext?.name)}Selected\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-selection-tile>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['RadioTile'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<RadioTile\n\t\t\t\t\t${\n\t\t\t\t\t\t(json.codeContext?.formItemName !== undefined && json.codeContext?.formItemName !== '')\n\t\t\t\t\t\t\t? `name=\"${json.codeContext?.formItemName}\"` : ''\n\t\t\t\t\t}\n\t\t\t\t\t${(json.codeContext?.value !== undefined && json.codeContext?.value !== '') ? `value=\"${json.codeContext?.value}\"` : ''}\n\t\t\t\t\t${json.light !== undefined ? `light={${json.light}}` : ''}\n\t\t\t\t\t${json.defaultChecked ? `checked={${json.defaultChecked}}` : ''}\n\t\t\t\t\t${json.disabled !== undefined && !!json.disabled ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</RadioTile>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","import React, { useEffect } from 'react';\nimport { TextInput, Checkbox } from 'carbon-components-react';\nimport { AComponent } from '../a-component';\nimport { TileMorphism } from './tile-morphism';\nimport { getParentComponent, updatedState } from '../../components';\nimport { css } from 'emotion';\nimport { useFragment } from '../../context';\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { ComponentInfo } from '../';\n\nimport image from '../../assets/component-icons/tile-radio.svg';\nimport {\n\tangularClassNamesFromComponentObj,\n\tnameStringToVariableString,\n\treactClassNamesFromComponentObj\n} from '../../utils/fragment-tools';\n\nexport const ARadioTileGroupSettingsUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <>\n\t\t<TileMorphism component={selectedComponent} setComponent={setComponent} />\n\t\t<TextInput\n\t\t\tvalue={selectedComponent.legend}\n\t\t\tlabelText='Legend name'\n\t\t\tplaceholder='Fieldset header'\n\t\t\tonChange={(event: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlegend: event.currentTarget.value\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Light theme'\n\t\t\tid='theme-select'\n\t\t\tchecked={selectedComponent.light}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\t/**\n\t\t\t\t * It usually is not common for users to have different theme for each tile,\n\t\t\t\t * this approach will ensure users don't have to go through each child `tile` & update theme\n\t\t\t\t */\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tlight: checked,\n\t\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t\t...tile,\n\t\t\t\t\t\tlight: checked\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<Checkbox\n\t\t\tlabelText='Disabled'\n\t\t\tid='disabled'\n\t\t\tchecked={selectedComponent.disabled}\n\t\t\tonChange={(checked: any) => {\n\t\t\t\tsetComponent({\n\t\t\t\t\t...selectedComponent,\n\t\t\t\t\tdisabled: checked\n\t\t\t\t});\n\t\t\t}}\n\t\t/>\n\t\t<ComponentCssClassSelector componentObj={selectedComponent} setComponent={setComponent} />\n\t</>;\n};\n\nexport const ARadioTileGroupCodeUI = ({ selectedComponent, setComponent }: any) => {\n\treturn <TextInput\n\t\tvalue={selectedComponent.codeContext?.name}\n\t\tlabelText='Input name'\n\t\tonChange={(event: any) => {\n\t\t\tsetComponent({\n\t\t\t\t...selectedComponent,\n\t\t\t\tcodeContext: {\n\t\t\t\t\t...selectedComponent.codeContext,\n\t\t\t\t\tname: event.currentTarget.value\n\t\t\t\t},\n\t\t\t\t// Radio form elements within a fieldset should have the same name\n\t\t\t\titems: selectedComponent.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: {\n\t\t\t\t\t\t...tile.codeContext,\n\t\t\t\t\t\t// Radio Tiles (Children) use formItemName\n\t\t\t\t\t\tformItemName: event.currentTarget.value\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t});\n\t\t}}\n\t/>;\n};\n\nexport const ARadioTileGroup = ({\n\tchildren,\n\tcomponentObj,\n\tselected,\n\t...rest\n}: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\t// Initialize the child tiles with the form item name\n\t// We use the name property because it unique by default\n\tuseEffect(() => {\n\t\tconst parentComponent = getParentComponent(fragment.data, componentObj);\n\t\tconst componentIndex = parentComponent.items.indexOf(componentObj);\n\t\tconst items = [\n\t\t\t...parentComponent.items.slice(0, componentIndex),\n\t\t\t{\n\t\t\t\t...componentObj,\n\t\t\t\titems: componentObj.items.map((tile: any) => ({\n\t\t\t\t\t...tile,\n\t\t\t\t\tcodeContext: { ...tile.codeContext, formItemName: componentObj.codeContext?.name }\n\t\t\t\t}))\n\t\t\t},\n\t\t\t...parentComponent.items.slice(componentIndex + 1)\n\t\t];\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent: {\n\t\t\t\t\t...parentComponent,\n\t\t\t\t\titems\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\t\t// Disabling since we want to call this only once to initialize children `formItemName` attribute in code context\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<AComponent\n\t\t\tcomponentObj={componentObj}\n\t\t\theadingCss={css`display: block;`}\n\t\t\tselected={selected}\n\t\t\t{...rest}>\n\t\t\t\t<fieldset\n\t\t\t\tclassName={`bx--tile-group ${componentObj.cssClasses?.map((cc: any) => cc.id).join(' ')}`}\n\t\t\t\tdisabled={componentObj.disabled}>\n\t\t\t\t\t{(componentObj.legend !== undefined && componentObj.legend !== '') &&\n\t\t\t\t\t<legend className=\"bx--label\">\n\t\t\t\t\t\t{componentObj.legend}\n\t\t\t\t\t</legend>}\n\t\t\t\t\t{children}\n\t\t\t\t</fieldset>\n\t\t</AComponent>\n\t);\n};\n\nexport const componentInfo: ComponentInfo = {\n\tcomponent: ARadioTileGroup,\n\tsettingsUI: ARadioTileGroupSettingsUI,\n\tcodeUI: ARadioTileGroupCodeUI,\n\tkeywords: ['tile', 'card', 'radio', 'select'],\n\tname: 'Radio tile group',\n\ttype: 'radio-tile-group',\n\tdefaultComponentObj: {\n\t\ttype: 'radio-tile-group',\n\t\ttileGroup: true,\n\t\tlegend: 'Radio Tile Group',\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'radio-tile',\n\t\t\t\tdefaultChecked: false,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 1'\n\t\t\t\t},\n\t\t\t\titems: [{ type: 'text', text: 'Radio tile A' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'radio-tile',\n\t\t\t\tdefaultChecked: false,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 2'\n\t\t\t\t},\n\t\t\t\titems: [{ type: 'text', text: 'Radio tile B' }]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'radio-tile',\n\t\t\t\tdefaultChecked: false,\n\t\t\t\tcodeContext: {\n\t\t\t\t\tvalue: 'Tile 3'\n\t\t\t\t},\n\t\t\t\titems: [{ type: 'text', text: 'Radio tile C' }]\n\t\t\t}\n\t\t]\n\t},\n\trender: ({ componentObj, select, remove, selected, onDragOver, onDrop, renderComponents }) => <ARadioTileGroup\n\t\tcomponentObj={componentObj}\n\t\tselect={select}\n\t\tremove={remove}\n\t\tselected={selected}\n\t\tonDragOver={onDragOver}\n\t\tonDrop={onDrop}>\n\t\t\t{componentObj.items.map((tile: any) => renderComponents(tile))}\n\t</ARadioTileGroup>,\n\timage,\n\tcodeExport: {\n\t\tangular: {\n\t\t\tinputs: () => '',\n\t\t\toutputs: ({ json }) => `@Output() ${nameStringToVariableString(json.codeContext?.name)}Selected = new EventEmitter<Event>();`,\n\t\t\timports: ['TilesModule'],\n\t\t\tcode: ({ json, fragments, jsonToTemplate }) => {\n\t\t\t\treturn `<ibm-tile-group\n\t\t\t\t\t(selected)=\"${nameStringToVariableString(json.codeContext?.name)}Selected.emit($event)\"\n\t\t\t\t\t[multiple]=\"false\"\n\t\t\t\t\t${angularClassNamesFromComponentObj(json)}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</ibm-tile-group>`;\n\t\t\t}\n\t\t},\n\t\treact: {\n\t\t\timports: ['TileGroup'],\n\t\t\tcode: ({ json, jsonToTemplate, fragments }) => {\n\t\t\t\treturn `<TileGroup\n\t\t\t\t\t${json.legend !== undefined && json.legend !== '' ? `legend=\"${json.legend}\"` : ''}\n\t\t\t\t\tname=\"${json.codeContext?.name}\"\n\t\t\t\t\t${json.disabled !== undefined ? `disabled={${json.disabled}}` : ''}\n\t\t\t\t\t${reactClassNamesFromComponentObj(json)}\n\t\t\t\t\tonChange={(radio) => handleInputChange({\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tname: \"${json.codeContext?.name}\",\n\t\t\t\t\t\t\tvalue: radio\n\t\t\t\t\t\t}\n\t\t\t\t\t})}>\n\t\t\t\t\t\t${json.items.map((element: any) => jsonToTemplate(element, fragments)).join('\\n')}\n\t\t\t\t</TileGroup>`;\n\t\t\t}\n\t\t}\n\t}\n};\n","// Accordion\nimport * as accordion from './accordion/a-accordion';\nimport * as accordionitem from './accordion/a-accordion-item';\nimport * as button from './a-button';\nimport * as checkbox from './a-checkbox';\nimport * as column from './a-column';\nimport * as combobox from './a-combobox';\nimport * as dropdown from './a-dropdown';\nimport * as fragment from './a-fragment';\nimport * as grid from './a-grid';\nimport * as numberinput from './a-numberinput';\nimport * as progressIndicator from './a-progress-indicator';\nimport * as row from './a-row';\nimport * as tag from './a-tag';\nimport * as searchinput from './a-searchinput';\nimport * as text from './a-text';\nimport * as textarea from './a-textarea';\nimport * as textinput from './a-textinput';\nimport * as link from './a-link';\n// Tiles\nimport * as tile from './tiles/a-tile';\nimport * as clickabletile from './tiles/a-clickable-tile';\nimport * as expandabletile from './tiles/a-expandable-tile';\nimport * as tilefold from './tiles/a-tile-fold';\nimport * as selectabletile from './tiles/a-selectable-tile';\nimport * as selectableTileGroup from './tiles/a-selectable-tile-group';\nimport * as radiotile from './tiles/a-radio-tile';\nimport * as radioTileGroup from './tiles/a-radio-tile-group';\n\n// Accordion\nexport { AAccordion, AAccordionSettingsUI } from './accordion/a-accordion';\nexport { AAccordionItem, AAccordionItemSettingsUI } from './accordion/a-accordion-item';\nexport { AButton, AButtonSettingsUI } from './a-button';\nexport { ACheckbox, ACheckboxSettingsUI, ACheckboxCodeUI } from './a-checkbox';\nexport { AColumn, AColumnSettingsUI } from './a-column';\nexport { AComboBox, AComboBoxSettingsUI, AComboBoxCodeUI } from './a-combobox';\nexport { ADropdown, ADropdownSettingsUI, ADropdownCodeUI } from './a-dropdown';\nexport * from './a-component';\nexport { AFragment, AFragmentSettingsUI, AFragmentCodeUI } from './a-fragment';\nexport { AGrid, AGridSettingsUI } from './a-grid';\nexport { ALink, ALinkSettingsUI, ALinkCodeUI } from './a-link';\nexport { ANumberInput, ANumberInputSettingsUI, ANumberInputCodeUI } from './a-numberinput';\nexport { AProgressIndicator, AProgressIndicatorSettingsUI, AProgressIndicatorCodeUI } from './a-progress-indicator';\nexport { ARow, ARowSettingsUI } from './a-row';\nexport { ASearchInput, ASearchInputSettingsUI, ASearchInputCodeUI } from './a-searchinput';\nexport { ATag, ATagSettingsUI } from './a-tag';\nexport { AText, ATextSettingsUI } from './a-text';\nexport { ATextArea, ATextAreaSettingsUI, ATextAreaCodeUI } from './a-textarea';\nexport { ATextInput, ATextInputSettingsUI, ATextInputCodeUI } from './a-textinput';\n\n// Tiles\nexport { ATile, ATileCodeUI, ATileSettingsUI } from './tiles/a-tile';\nexport { AClickableTile, AClickableTileCodeUI, AClickableTileSettingsUI } from './tiles/a-clickable-tile';\nexport { AExpandableTile, AExpandableTileCodeUI, AExpandableSettingsUI } from './tiles/a-expandable-tile';\nexport { ATileFold, ATileFoldSettingsUI } from './tiles/a-tile-fold';\nexport { ASelectableTile, ASelectableTileCodeUI, ASelectableTileSettingsUI } from './tiles/a-selectable-tile';\nexport { ASelectableTileGroup, ASelectableTileGroupCodeUI, ASelectableTileGroupSettingsUI } from './tiles/a-selectable-tile-group';\nexport { ARadioTile, ARadioTileCodeUI, ARadioTileSettingsUI } from './tiles/a-radio-tile';\nexport { ARadioTileGroup, ARadioTileGroupCodeUI, ARadioTileGroupSettingsUI } from './tiles/a-radio-tile-group';\n\nexport const allComponents = {\n\taccordion,\n\taccordionitem,\n\tbutton,\n\tcheckbox,\n\tcombobox,\n\tcolumn,\n\tdropdown,\n\tfragment,\n\tgrid,\n\tlink,\n\tnumberinput,\n\tprogressIndicator,\n\trow,\n\tsearchinput,\n\ttag,\n\ttext,\n\ttextarea,\n\ttextinput,\n\t// Tiles\n\ttile,\n\tclickabletile,\n\texpandabletile,\n\ttilefold,\n\tselectabletile,\n\tselectableTileGroup,\n\tradiotile,\n\tradioTileGroup\n};\n","import React from 'react';\nimport { Add16 } from '@carbon/icons-react';\nimport { css, cx } from 'emotion';\nimport { componentHeaderZIndex } from '../fragment-components';\n\nconst addStyle = css`\n\tposition: absolute;\n\tmargin-top: -2px;\n\tbackground: white;\n\tborder: 2px solid #d8d8d8;\n\tline-height: 21px;\n\tz-index: ${componentHeaderZIndex + 1};\n`;\n\nconst addStyleTop = cx(addStyle, css`\n\tmargin-top: -18px;\n`);\n\nconst addStyleRight = cx(addStyle, css`\n\tright: 0;\n\tmargin-right: -21px;\n`);\n\nconst addStyleLeft = cx(addStyle, css`\n\tleft: 0;\n\tmargin-left: -21px;\n`);\n\nconst iconStyle = css`\n\theight: 1rem;\n\twidth: 1rem;\n\tfloat: right;\n\tcursor: pointer;\n`;\n\nexport const Adder = ({\n\tactive,\n\tchildren,\n\ttopAction,\n\tbottomAction,\n\tleftAction,\n\trightAction,\n\taddButtonsCss\n}: any) => <>\n\t{\n\t\tactive && topAction && <span className={cx(addStyleTop, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\ttopAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{\n\t\tactive && leftAction && <span className={cx(addStyleLeft, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tleftAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{\n\t\tactive && rightAction && <span className={cx(addStyleRight, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\trightAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n\t{children}\n\t{\n\t\tactive && bottomAction && <span className={cx(addStyle, addButtonsCss)}>\n\t\t\t<Add16\n\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tbottomAction();\n\t\t\t\t}}\n\t\t\t\tclassName={iconStyle} />\n\t\t</span>\n\t}\n</>;\n","import React from 'react';\nimport {\n\tHeaderMenuButton,\n\tHeaderName,\n\tHeader as ShellHeader\n} from 'carbon-components-react/lib/components/UIShell';\nimport { css } from 'emotion';\nimport { useHistory } from 'react-router-dom';\n\nexport const Header = ({ isSideNavExpanded, setIsSideNavExpanded }: any) => {\n\tconst history = useHistory();\n\n\tconst headerName = css`\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t`;\n\n\treturn (\n\t\t<ShellHeader aria-label=\"IBM Carbon Components Builder\" role='banner' tabIndex={0}>\n\t\t\t<HeaderMenuButton\n\t\t\t\taria-label={`${isSideNavExpanded ? 'Close menu' : 'Open menu'}`}\n\t\t\t\tisActive={isSideNavExpanded}\n\t\t\t\tonClick={() => setIsSideNavExpanded(!isSideNavExpanded)} />\n\t\t\t<HeaderName\n\t\t\t\tprefix=\"IBM\"\n\t\t\t\ttabIndex={0}\n\t\t\t\ttitle='Carbon Components Builder home'\n\t\t\t\tclassName={headerName}\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t\tonKeyDown={(event: any) => event.key === 'Enter' && history.push('/')}>\n\t\t\t\tCarbon Components Builder {process.env.NODE_ENV === 'development' ? 'Dev' : ''}\n\t\t\t</HeaderName>\n\t\t</ShellHeader>\n\t);\n};\n","import React, {\n\tComponent,\n\tComponentPropsWithRef,\n\tforwardRef\n} from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { HeaderMenuItem } from 'carbon-components-react/lib/components/UIShell';\n\ninterface HeaderMenuItemLinkInterface extends RouteComponentProps, ComponentPropsWithRef<any> { }\n\nclass HeaderMenuItemLinkBase extends Component<HeaderMenuItemLinkInterface> {\n\trender() {\n\t\tconst {\n\t\t\thistory,\n\t\t\tto,\n\t\t\t...rest\n\t\t} = this.props as any;\n\t\treturn (\n\t\t\t<HeaderMenuItem\n\t\t\t\tonClick={() => history.push(to)}\n\t\t\t\tonKeyDown={(event: any) => {\n\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\thistory.push(to);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t{...rest} />\n\t\t);\n\t}\n}\n\nexport const HeaderMenuItemLinkRouter = withRouter(HeaderMenuItemLinkBase);\n\nexport const HeaderMenuItemLink = forwardRef<HTMLElement, HeaderMenuItemLinkInterface>(\n\t(props) => <HeaderMenuItemLinkRouter {...props} />\n);\n\n// explicitly set display name\nHeaderMenuItemLink.displayName = 'HeaderMenuItemLink';\n","import React, { createContext, useReducer } from 'react';\n\nconst ModalContext: React.Context<any> = createContext({});\n\nModalContext.displayName = 'ModalContext';\n\nexport enum ModalActionType {\n\tsetDuplicationModal,\n\tsetDeletionModal,\n\tsetExportModal,\n\tcloseModal\n}\n\nexport enum ModalType {\n\tDUPLICATION,\n\tDELETION,\n\tEXPORT\n}\n\nexport type ModalAction = BaseModalAction;\n\nexport interface BaseModalAction {\n\ttype: ModalActionType;\n\tid: string;\n}\n\nexport interface ModalState {\n\tShowModal: boolean;\n\tModalType: any;\n\tFragmentID: string;\n}\n\nconst initialState = {\n\tShowModal: false,\n\tModalType: null,\n\tFragmentID: ''\n};\n\nconst modalReducer = (state: ModalState, action: BaseModalAction) => {\n\tswitch (action.type) {\n\t\tcase ModalActionType.setDuplicationModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DUPLICATION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setDeletionModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.DELETION,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.setExportModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: true,\n\t\t\t\tModalType: ModalType.EXPORT,\n\t\t\t\tFragmentID: action.id\n\t\t\t};\n\t\tcase ModalActionType.closeModal:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tShowModal: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst ModalContextProvider = ({ children }: any) => {\n\tconst modal = useReducer(modalReducer, initialState);\n\n\treturn (\n\t\t<ModalContext.Provider value={modal}>\n\t\t\t{children}\n\t\t</ModalContext.Provider>\n\t);\n};\n\nexport {\n\tModalContext,\n\tModalContextProvider\n};\n","import React from 'react';\nimport { Button } from 'carbon-components-react';\nimport { withRouter } from 'react-router-dom';\n\nexport const LinkButton = withRouter((props: any) => {\n\tconst {\n\t\thistory,\n\t\tto,\n\t\t...rest\n\t} = props;\n\treturn <Button onClick={() => history.push(to)} {...rest} />;\n});\n","import { css, cx } from 'emotion';\n\nexport const main = cx(\n\t'bx--content',\n\t'bx--grid',\n\tcss`\n\t\tpadding-top: 0;\n\t\tbackground: #f4f4f4;\n\t\tmin-height: 100vh;\n\t\tmax-width: unset;\n`);\n\nexport const marginTop = (margin = '1rem') => css`margin-top: ${margin};`;\n","import React from 'react';\nimport { main } from '../styles';\n\nexport const Main = ({ ...props }) => (\n\t<main className={main} {...props}/>\n);\n","import React, { useContext } from 'react';\nimport { SkeletonPlaceholder } from 'carbon-components-react';\nimport './fragment-preview.scss';\nimport { css, cx } from 'emotion';\nimport { allComponents, ComponentInfoRenderProps } from '../fragment-components';\nimport { getAllFragmentStyleClasses, getRandomId } from '../utils/fragment-tools';\nimport { GlobalStateContext } from '../context';\n\nconst canvas = css`\n\tborder: 2px solid #d8d8d8;\n\tbackground-color: white;\n\tposition: relative;\n`;\n\nconst allowDrop = (event: any) => {\n\tevent.preventDefault();\n};\n\nexport const getComponentById = (componentObj: any, id: number) => {\n\tif (!componentObj || !id) {\n\t\treturn undefined;\n\t}\n\n\tif (componentObj.id === id) {\n\t\treturn componentObj;\n\t}\n\n\tif (componentObj.items) {\n\t\tfor (let i = 0; i < componentObj.items.length; i++) {\n\t\t\tconst component: any = getComponentById(componentObj.items[i], id);\n\t\t\tif (component) {\n\t\t\t\treturn component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n};\n\nexport const getSelectedComponent = (fragment: any) => {\n\tif (!fragment) {\n\t\treturn undefined;\n\t}\n\n\treturn getComponentById(fragment.data, fragment.selectedComponentId);\n};\n\nexport const stateWithoutComponent = (state: any, componentId: number) => {\n\tif (state.items) {\n\t\tconst componentIndex = state.items.findIndex((component: any) => component.id === componentId);\n\t\tif (componentIndex >= 0) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: [...state.items.slice(0, componentIndex), ...state.items.slice(componentIndex + 1)]\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t...state,\n\t\t\titems: state.items.map((item: any) => stateWithoutComponent(item, componentId))\n\t\t};\n\t}\n\n\treturn { ...state };\n};\n\nexport const initializeIds = (componentObj: any, forceNewIds = false) => {\n\tlet id = null;\n\tif (forceNewIds) {\n\t\tid = getRandomId();\n\t}\n\tid = id || componentObj.id || getRandomId();\n\t// name is used in form items and for angular inputs and outputs variable names\n\tconst name = componentObj.codeContext?.name || `${componentObj.type}-${id}`;\n\n\treturn {\n\t\t...componentObj,\n\t\tid,\n\t\titems: componentObj.items ? componentObj.items.map((co: any) => initializeIds(co)) : undefined,\n\t\tcodeContext: {\n\t\t\t...componentObj.codeContext,\n\t\t\tname\n\t\t}\n\t};\n};\n\nconst updatedList = (list: any[], item: any, dropInIndex?: number) => {\n\tif (dropInIndex === undefined) {\n\t\treturn [...list, item];\n\t}\n\n\treturn [...list.slice(0, dropInIndex), item, ...list.slice(dropInIndex)];\n};\n\nexport const updatedState = (state: any, dragObj: any, dropInId?: number, dropInIndex?: number) => {\n\tif (!state) { // NOTE is this needed?\n\t\treturn;\n\t}\n\n\t// give unique ids to newly dropped components\n\tdragObj.component = initializeIds(dragObj.component);\n\n\t// only update\n\tif (dragObj.type === 'update') {\n\t\tif (state.id && state.id === dragObj.component.id) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...dragObj.component\n\t\t\t};\n\t\t}\n\t\tif (state.items) {\n\t\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t\t}\n\n\t\treturn { ...state };\n\t}\n\n\tif (dragObj.type === 'move') {\n\t\tstate = stateWithoutComponent(state, dragObj.component.id);\n\t\tdragObj.type = 'insert';\n\t}\n\n\tif (state.items) {\n\t\tstate.items = state.items.map((item: any) => updatedState(item, dragObj, dropInId, dropInIndex));\n\t}\n\n\tif (!dropInId) {\n\t\treturn state.items && !state.type ? {\n\t\t\t...state,\n\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t\t} : { ...state };\n\t}\n\t/// ////////// TODO NOTE clean the container items with 1 item //////////////\n\tif (state.id && state.id === dropInId) {\n\t\t// add data into state\n\t\tif (state.items) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: updatedList(state.items, dragObj.component, dropInIndex),\n\t\t\t\tid: state.id\n\t\t\t};\n\t\t}\n\n\t\t// convert into a list of components, move current component into list\n\t\treturn {\n\t\t\t// TODO should this be a `type: container`?\n\t\t\tid: getRandomId(),\n\t\t\titems: updatedList([{ ...state }], dragObj.component, dropInIndex)\n\t\t};\n\t}\n\n\tif (dropInId) { // probably don't wanna add it here since it didn't match anything and it should somewhere\n\t\treturn { ...state };\n\t}\n\n\treturn state.items ? {\n\t\t...state,\n\t\titems: updatedList(state.items, dragObj.component, dropInIndex)\n\t} : { ...state };\n};\n\nexport const getParentComponent = (state: any, child: any) => {\n\tif (state && state.items) {\n\t\tif (state.items.includes(child)) {\n\t\t\treturn state;\n\t\t}\n\t\tfor (let i = 0; i < state.items.length; i++) {\n\t\t\tconst component = state.items[i];\n\t\t\tconst parent: any = getParentComponent(component, child);\n\t\t\tif (parent) {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\nexport const Fragment = ({ fragment, setFragment }: any) => {\n\tconst globalState = useContext(GlobalStateContext);\n\n\tif (!fragment || !fragment.data) {\n\t\treturn <SkeletonPlaceholder />;\n\t}\n\n\tconst { fragments } = globalState || {};\n\n\tconst drop = (event: any, dropInId?: number) => {\n\t\tevent.preventDefault();\n\n\t\tconst dragObj = JSON.parse(event.dataTransfer.getData('drag-object'));\n\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, dragObj, dropInId)\n\t\t});\n\t};\n\n\tconst select = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: componentObj.id\n\t\t}, true);\n\t};\n\n\tconst remove = (componentObj: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: stateWithoutComponent(fragment.data, componentObj.id)\n\t\t});\n\t};\n\n\tconst renderComponents = (componentObj: any): any => {\n\t\tif (typeof componentObj === 'string' || !componentObj) {\n\t\t\treturn componentObj;\n\t\t}\n\n\t\tfor (const component of Object.values(allComponents)) {\n\t\t\tif (componentObj.type === component.componentInfo.type) {\n\t\t\t\tif (component.componentInfo.render) {\n\t\t\t\t\treturn component.componentInfo.render({\n\t\t\t\t\t\tcomponentObj,\n\t\t\t\t\t\tselect: () => select(componentObj),\n\t\t\t\t\t\tremove: () => remove(componentObj),\n\t\t\t\t\t\tselected: fragment.selectedComponentId === componentObj.id,\n\t\t\t\t\t\tonDragOver: allowDrop,\n\t\t\t\t\t\tonDrop: (event: any) => {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tdrop(event, componentObj.id);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trenderComponents\n\t\t\t\t\t} as ComponentInfoRenderProps);\n\t\t\t\t}\n\t\t\t\treturn <component.componentInfo.component\n\t\t\t\t\tcomponentObj={componentObj}\n\t\t\t\t\tselect={() => select(componentObj)}\n\t\t\t\t\tremove={() => remove(componentObj)}\n\t\t\t\t\tselected={fragment.selectedComponentId === componentObj.id}>\n\t\t\t\t\t\t{componentObj.items && componentObj.items.map((row: any) => renderComponents(row))}\n\t\t\t\t</component.componentInfo.component>;\n\t\t\t}\n\t\t}\n\n\t\tif (componentObj.items) {\n\t\t\treturn componentObj.items.map((item: any) => renderComponents(item));\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst styles = css`${\n\t\tgetAllFragmentStyleClasses(fragment, fragments).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t${styleClass.content}\n\t\t}`)\n\t}`;\n\t// TODO add fragment.width and fragment.height to database\n\treturn (\n\t\t<div\n\t\tclassName={cx(\n\t\t\tcanvas,\n\t\t\tstyles,\n\t\t\tcss`width: ${fragment.width || '800px'}; height: ${fragment.height || '600px'}`\n\t\t)}\n\t\tonDragOver={allowDrop}\n\t\tonDrop={(event: any) => drop(event, fragment.data.id)}>\n\t\t\t<div className={`${fragment.cssClasses ? fragment.cssClasses.map((cc: any) => cc.id).join(' ') : ''}`}>\n\t\t\t\t{renderComponents(fragment.data)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","// TODO: Delete this when the carbon grid components are actually available\nimport React, { PropsWithChildren } from 'react';\nimport { cx } from 'emotion';\n\nexport type RowProps = PropsWithChildren<{\n\tstyles?: any;\n}>;\n\nexport const Row = ({ styles, children }: RowProps) => (\n\t<div className={cx('bx--row', styles)}>{children}</div>\n);\n\nexport interface ColDefinition {\n\tsm?: number;\n\tmd?: number;\n\tlg?: number;\n}\n\nexport type ColProps = PropsWithChildren<{\n\tcols?: ColDefinition;\n\trender?: (props: PropsWithChildren<any>) => JSX.Element;\n}>;\n\nexport const Col = ({ cols, render, children }: ColProps) => {\n\tconst baseRender = render ?? ((props) => <div {...props} />);\n\tconst classes = cx({\n\t\t[`bx--col-sm-${cols?.sm}`]: !!cols?.sm ?? false,\n\t\t[`bx--col-md-${cols?.md}`]: !!cols?.md ?? false,\n\t\t[`bx--col-lg-${cols?.lg}`]: !!cols?.lg ?? false,\n\t\t'bx--col': !!cols\n\t});\n\treturn baseRender({\n\t\tclassName: classes,\n\t\tchildren\n\t});\n};\n","import React, { useContext } from 'react';\nimport { InlineNotification, NotificationActionButton } from 'carbon-components-react';\nimport {\n\tNotificationContext,\n\tNotificationActionType,\n\tNotificationData\n} from '../context/notification-context';\nimport { css } from 'emotion';\n\nconst notificationStyle = { minWidth: '30rem' };\n\nconst notificationAreaStyle = css`\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tposition: absolute;\n\tz-index: 2;\n\tmin-width: 30rem;\n\ttop: 2rem;\n`;\n\nexport const Notification = () => {\n\tconst [state, dispatch] = useContext(NotificationContext);\n\treturn (\n\t\t<div className={notificationAreaStyle} role=\"alert\">\n\t\t\t{state.notifications.map((notification: NotificationData) => (\n\t\t\t\t<InlineNotification\n\t\t\t\t\tlowContrast\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\tkind={notification.kind}\n\t\t\t\t\ttitle={notification.title}\n\t\t\t\t\tsubtitle={notification.message}\n\t\t\t\t\tcaption={null}\n\t\t\t\t\tkey={notification.id}\n\t\t\t\t\tonCloseButtonClick={() => {\n\t\t\t\t\t\tif (notification.action) {\n\t\t\t\t\t\t\tnotification.action.onNotificationClose();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={notificationStyle}\n\t\t\t\t\tactions={notification.action\n\t\t\t\t\t\t? <NotificationActionButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tnotification.action.actionFunction();\n\t\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\t\t\ttype: NotificationActionType.REMOVE_NOTIFICATION,\n\t\t\t\t\t\t\t\t\tdata: notification\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{notification.action.actionText}\n\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t: undefined}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React, { useState,useRef } from 'react';\nimport { Button, Tile } from 'carbon-components-react';\nimport { css, cx } from 'emotion';\nimport {\n\tAddAlt32,\n\tDraggable16,\n\tTrashCan32\n} from '@carbon/icons-react';\n\nconst addDragTargetStyle = css`\n\theight: var(--drag-target-height, 32px);\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\toutline-offset: -2px;\n\ttransition: height 0.15s ease-in-out;\n`;\n\nconst addButtonDraggingStyle = css`\n\toutline: var(--outline, 1px dashed #1666fe);\n`;\n\nconst addButtonStyle = css`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nconst trashButtonStyle = css`\n\tmargin-left: 12px;\n\ttop: 0;\n\tright: 0;\n\tborder-color: transparent;\n\n\t&.bx--btn.bx--btn--icon-only.bx--tooltip__trigger {\n\t\tposition: absolute;\n\t}\n`;\n\nconst draggableIconStyle = css`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 0;\n`;\n\nconst tileStyle = css`\n\tposition: relative;\n`;\n\nexport const DraggableTileList = ({\n\ttemplate, // Functional component\n\tonDragOver: dragOver = (_: any) => true,\t// Override onDragOver event\n\tremoveItemFromList: removeFromList = (_: any) => true,\t// Override removeItemFromList\n\tdataList,\n\tsetDataList,\n\tdefaultObject // Default object created\n}: any) => {\n\tconst [dragging, setDragging] = useState(false);\n\tconst draggedItem = useRef<HTMLDivElement>();\n\tconst [draggedIndex, setDraggedIndex] = useState(-1);\n\n\tconst onDragStart = (event: any, index: number) => {\n\t\tsetDragging(true);\n\t\tsetDraggedIndex(index);\n\t\tevent.dataTransfer.setData('item-data', JSON.stringify(dataList[index]));\n\t\tdraggedItem.current = event.currentTarget;\n\t};\n\n\tconst onDragEnd = (_: any) => {\n\t\tsetDragging(false);\n\t\tsetDraggedIndex(-1);\n\t\tdraggedItem.current = undefined;\n\t};\n\n\tconst onDragOver = (event: any) => {\n\t\t// Prevent drop if user\n\t\tif (dragOver(event) === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\t// Adds styles only if dragged item reference exists\n\t\t// otherwise enters height adjustment loop\n\t\tif (draggedItem.current?.clientHeight) {\n\t\t\tevent.currentTarget.style.setProperty('--drag-target-height', `${(draggedItem.current?.clientHeight)}px`);\n\t\t\tevent.currentTarget.style.setProperty('--outline', '2px dashed #0f62fe');\n\t\t}\n\t};\n\n\tconst onDragLeave = (event: any) => {\n\t\tevent.currentTarget.style.setProperty('--drag-target-height', '');\n\t\tevent.currentTarget.style.setProperty('--outline', '');\n\t};\n\n\tconst onDrop = (event: any, index: number) => {\n\t\tevent.preventDefault();\n\n\t\t// parse only if data exists\n\t\tconst data = event.dataTransfer.getData('item-data');\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\t\tconst item = JSON.parse(data);\n\t\t// Duplicate the list to perform splice operations\n\t\t// Splice makes it easier to remove from previous position & add to new position\n\t\tconst newList = [...dataList];\n\n\t\t// Only remove item from list if item is part of list\n\t\tif (draggedIndex >= 0) {\n\t\t\tnewList.splice(draggedIndex, 1);\n\t\t}\n\t\tnewList.splice(index, 0, item);\n\t\tsetDataList(newList);\n\t};\n\n\tconst addToList = (index: number) => {\n\t\tsetDataList([\n\t\t\t...dataList.slice(0, index),\n\t\t\t{ ...defaultObject },\n\t\t\t...dataList.slice(index)\n\t\t]);\n\t};\n\n\tconst removeItemFromList = (index: number) => {\n\t\tif (removeFromList(index) === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tsetDataList([\n\t\t\t...dataList.slice(0, index),\n\t\t\t...dataList.slice(index + 1)\n\t\t]);\n\t};\n\n\tconst AddButton = ({ index = 0 }: any) => {\n\t\treturn (\n\t\t\t<div\n\t\t\tonDrop={(event: any) => onDrop(event, index)}\n\t\t\tonDragOver={(event: any) => onDragOver(event)}\n\t\t\tonDragLeave={(event: any) => onDragLeave(event)}\n\t\t\tclassName={cx(addDragTargetStyle, (dragging ? addButtonDraggingStyle : css``))}>\n\t\t\t\t{!dragging &&\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={addButtonStyle}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\ticonDescription=\"Add item\"\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\trenderIcon={AddAlt32}\n\t\t\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\taddToList(index);\n\t\t\t\t\t\t}} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<AddButton index={0} />\n\t\t\t{\n\t\t\t\tdataList.map((item: any, index: number) => <>\n\t\t\t\t\t<Tile\n\t\t\t\t\tkey={`tile--${index}`}\n\t\t\t\t\tdraggable={true}\n\t\t\t\t\tonDragStart={(event: any) => onDragStart(event, index)}\n\t\t\t\t\tonDragEnd={(event: any) => onDragEnd(event)}\n\t\t\t\t\tclassName={tileStyle}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={trashButtonStyle}\n\t\t\t\t\t\t\talign=\"left\"\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tkind=\"danger--tertiary\"\n\t\t\t\t\t\t\ticonDescription=\"Delete item\"\n\t\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\t\trenderIcon={TrashCan32}\n\t\t\t\t\t\t\tonClick={(event: any) => {\n\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\tremoveItemFromList(index);\n\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t<Draggable16 className={draggableIconStyle} />\n\t\t\t\t\t\t{template(item, index)}\n\t\t\t\t\t</Tile>\n\t\t\t\t\t<AddButton\n\t\t\t\t\t\tindex={index + 1}\n\t\t\t\t\t\tkey={`add-btn--${index + 1}`} />\n\t\t\t\t</>)\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React, {\n\tuseContext,\n\tuseEffect,\n\tuseState\n} from 'react';\nimport { css, cx } from 'emotion';\nimport {\n\tFragment,\n\tgetParentComponent,\n\tgetSelectedComponent,\n\tinitializeIds,\n\tstateWithoutComponent,\n\tupdatedState\n} from '../../components';\nimport { EditHeader } from './edit-header';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport {\n\tButton,\n\tSideNav,\n\tSideNavLink,\n\tSideNavItems,\n\tTabs,\n\tTab\n} from 'carbon-components-react';\nimport {\n\tCode16,\n\tColorPalette16,\n\tSettingsAdjust16,\n\tCopy32,\n\tDevelopment16,\n\tInformation16,\n\tTrashCan32\n} from '@carbon/icons-react';\n\nimport { ElementsPane } from './elements-pane';\nimport { StylePane } from './style-pane';\nimport { CodePane } from './code-pane';\n\nimport { SettingsContextPane } from './settings-context-pane';\nimport { CodeContextPane } from './code-context-pane';\n\nconst leftPaneWidth = '300px';\nconst rightPaneWidth = '302px';\nconst railWidth = '48px';\nconst transitionDetails = '0.11s cubic-bezier(0.2, 0, 1, 0.9)';\n\nconst editPageContent = css`\n\tposition: absolute;\n\twidth: 100vw;\n\theight: calc(100% - 3rem);\n\ttop: 3rem;\n\tmax-width: 100%;\n\tbackground: #f4f4f4;\n\n\t.edit-content {\n\t\tpadding: 1rem;\n\t\tmargin: 0 ${rightPaneWidth} 0 ${railWidth};\n\t\twidth: calc(100% - ${rightPaneWidth} - ${railWidth});\n\t\theight: calc(100% - 64px);\n\t\ttransition: margin-left ${transitionDetails}, width ${transitionDetails};\n\t\toverflow: auto;\n\n\t\t&.is-side-panel-active {\n\t\t\tmargin-left: calc(${railWidth} + ${leftPaneWidth});\n\t\t\twidth: calc(100% - ${leftPaneWidth} - ${rightPaneWidth} - ${railWidth});\n\t\t}\n\t}\n`;\n\nconst sideRail = css`\n\ttransition: left ${transitionDetails};\n\n\t&.bx--side-nav, &.bx--side-nav:hover {\n\t\t.bx--side-nav__item .bx--side-nav__link {\n\t\t\theight: 3rem;\n\t\t}\n\t}\n\n\t&.bx--side-nav--ux {\n\t\ttop: 7rem;\n\t\tbox-shadow: inset -1px 0px #d8d8d8;\n\t}\n\n\t&.is-active {\n\t\tleft: ${leftPaneWidth};\n\t}\n\n\t.bx--side-nav__items {\n\t\tpadding: 0;\n\t}\n`;\n\nexport const leftPane = css`\n\tposition: absolute;\n\tbackground: white;\n\ttransition: left 0.11s cubic-bezier(0.2, 0, 1, 0.9);\n\twidth: ${leftPaneWidth};\n\tleft: -${leftPaneWidth};\n\theight: calc(100% - 4rem);\n\tpadding: 0 15px;\n\tbox-shadow: inset -1px 0px #d8d8d8;\n\tz-index: 999;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n\t&.is-active {\n\t\tleft: 0;\n\t}\n`;\n\nexport const leftPaneHeader = css`\n\tposition: fixed;\n\twidth: 270px;\n\tbackground: white;\n`;\n\nconst rightPanel = css`\n\twidth: ${rightPaneWidth};\n\tposition: absolute;\n\tright: 0;\n\ttop: 4rem;\n\tbackground: white;\n\tmin-height: calc(100vh - 7rem);\n\tbox-shadow: inset 1px 0px #d8d8d8;\n\tz-index: 1;\n\n\t.bx--tabs--scrollable__nav-item .bx--tabs--scrollable__nav-link {\n\t\twidth: 100px;\n\t\ttext-align: center;\n\t}\n\n\t.context-pane-content {\n\t\toverflow: auto;\n\t\theight: calc(100vh - 17rem);\n\t}\n`;\n\nconst actionsStyle = css`\n\tposition: absolute;\n\tbottom: 0;\n\tmargin: 15px;\n`;\n\nenum SelectedLeftPane {\n\tNONE = 'none',\n\tELEMENTS = 'elements',\n\tSTYLE = 'style',\n\tCODE = 'code'\n}\n\nexport const Edit = ({ match }: any) => {\n\tconst {\n\t\tfragments,\n\t\tupdateFragment,\n\t\tclearActionHistory,\n\t\taddAction,\n\t\tstyleClasses\n\t} = useContext(GlobalStateContext);\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === match.params.id);\n\n\tconst [selectedLeftPane, setSelectedLeftPane] = useState(SelectedLeftPane.NONE);\n\n\tuseEffect(() => {\n\t\tif (fragment && fragment.title) {\n\t\t\tdocument.title = `Edit \"${fragment.title}\"`;\n\t\t} else {\n\t\t\tdocument.title = 'Edit fragment';\n\t\t}\n\t}, [fragment]);\n\n\tuseEffect(() => {\n\t\tclearActionHistory();\n\t\taddAction({ fragment, styleClasses });\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst onRailClick = (clickedLeftPane: SelectedLeftPane) => {\n\t\tif (clickedLeftPane === selectedLeftPane) {\n\t\t\tsetSelectedLeftPane(SelectedLeftPane.NONE);\n\t\t} else {\n\t\t\tsetSelectedLeftPane(clickedLeftPane);\n\t\t}\n\t};\n\n\tconst selectedComponent = getSelectedComponent(fragment);\n\tconst parentComponent = getParentComponent(fragment.data, selectedComponent);\n\n\treturn (\n\t\t<div\n\t\t\tid='edit-wrapper'\n\t\t\tclassName={editPageContent}>\n\t\t\t{fragment && <EditHeader fragment={fragment} />}\n\t\t\t<ElementsPane isActive={selectedLeftPane === SelectedLeftPane.ELEMENTS} />\n\t\t\t<StylePane isActive={selectedLeftPane === SelectedLeftPane.STYLE} />\n\t\t\t<CodePane isActive={selectedLeftPane === SelectedLeftPane.CODE} />\n\t\t\t<SideNav\n\t\t\taria-label='Side navigation'\n\t\t\tclassName={cx(sideRail, selectedLeftPane !== SelectedLeftPane.NONE ? 'is-active' : '')}\n\t\t\tisRail>\n\t\t\t\t<SideNavItems>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Development16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.ELEMENTS)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.ELEMENTS}>\n\t\t\t\t\t\tElements\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={ColorPalette16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.STYLE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.STYLE}>\n\t\t\t\t\t\tStyle\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t\t<SideNavLink\n\t\t\t\t\trenderIcon={Code16}\n\t\t\t\t\tonClick={() => onRailClick(SelectedLeftPane.CODE)}\n\t\t\t\t\tisActive={selectedLeftPane === SelectedLeftPane.CODE}>\n\t\t\t\t\t\tCode\n\t\t\t\t\t</SideNavLink>\n\t\t\t\t</SideNavItems>\n\t\t\t</SideNav>\n\t\t\t<div\n\t\t\tclassName={cx('edit-content', selectedLeftPane !== SelectedLeftPane.NONE ? 'is-side-panel-active' : '')}\n\t\t\tonClick={() => updateFragment({ ...fragment, selectedComponentId: null })}>\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tfragment && <Fragment fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className={rightPanel}>\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-settings'\n\t\t\t\t\tlabel={<SettingsAdjust16 />}>\n\t\t\t\t\t\t<SettingsContextPane fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-code'\n\t\t\t\t\tlabel={<Code16 />}>\n\t\t\t\t\t\t<CodeContextPane fragment={fragment} setFragment={updateFragment} />\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\tid='properties-info'\n\t\t\t\t\tlabel={<Information16 />}>\n\t\t\t\t\t\tinfo\n\t\t\t\t\t</Tab>\n\t\t\t\t</Tabs>\n\t\t\t\t<div className={actionsStyle}>\n\t\t\t\t\t<Button\n\t\t\t\t\tkind='secondary'\n\t\t\t\t\tdisabled={!fragment.selectedComponentId} // disabled for fragment\n\t\t\t\t\trenderIcon={Copy32}\n\t\t\t\t\tclassName={css`margin-right: 8px`}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\t() => updateFragment({\n\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\tdata: updatedState(\n\t\t\t\t\t\t\t\tfragment.data, {\n\t\t\t\t\t\t\t\t\ttype: 'insert',\n\t\t\t\t\t\t\t\t\tcomponent: JSON.parse(JSON.stringify(initializeIds(selectedComponent, true))) // full clone, new Ids\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tparentComponent.id,\n\t\t\t\t\t\t\t\tparentComponent.items.indexOf(selectedComponent) + 1\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}>\n\t\t\t\t\t\tDuplicate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\tkind='danger'\n\t\t\t\t\tdisabled={!fragment.selectedComponentId} // disabled for fragment\n\t\t\t\t\trenderIcon={TrashCan32}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\t() => updateFragment({\n\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\tdata: stateWithoutComponent(fragment.data, fragment.selectedComponentId)\n\t\t\t\t\t\t})\n\t\t\t\t\t}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { getFragmentDuplicate } from '../../utils/fragment-tools';\n\n// In the case that fragment modal is used in the dashboard the full fragment containing options and data\n// can't be passed in, so fragment id is passed in and `useFragment` is used within this component.\nexport const DuplicateFragmentModal = ({ id }: any) => {\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst { fragments, addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\tconst location = useLocation();\n\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\n\tconst duplicateFragment = () => {\n\t\tconst fragmentCopy = getFragmentDuplicate(\n\t\t\tfragments,\n\t\t\tfragment,\n\t\t\t// When a new fragment is created from an existing template, it shouldn't\n\t\t\t// be a template by default.\n\t\t\t{ labels: fragment?.labels?.filter((label: string) => label !== 'template') }\n\t\t);\n\n\t\taddFragment(fragmentCopy);\n\t\tif (location.pathname !== '/') {\n\t\t\thistory.push(`/edit/${fragmentCopy.id}`);\n\t\t}\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'success',\n\t\t\t\ttitle: 'Duplication success',\n\t\t\t\tmessage: `'${fragmentCopy.title}  has been duplicated from '${fragment.title}'.`\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tsize='sm'\n\t\t\topen={modalState.ShowModal}\n\t\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\t\tsecondaryButtonText='Cancel'\n\t\t\tmodalHeading='Duplicate fragment?'\n\t\t\tprimaryButtonText='Duplicate'\n\t\t\tonRequestSubmit={duplicateFragment}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Duplicate</strong> to begin to edit a copy of the current fragment\n\t\t\t\tor <strong>Cancel</strong> to continue on this fragment.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext } from 'react';\n\nimport { Modal } from 'carbon-components-react';\nimport { ModalActionType, ModalContext } from '../../context/modal-context';\nimport { GlobalStateContext } from '../../context/global-state-context';\nimport { useHistory } from 'react-router-dom';\nimport { NotificationActionType, NotificationContext } from '../../context/notification-context';\n\nexport const DeleteFragmentModal = ({ id }: any) => {\n\tconst { fragments, toggleFragmentVisibility, removeFragment } = useContext(GlobalStateContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst history = useHistory();\n\tconst [, dispatchNotification] = useContext(NotificationContext);\n\tconst fragment = fragments.find((fragment: any) => fragment.id === id);\n\n\tconst deleteFragment = () => {\n\t\ttoggleFragmentVisibility(id, true);\n\t\thistory.push('/');\n\t\tdispatchNotification({\n\t\t\ttype: NotificationActionType.ADD_NOTIFICATION,\n\t\t\tdata: {\n\t\t\t\tkind: 'error',\n\t\t\t\ttitle: 'Fragment deleted!',\n\t\t\t\tmessage: `Fragment '${fragment.title}' has been permanently deleted.`,\n\t\t\t\taction: {\n\t\t\t\t\tactionText: 'Undo',\n\t\t\t\t\tactionFunction: () => toggleFragmentVisibility(id, false),\n\t\t\t\t\tonNotificationClose: () => removeFragment(id)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdispatchModal({ type: ModalActionType.closeModal });\n\t};\n\n\treturn (\n\t\t<Modal\n\t\tsize='sm'\n\t\topen={modalState.ShowModal}\n\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\tsecondaryButtonText='Cancel'\n\t\tmodalHeading='Delete this fragment?'\n\t\tdanger\n\t\tprimaryButtonText='Delete'\n\t\tonRequestSubmit={() => deleteFragment()}>\n\t\t\t<p>\n\t\t\t\tClick <strong>Cancel</strong> to go back to editing your fragment\n\t\t\t\tor <strong>Delete</strong> to remove it permanently.\n\t\t\t</p>\n\t\t</Modal>\n\t);\n};\n","import LZString from 'lz-string';\n\nexport const createFragmentSandbox = (fragmentTemplate: any) => {\n\tconst files: Record<string, any> = {};\n\n\tObject.keys(fragmentTemplate)\n\t\t.forEach((filePath: string) => files[filePath] = { content: fragmentTemplate[filePath] });\n\n\treturn LZString.compressToBase64(JSON.stringify({ files }))\n\t\t.replace(/\\+/g, '-') // '+' -> '-'\n\t\t.replace(/\\//g, '_') // '/' -> '_'\n\t\t.replace(/=+$/, ''); // Remove ending '='\n};\n","import { sortedUniq } from 'lodash';\nimport { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserCss from 'prettier/parser-postcss';\nimport { allComponents } from '../../../../../fragment-components';\nimport { classNameFromFragment, getAllFragmentStyleClasses, hasFragmentStyleClasses, tagNameFromFragment } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst formatOptions: Options = {\n\tplugins: [parserBabel],\n\ttrailingComma: 'none',\n\tuseTabs: true\n};\n\nconst formatOptionsCss: Options = {\n\tparser: 'css',\n\tplugins: [parserCss]\n};\n\nconst addIfNotExist = (arr: any[], items: any[]) => {\n\titems.forEach(item => {\n\t\tif (!arr.includes(item)) {\n\t\t\tarr.push(item);\n\t\t}\n\t});\n\treturn arr;\n};\n\nconst jsonToCarbonImports = (json: any) => {\n\tconst imports: any[] = [];\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type) {\n\t\t\tconst componentImport = Array.isArray(component.componentInfo.codeExport.react.imports) ?\n\t\t\t\tcomponent.componentInfo.codeExport.react.imports : component.componentInfo.codeExport.react.imports({ json });\n\n\t\t\taddIfNotExist(imports, componentImport);\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\tjson.items.forEach((item: any) => {\n\t\t\taddIfNotExist(imports, jsonToCarbonImports(item));\n\t\t});\n\t}\n\n\treturn imports;\n};\n\nexport const jsonToTemplate = (json: any, fragments: any[]) => {\n\tif (typeof json === 'string' || !json) {\n\t\treturn json;\n\t}\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type && !component.componentInfo.codeExport.react.isNotDirectExport) {\n\t\t\treturn component.componentInfo.codeExport.react.code({ json, jsonToTemplate, fragments });\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\treturn json.items.map((item: any) => jsonToTemplate(item, fragments)).join('\\n');\n\t}\n};\n\nexport const getAdditionalCode = (componentObj: any, fragments: any[]) => {\n\tif (typeof componentObj === 'string' || !componentObj) {\n\t\treturn componentObj;\n\t}\n\tlet collectedCode = {};\n\n\tfor (const [key, component] of Object.entries(allComponents)) {\n\t\tif (componentObj.type === key && !component.componentInfo.codeExport.react.isNotDirectExport) {\n\t\t\tif (component.componentInfo.codeExport.react.additionalCode) {\n\t\t\t\tcollectedCode = { ...collectedCode, ...component.componentInfo.codeExport.react.additionalCode(componentObj) };\n\t\t\t}\n\t\t}\n\t}\n\n\tif (componentObj.items) {\n\t\tcomponentObj.items.forEach((item: any) => {\n\t\t\tcollectedCode = { ...collectedCode, ...getAdditionalCode(item, fragments) };\n\t\t});\n\t}\n\n\treturn collectedCode;\n};\n\nconst getAdditionalCodeAsString = (componentObj: any, fragments: any[]) => {\n\tconst collectedCode = getAdditionalCode(componentObj, fragments);\n\treturn Object.values(collectedCode).join('\\n');\n};\n\nconst otherImportsFromComponentObj = (json: any, fragments?: any[]) => {\n\tlet imports = '';\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type) {\n\t\t\tif (component.componentInfo.codeExport.react.otherImports) {\n\t\t\t\timports += component.componentInfo.codeExport.react.otherImports({ json, fragments });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\timports += json.items.map((item: any) => otherImportsFromComponentObj(item, fragments)).join('\\n');\n\t}\n\n\t// remove duplicate imports\n\timports = sortedUniq(imports.split('\\n')).join('\\n');\n\n\treturn imports;\n};\n\nconst generateTemplate = (json: any, fragments: any[]) => {\n\tconst carbonImports = jsonToCarbonImports(json);\n\tconst carbonImportsString = carbonImports.reduce((string: string, curr: string) => (\n\t\tstring += `${curr}, `\n\t), '');\n\treturn {\n\t\timports: `import { ${carbonImportsString} } from 'carbon-components-react';\n\t\t\t${otherImportsFromComponentObj(json, fragments)}`,\n\t\ttemplate: jsonToTemplate(json, fragments),\n\t\tadditionalCode: getAdditionalCodeAsString(json, fragments)\n\t};\n};\n\nconst jsonToSharedComponents = (json: any, fragments: any[]) => {\n\tlet sharedComponents: any = {};\n\n\tif (json.type === 'fragment') {\n\t\tconst fragment = fragments.find(f => f.id === json.id);\n\t\tconst fragmentTemplate = generateTemplate(fragment.data, fragments);\n\n\t\tsharedComponents[`src/shared/${tagNameFromFragment(fragment)}.js`] = format(`import React from 'react';\n\t\t\t${fragmentTemplate.imports};\n\t\t\t${hasFragmentStyleClasses(fragment) ? `\n\t\t\t\timport './${tagNameFromFragment(fragment)}.scss';\n\t\t\t` : ''}\n\t\t\texport const ${classNameFromFragment(fragment)} = ({state, setState}) => {\n\t\t\t\tconst handleInputChange = (event) => {\n\t\t\t\t\tsetState({...state, [event.target.name]: event.target.value});\n\t\t\t\t};\n\n\t\t\t\t${fragmentTemplate.additionalCode}\n\n\t\t\t\treturn <>${fragmentTemplate.template}</>;\n\t\t\t};\n\t\t`, formatOptions);\n\n\t\tsharedComponents[`src/shared/${tagNameFromFragment(fragment)}.scss`] = format(\n\t\t\t`${getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t\t${styleClass.content}\n\t\t\t}`).join('\\n')}`,\n\t\t\tformatOptionsCss\n\t\t);\n\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...jsonToSharedComponents(fragment.data, fragments)\n\t\t};\n\t}\n\n\tjson.items?.forEach((item: any) => {\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...jsonToSharedComponents(item, fragments)\n\t\t};\n\t});\n\n\treturn sharedComponents;\n};\n\nexport const createReactApp = (fragment: any, fragments: any[]) => {\n\tconst fragmentTemplate = generateTemplate(fragment.data, fragments);\n\n\tconst sharedComponents = jsonToSharedComponents(fragment.data, fragments);\n\n\tconst indexHtml = `<div id='root'></div>\n`;\n\tconst componentJs\n\t\t= `import React from 'react';\n${fragmentTemplate.imports};\n${hasFragmentStyleClasses(fragment) ? \"\\nimport './component.scss';\\n\" : ''}\nexport const FragmentComponent = ({state, setState}) => {\n\tconst handleInputChange = (event) => {\n\t\tsetState({...state, [event.target.name]: event.target.value});\n\t};\n\n\t${fragmentTemplate.additionalCode}\n\n\treturn <>${fragmentTemplate.template}</>;\n};\n`;\n\n\tconst componentScss = getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t${styleClass.content}\n}`).join('\\n');\n\n\tconst indexJs\n\t\t= `import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'carbon-components/css/carbon-components.css';\n\nimport { FragmentComponent } from './component.js';\n\nconst App = () => {\n\tconst [state, setState] = useState({});\n\n\treturn (\n\t\t<div>\n\t\t\t<FragmentComponent state={state} setState={setState} />\n\t\t</div>\n\t);\n}\nReactDOM.render(<App />, document.getElementById('root'));\n`;\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'carbon-components': '10.50.0',\n\t\t\t'carbon-icons': '7.0.7',\n\t\t\t'@carbon/icons-react': '10.15.0',\n\t\t\t'carbon-components-react': '7.50.0',\n\t\t\treact: '16.12.0',\n\t\t\t'react-dom': '16.12.0',\n\t\t\t'react-scripts': '3.0.1',\n\t\t\t'sass': '1.45.0',\n\t\t\temotion: '10.0.27'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/index.js': format(indexJs, formatOptions),\n\t\t'src/component.js': format(componentJs, formatOptions),\n\t\t'src/component.scss': format(componentScss, formatOptionsCss),\n\t\t'package.json': packageJson,\n\t\t...sharedComponents\n\t};\n};\n","import { format as formatPrettier, Options } from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport parserHtml from 'prettier/parser-html';\nimport parserCss from 'prettier/parser-postcss';\nimport { allComponents } from '../../../../../fragment-components';\nimport { classNameFromFragment, getAllFragmentStyleClasses, hasFragmentStyleClasses, tagNameFromFragment } from '../../../../../utils/fragment-tools';\n\nconst format = (source: string, options?: Options | undefined) => {\n\t// we're catching and ignorring errors so live editing doesn't throw errors\n\ttry {\n\t\treturn formatPrettier(source, options);\n\t} catch (_) {\n\t\treturn source;\n\t}\n};\n\nconst formatOptionsTypescript: Options = {\n\tplugins: [parserBabel],\n\ttrailingComma: 'none',\n\tuseTabs: true,\n\tparser: 'babel-ts'\n};\n\nconst formatOptionsHtml: Options = {\n\tplugins: [parserHtml],\n\ttrailingComma: 'none',\n\tuseTabs: true,\n\tparser: 'html'\n};\n\nconst formatOptionsCss: Options = {\n\tparser: 'css',\n\tplugins: [parserCss]\n};\n\nconst addIfNotExist = (arr: any[], items: string[] | undefined) => {\n\titems?.forEach(item => {\n\t\tif (!arr.includes(item)) {\n\t\t\tarr.push(item);\n\t\t}\n\t});\n\treturn arr;\n};\n\nconst jsonToAngularImports = (json: any) => {\n\tconst imports: any[] = [];\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type) {\n\t\t\taddIfNotExist(imports, component.componentInfo.codeExport.angular?.imports);\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\tjson.items.forEach((item: any) => {\n\t\t\taddIfNotExist(imports, jsonToAngularImports(item));\n\t\t});\n\t}\n\n\treturn imports;\n};\n\nconst getAngularInputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tfor (const component of Object.values(allComponents)) {\n\t\t\tif (json.type === component.componentInfo.type) {\n\t\t\t\treturn component.componentInfo.codeExport.angular?.inputs({ json }) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularInputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nconst getAngularOutputsFromJson = (json: any): string => {\n\tconst getOne = (json: any) => {\n\t\tfor (const component of Object.values(allComponents)) {\n\t\t\tif (json.type === component.componentInfo.type) {\n\t\t\t\treturn component.componentInfo.codeExport.angular?.outputs({ json }) || '';\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t};\n\n\treturn `${getOne(json)} ${json.items ? json.items.map((item: any) => getAngularOutputsFromJson(item)).join('\\n') : ''}\n\t`;\n};\n\nexport const jsonToTemplate = (json: any, fragments: any[]) => {\n\tif (typeof json === 'string' || !json) {\n\t\treturn json;\n\t}\n\n\tfor (const component of Object.values(allComponents)) {\n\t\tif (json.type === component.componentInfo.type && !component.componentInfo.codeExport.angular.isNotDirectExport) {\n\t\t\treturn component.componentInfo.codeExport.angular.code({ json, jsonToTemplate, fragments });\n\t\t}\n\t}\n\n\tif (json.items) {\n\t\treturn json.items.map((item: any) => jsonToTemplate(item, fragments)).join('\\n');\n\t}\n};\n\nconst getAllSubfragments = (json: any, fragments: any[]) => {\n\tlet sharedComponents: any = {};\n\n\tif (json.type === 'fragment') {\n\t\tconst fragment = fragments.find(f => f.id === json.id);\n\n\t\tsharedComponents[tagNameFromFragment(fragment)] = fragment;\n\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...getAllSubfragments(fragment.data, fragments)\n\t\t};\n\t}\n\n\tjson.items?.forEach((item: any) => {\n\t\tsharedComponents = {\n\t\t\t...sharedComponents,\n\t\t\t...getAllSubfragments(item, fragments)\n\t\t};\n\t});\n\n\treturn sharedComponents;\n};\n\nconst getComponentCode = (fragment: any, fragments: any[]) => {\n\tconst componentCode: any = {};\n\tconst subFragments = getAllSubfragments(fragment.data, fragments);\n\n\t// component.ts\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.component.ts`] = format(\n\t\t`import { Component, Input, Output, EventEmitter } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-${tagNameFromFragment(fragment)}',\n\t\t\ttemplateUrl: './${tagNameFromFragment(fragment)}.component.html'${hasFragmentStyleClasses(fragment) ? `,\n\t\t\tstyleUrls: ['./${tagNameFromFragment(fragment)}.component.scss']` : ''}\n\t\t})\n\t\texport class ${classNameFromFragment(fragment)} {\n\t\t\t${getAngularInputsFromJson(fragment.data)}\n\t\t\t${getAngularOutputsFromJson(fragment.data)}\n\t\t}\n\t`, formatOptionsTypescript);\n\n\t// component.html\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.component.html`] =\n\t\tjsonToTemplate(fragment.data, fragments);\n\n\t// module.ts\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.module.ts`] = format(\n\t\t`import { NgModule } from \"@angular/core\";\n\t\timport { ${jsonToAngularImports(fragment.data).join(', ')} } from 'carbon-components-angular';\n\t\timport { ${classNameFromFragment(fragment)} } from \"./${tagNameFromFragment(fragment)}.component\";\n\t\t${\n\t\t\tObject.values(subFragments).map((f) =>\n\t\t\t\t`import { ${classNameFromFragment(f)}Module} from \"../${tagNameFromFragment(f)}/${tagNameFromFragment(f)}.module\";`).join('\\n')\n\t\t}\n\n\t\t@NgModule({\n\t\t\timports: [${[\n\t\t\t\t...jsonToAngularImports(fragment.data),\n\t\t\t\t...Object.values(subFragments).map((fragment) => `${classNameFromFragment(fragment)}Module`)\n\t\t\t].join(', ')}],\n\t\t\tdeclarations: [${classNameFromFragment(fragment)}],\n\t\t\texports: [${classNameFromFragment(fragment)}]\n\t\t})\n\t\texport class ${classNameFromFragment(fragment)}Module {}\n\t`, formatOptionsTypescript);\n\n\t// component.scss\n\tcomponentCode[`src/app/components/${tagNameFromFragment(fragment)}/${tagNameFromFragment(fragment)}.component.scss`] = format(\n\t\t`${getAllFragmentStyleClasses(fragment).map((styleClass: any) => `.${styleClass.id} {\n\t\t\t${styleClass.content}\n\t\t}`).join('\\n')}`,\n\t\tformatOptionsCss\n\t);\n\n\treturn componentCode;\n};\n\nconst getAllComponentsCode = (json: any, fragments: any[]) => {\n\tlet allComponents: any = {};\n\n\tif (json.data) {\n\t\tallComponents = {\n\t\t\t...allComponents,\n\t\t\t...getComponentCode(json, fragments),\n\t\t\t...getAllComponentsCode(json.data, fragments)\n\t\t};\n\t}\n\n\tif (json.type === 'fragment') {\n\t\tconst fragment = fragments.find(f => f.id === json.id);\n\n\t\tallComponents = {\n\t\t\t...allComponents,\n\t\t\t...getComponentCode(fragment, fragments),\n\t\t\t...getAllComponentsCode(fragment.data, fragments)\n\t\t};\n\t}\n\n\tjson.items?.forEach((item: any) => {\n\t\tallComponents = {\n\t\t\t...allComponents,\n\t\t\t...getAllComponentsCode(item, fragments)\n\t\t};\n\t});\n\n\treturn allComponents;\n};\n\nexport const createAngularApp = (fragment: any, fragments: any[]) => {\n\tconst tagName = tagNameFromFragment(fragment);\n\tconst className = classNameFromFragment(fragment);\n\n\tconst allComponents = getAllComponentsCode(fragment, fragments);\n\n\tconst appComponentHtml =\n\t\t`<app-${tagName}></app-${tagName}>\n\t\t`;\n\n\tconst appComponentTs =\n\t\t`import { Component } from '@angular/core';\n\t\t@Component({\n\t\t\tselector: 'app-root',\n\t\t\ttemplateUrl: './app.component.html'\n\t\t})\n\t\texport class AppComponent {\n\t\t}\n\t\t`;\n\n\tconst appModule =\n\t\t`import { NgModule } from '@angular/core';\n\t\timport { BrowserModule } from '@angular/platform-browser';\n\t\timport { AppComponent } from './app.component';\n\t\timport { ${className}Module } from './components/${tagName}/${tagName}.module';\n\n\t\t@NgModule({\n\t\t\timports: [BrowserModule, ${className}Module],\n\t\t\tdeclarations: [AppComponent],\n\t\t\tbootstrap: [AppComponent]\n\t\t})\n\t\texport class AppModule {}\n\t\t`;\n\n\tconst indexHtml =\n\t\t`<!DOCTYPE html>\n\t\t<html lang='en'>\n\t\t\t<head>\n\t\t\t\t<meta charset='utf-8' />\n\t\t\t\t<title>Angular</title>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<app-root></app-root>\n\t\t\t</body>\n\t\t</html>\n\t\t`;\n\n\tconst mainTs =\n\t\t`import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\t\timport { AppModule } from './app/app.module';\n\n\t\timport \"carbon-components/css/carbon-components.min.css\";\n\n\t\tplatformBrowserDynamic()\n\t\t\t.bootstrapModule(AppModule)\n\t\t\t.catch(err => console.log(err));\n\t\t`;\n\n\tconst angularCliJson =\n\t\t`{\n\t\"apps\": [\n\t\t{\n\t\t\t\"root\": \"src\",\n\t\t\t\"outDir\": \"dist\",\n\t\t\t\"assets\": [\"assets\", \"favicon.ico\"],\n\t\t\t\"index\": \"index.html\",\n\t\t\t\"main\": \"main.ts\",\n\t\t\t\"polyfills\": \"polyfills.ts\",\n\t\t\t\"prefix\": \"app\",\n\t\t\t\"styles\": [\"styles.scss\"],\n\t\t\t\"scripts\": [],\n\t\t\t\"environmentSource\": \"environments/environment.ts\",\n\t\t\t\"environments\": {\n\t\t\t\t\"dev\": \"environments/environment.ts\",\n\t\t\t\t\"prod\": \"environments/environment.prod.ts\"\n\t\t\t}\n\t\t}\n\t]\n}\n`;\n\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@angular/animations': '12.2.0',\n\t\t\t'@angular/common': '12.2.0',\n\t\t\t'@angular/compiler': '12.2.0',\n\t\t\t'@angular/core': '12.2.0',\n\t\t\t'@angular/forms': '12.2.0',\n\t\t\t'@angular/platform-browser': '12.2.0',\n\t\t\t'@angular/platform-browser-dynamic': '12.2.0',\n\t\t\t'@angular/router': '12.2.0',\n\t\t\t'rxjs': '6.6.0',\n\t\t\t'tslib': '2.3.0',\n\t\t\t'sass': '1.45.0',\n\t\t\t'zone.js': '0.11.4',\n\t\t\t'carbon-components-angular': '4.56.3',\n\t\t\t'carbon-components': '10.50.0'\n\t\t}\n\t};\n\n\treturn {\n\t\t'src/index.html': format(indexHtml, formatOptionsHtml),\n\t\t'src/main.ts': format(mainTs, formatOptionsTypescript),\n\t\t'src/polyfills.ts': format(\"import 'zone.js/dist/zone';\", formatOptionsTypescript),\n\t\t'src/styles.scss': format('', formatOptionsCss),\n\t\t'src/app/app.component.html': format(appComponentHtml, formatOptionsHtml),\n\t\t'src/app/app.component.ts': format(appComponentTs, formatOptionsTypescript),\n\t\t'src/app/app.module.ts': format(appModule, formatOptionsTypescript),\n\t\t...allComponents,\n\t\t'.angular-cli.json': angularCliJson,\n\t\t'package.json': packageJson\n\t};\n};\n","import { extension } from 'mime-types';\n\nexport const getFullFileName = (name: string, mimeType: string) => (\n\t`${name}.${extension(mimeType)}`\n);\n\nexport const saveFile = (url: string, fileName: string) => {\n\tconst anchor = document.createElement('a');\n\tanchor.href = url;\n\tanchor.download = fileName;\n\tanchor.click();\n};\n\nexport const saveBlob = (blob: any, fileName: string) => {\n\tconst url = URL.createObjectURL(blob);\n\tsaveFile(url, fileName);\n\n\t// Give it a second to download :)\n\tsetTimeout(() => {\n\t\tURL.revokeObjectURL(url);\n\t}, 1000);\n};\n\nexport const warningNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'warning',\n\ttitle: 'Uploaded data has been modified',\n\tsubtitle: 'data did not match expected format so we modified it so you can still use it'\n};\n\nexport const errorNotificationProps = {\n\tlowContrast: true,\n\trole: 'alert',\n\tnotificationType: 'inline',\n\tkind: 'error',\n\ttitle: 'Error',\n\tsubtitle: ''\n};\n","import React, {\n\tuseState,\n\tuseEffect,\n\tuseRef\n} from 'react';\nimport {\n\tButton,\n\tTextInput,\n\tForm,\n\tSelect,\n\tSelectItem,\n\tCheckbox,\n\tNumberInput,\n\tLoading\n} from 'carbon-components-react';\nimport { Save32 } from '@carbon/icons-react';\nimport { css } from 'emotion';\nimport debounce from 'lodash/debounce';\nimport { saveBlob, getFullFileName } from '../../../../utils/file-tools';\nimport { getFragmentPreview, RenderProps } from '../../../../utils/fragment-tools';\n\nconst exportSettingForm = css`\n\twidth: 23rem;\n`;\nconst exportSettingFormGroup = css`\n\twidth: 320px;\n\tdisplay: flex;\n`;\nconst previewContainer = css`\n\tfloat: left;\n\tbackground-color: #e0e0e0;\n\twidth: 100%;\n\theight: 100%;\n\tmargin-left: 1rem;\n\tdisplay: flex;\n\talign-items: center;\n`;\nconst selectInputWH = css`\n\tmargin-bottom: 1.5rem;\n\tfloat: left;\n\twidth: 150px;\n`;\nconst selectInput = css`\n\tmargin-bottom: 1.5rem;\n\twidth: 320px;\n`;\n\nconst fragmentImage = css`\n\tmax-height: 100%;\n\tmax-width: 100%;\n\tdisplay: block;\n\tmargin: 0;\n`;\n\nlet updatePreviewUrl = async () => console.log('updatePreviewUrl not initialized yet');\nlet handleResize = () => console.log('handleResize not initialized yet');\nconst doInputChange = debounce(() => updatePreviewUrl(), 400);\nconst doUpdatePreviewSize = debounce(() => handleResize(), 200);\n\nconst ExportImageSettings = ({ inputs, handleChange, onSave }: any) => {\n\t// We assume that a working ratio is never 0 (no 1D fragments)\n\tconst getRatio = () => (inputs.width / inputs.height).toFixed(2);\n\n\tconst onDimensionChange = (id: any, value: any) => {\n\t\tif (isNaN(value) || value === 0) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\tvalue = 1;\n\t\t}\n\t\tif (!inputs.ratioLock) {\n\t\t\thandleChange(id, value);\n\t\t\treturn;\n\t\t}\n\t\tif (inputs.curRatio === 0) {\n\t\t\thandleChange('curRatio', getRatio());\n\t\t}\n\t\thandleChange(id, value);\n\t\tif (id === 'width') {\n\t\t\thandleChange('height', (value / inputs.curRatio).toFixed(0));\n\t\t} else {\n\t\t\thandleChange('width', (value * inputs.curRatio).toFixed(0));\n\t\t}\n\t};\n\tconst numInputOnchange = (event: any) => {\n\t\tonDimensionChange(event.target.id, parseFloat(event.target.value));\n\t};\n\tconst numInputOnClick = (event: any) => {\n\t\tif (event.imaginaryTarget && event.imaginaryTarget.value) {\n\t\t\tonDimensionChange(event.imaginaryTarget.id, parseFloat(event.imaginaryTarget.value));\n\t\t}\n\t};\n\tconst inputChange = (event: any) => {\n\t\thandleChange(event.target.id, event.target.value);\n\t};\n\n\treturn (\n\t\t<Form className={exportSettingForm}>\n\t\t\t<TextInput\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid={'fragmentName'}\n\t\t\t\tlabelText={'Name'}\n\t\t\t\tplaceholder={'Fragment name'}\n\t\t\t\tonChange={inputChange}\n\t\t\t\ttype='text'\n\t\t\t\tdefaultValue={inputs.fragmentName} />\n\t\t\t<div className={exportSettingFormGroup}>\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='width'\n\t\t\t\t\tlabel='Width'\n\t\t\t\t\tvalue={inputs.width}\n\t\t\t\t\thideSteppers={true}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t\t<NumberInput\n\t\t\t\t\tclassName={selectInputWH}\n\t\t\t\t\tid='height'\n\t\t\t\t\tlabel='Height'\n\t\t\t\t\tvalue={inputs.height}\n\t\t\t\t\thideSteppers={true}\n\t\t\t\t\tonClick={numInputOnClick}\n\t\t\t\t\tonChange={numInputOnchange} />\n\t\t\t</div>\n\t\t\t<Checkbox\n\t\t\t\tclassName={selectInput}\n\t\t\t\tid='ratioLock'\n\t\t\t\tlabelText='Preserve aspect ratio'\n\t\t\t\tdefaultChecked={inputs.ratioLock}\n\t\t\t\tonChange={(event: any) => handleChange('ratioLock', event)} />\n\t\t\t<Select\n\t\t\tclassName={selectInput}\n\t\t\tvalue={inputs.unit}\n\t\t\tid={'unit'}\n\t\t\tonChange={inputChange}\n\t\t\tlabelText='Units'>\n\t\t\t\t<SelectItem text='pixels' value='pixels' />\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\tclassName={selectInput}\n\t\t\tvalue={inputs.format}\n\t\t\tid={'format'}\n\t\t\tonChange={inputChange}\n\t\t\tlabelText='Format'>\n\t\t\t\t<SelectItem text='png' value='image/png' />\n\t\t\t\t<SelectItem text='jpeg' value='image/jpeg' />\n\t\t\t\t<SelectItem text='bmp' value='image/bmp' />\n\t\t\t\t<SelectItem text='gif' value='image/gif' />\n\t\t\t</Select>\n\t\t\t<Button renderIcon={Save32} onClick={onSave}>Save image</Button>\n\t\t</Form>\n\t);\n};\n\nexport const ExportImageComponent = ({ fragment }: any) => {\n\tconst exportSettings = {\n\t\twidth: 800,\n\t\theight: 400,\n\t\tunit: 'pixels',\n\t\tratioLock: false,\n\t\tfragmentName: fragment.title,\n\t\tformat: 'image/png',\n\t\tcurRatio: 0\n\t};\n\tconst [inputs, setInputs] = useState(exportSettings);\n\tconst [previewUrl, setPreviewUrl] = useState(fragment.preview);\n\tconst [isPerformingAction, setIsPerformingAction] = useState(false);\n\tconst previewContainerRef = useRef<HTMLDivElement>(null);\n\tconst [imageContainerSize, setImageContainerSize] = useState<any>();\n\n\thandleResize = () => {\n\t\tif (!previewContainerRef || !previewContainerRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tsetImageContainerSize({\n\t\t\twidth: previewContainerRef.current.offsetWidth,\n\t\t\theight: previewContainerRef.current.offsetHeight\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', doUpdatePreviewSize);\n\t\tif (previewContainerRef) {\n\t\t\tdoUpdatePreviewSize();\n\t\t}\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', doUpdatePreviewSize);\n\t\t};\n\t}, [previewContainerRef]);\n\n\tconst getPreviewSize = (width: number, height: number) => {\n\t\tlet fitRatio: number;\n\t\tif (width <= height) {\n\t\t\t// preview is square or tall rectangle (mobile)\n\t\t\tfitRatio = imageContainerSize.height / height;\n\t\t} else {\n\t\t\t// preview is long rectangle\n\t\t\tfitRatio = imageContainerSize.width / width;\n\t\t}\n\t\treturn {\n\t\t\twidth: width * fitRatio,\n\t\t\theight: height * fitRatio\n\t\t};\n\t};\n\n\tupdatePreviewUrl = async () => {\n\t\tconst previewSize = getPreviewSize(inputs.width, inputs.height);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tpreview: {\n\t\t\t\tformat: inputs.format,\n\t\t\t\twidth: previewSize.width,\n\t\t\t\theight: previewSize.height\n\t\t\t}\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst reader = new FileReader();\n\t\treader.readAsDataURL(imageBlob ? imageBlob : new Blob());\n\t\treader.onloadend = () => {\n\t\t\tconst imageUrl: string = reader.result ? reader.result.toString() : '';\n\t\t\tsetPreviewUrl(imageUrl);\n\t\t};\n\t};\n\n\tconst onSave = async () => {\n\t\tif (isPerformingAction) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsPerformingAction(true);\n\t\tconst renderProps: RenderProps = {\n\t\t\tid: fragment.id,\n\t\t\tname: inputs.fragmentName,\n\t\t\twidth: inputs.width,\n\t\t\theight: inputs.height,\n\t\t\tformat: inputs.format\n\t\t};\n\t\tconst imageBlob = await getFragmentPreview(fragment, renderProps);\n\t\tconst fileName = getFullFileName(inputs.fragmentName, inputs.format);\n\t\tsaveBlob(imageBlob, fileName);\n\t\tsetIsPerformingAction(false);\n\t};\n\n\tconst handleChange = (id: any, value: any) => {\n\t\tsetInputs({\n\t\t\t...inputs,\n\t\t\t[id]: value\n\t\t});\n\t\tdoInputChange();\n\t};\n\n\tuseEffect(() => {\n\t\tdoInputChange();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<p>\n\t\t\t\tExport a static image of this fragment for use in presentation decks or designs.\n\t\t\t</p>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tmarginTop: '3rem'\n\t\t\t}}>\n\t\t\t\t<ExportImageSettings inputs={inputs} handleChange={handleChange} onSave={onSave} />\n\t\t\t\t<div className={previewContainer} ref={previewContainerRef}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tid=\"previewimg\"\n\t\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\talt={`fragment preview: ${fragment.title}`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Loading active={isPerformingAction} />\n\t\t</div>\n\t);\n};\n","import React, { useContext } from 'react';\n\nimport { createFragmentSandbox } from './create-fragment-sandbox';\nimport { createReactApp } from './frameworks/react-fragment';\nimport { createAngularApp } from './frameworks/angular-fragment';\n\nimport {\n\tButton,\n\tCodeSnippet,\n\tModal,\n\tTab,\n\tTabs\n} from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { ModalContext, ModalActionType } from '../../../../context/modal-context';\nimport { saveBlob } from '../../../../utils/file-tools';\nimport { GlobalStateContext } from '../../../../context';\nimport { ExportImageComponent } from './export-image-component';\n\nconst exportCodeModalStyle = css`\n\t.bx--tab-content {\n\t\theight: calc(100% - 40px);\n\t\toverflow: auto;\n\t}\n`;\n\nconst codeSnippetWrapper = css`\n    margin-top: 20px;\n    p {\n        margin-bottom: 7px;\n    }\n`;\n\nconst titleWrapper = css`\n    display: flex;\n    margin-top: 30px;\n    a, button {\n        margin-left: auto;\n    }\n`;\n\nconst codeSnippet = css`\n    .bx--copy-btn {\n        background: white;\n    }\n`;\n\nexport const ExportModal = ({ fragment }: any) => {\n\tconst { fragments, settings, setSettings } = useContext(GlobalStateContext);\n\tconst [modalState, dispatchModal] = useContext(ModalContext);\n\tconst jsonCode: any = JSON.stringify(fragment.data, null, 2);\n\tconst reactCode: any = createReactApp(fragment, fragments);\n\tconst angularCode: any = createAngularApp(fragment, fragments);\n\n\tconst generateSandboxUrl = (parameters: any) => (`https://codesandbox.io/api/v1/sandboxes/define?parameters=${parameters}`);\n\n\treturn (\n\t\t<Modal\n\t\tpassiveModal\n\t\topen={modalState.ShowModal}\n\t\tonRequestClose={() => dispatchModal({ type: ModalActionType.closeModal })}\n\t\tsize='lg'\n\t\tmodalHeading={`Export \"${fragment.title}\" code`}\n\t\tclassName={exportCodeModalStyle}>\n\t\t\t<Tabs\n\t\t\tselected={settings.selectedExportTabIndex || 0}\n\t\t\tonSelectionChange={(tabIndex: number) => setSettings({ ...settings, selectedExportTabIndex: tabIndex })}>\n\t\t\t\t<Tab\n\t\t\t\tid='Angular'\n\t\t\t\tlabel='Angular'\n\t\t\t\trole='presentation'\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Angular Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(angularCode))}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(angularCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? angularCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(angularCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\tid='react'\n\t\t\t\tlabel='React'\n\t\t\t\trole='presentation'\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>React Code</h3>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\thref={generateSandboxUrl(createFragmentSandbox(reactCode))}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'>\n\t\t\t\t\t\t\tEdit on CodeSandbox\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(reactCode).map((fileName: string) => (\n\t\t\t\t\t\t\t<div className={codeSnippetWrapper} key={fileName}>\n\t\t\t\t\t\t\t\t<p>{fileName}</p>\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\ttype='multi'\n\t\t\t\t\t\t\t\tlight\n\t\t\t\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\t\t\t\tcopyButtonDescription={`Copy ${fileName} to clipboard`}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileName !== 'package.json'\n\t\t\t\t\t\t\t\t\t\t\t? reactCode[fileName]\n\t\t\t\t\t\t\t\t\t\t\t: JSON.stringify(reactCode[fileName], null, '\\t')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</CodeSnippet>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\tid='json'\n\t\t\t\tlabel='JSON'\n\t\t\t\trole='presentation'\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>JSON</h3>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\tonClick={() => saveBlob(new Blob([jsonCode]), `${fragment.title}.json`)}>\n\t\t\t\t\t\t\tDownload JSON\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CodeSnippet\n\t\t\t\t\ttype='multi'\n\t\t\t\t\tlight\n\t\t\t\t\tclassName={codeSnippet}\n\t\t\t\t\tcopyButtonDescription={'Copy JSON to clipboard'}>\n\t\t\t\t\t\t{jsonCode}\n\t\t\t\t\t</CodeSnippet>\n\t\t\t\t</Tab>\n\t\t\t\t<Tab\n\t\t\t\tid='image'\n\t\t\t\tlabel='Image'\n\t\t\t\trole='presentation'\n\t\t\t\ttabIndex={0}>\n\t\t\t\t\t<div className={titleWrapper}>\n\t\t\t\t\t\t<h3>Image</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ExportImageComponent fragment={fragment} />\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n\t\t</Modal>\n\t);\n};\n","import React, { useContext } from 'react';\nimport { ModalType, ModalContext } from '../../context/modal-context';\nimport { DuplicateFragmentModal } from './duplicate-fragment-modal';\nimport { DeleteFragmentModal } from './delete-fragment-modal';\nimport { ExportModal } from './share-options/exports/export-modal';\n\n// eslint-disable-next-line react/prop-types\nexport const FragmentModal = ({ fragment }: any) => {\n\tconst [modalState] = useContext(ModalContext);\n\n\tswitch (modalState.ModalType) {\n\t\tcase ModalType.DUPLICATION:\n\t\t\treturn (\n\t\t\t// In the case that fragment modal is used in the dashboard the full fragment containing options and\n\t\t\t// data can't be passed in, so we use fragment id and fetch it\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DuplicateFragmentModal id={fragment.id}/>\n\t\t\t);\n\t\tcase ModalType.EXPORT:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<ExportModal fragment={fragment} />\n\t\t\t);\n\t\tcase ModalType.DELETION:\n\t\t\treturn (\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t<DeleteFragmentModal id={fragment.id} />\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport {\n\tCopy16,\n\tDelete16,\n\tExport16,\n\tUndo16,\n\tRedo16\n} from '@carbon/icons-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { FragmentModal } from './fragment-modal';\nimport { GlobalStateContext } from '../../context';\n\nconst editHeader = css`\n\tleft: 16rem;\n\tbackground: #fff;\n\tbox-shadow: inset 0px -1px #d8d8d8;\n\n\t.edit-wrapper {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t.title-wrap {\n\t\t\theight: 3rem;\n\t\t\tmargin-left: 3rem;\n\t\t\tdisplay: flex;\n\t\t\talign-self: center;\n\t\t\tflex-flow: column;\n\t\t}\n\t\t.title-subheading {\n\t\t\tdisplay: inline-flex;\n\t\t\t.bx--inline-loading {\n\t\t\t\twidth: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin-left: 10px;\n\t\t\t\ttop: -10px;\n\t\t\t}\n\t\t\t.date-wrap {\n\t\t\t\tfont-size: 12px;\n\t\t\t\tfont-style: italic;\n\t\t\t\tcolor: black;\n\t\t\t\tpadding-left: 12px;\n\t\t\t}\n\t\t}\n\t\t.fragment-title {\n\t\t\twhitespace: nowrap;\n\t\t\tfont-weight: bold;\n\t\t\tpadding-left: 12px;\n\t\t\tpadding-right: 16px;\n\t\t\tfloat: left;\n\t\t}\n\t\t.fragment-edit {\n\t\t\tmargin-top: 6px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and\n\t// store to local fragments checkbox to overlap.\n\t@media screen and (max-width: 67.0625rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-flow: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\t.edit-wrapper {\n\t\t\tflex-direction: column;\n\t\t\t.title-wrap {\n\t\t\t\tmargin-top: 10px;\n\t\t\t\talign-self: auto;\n\t\t\t}\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: row;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 0px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\t.edit-wrapper {\n\t\t\t.title-subheading {\n\t\t\t\tflex-direction: column;\n\t\t\t\t.bx--inline-loading {\n\t\t\t\t\tmargin-top: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst toolBarSeparator = css`\n\tbackground-color: #e0e0e0;\n\theight: 100%;\n\twidth: 1px;\n\tdisplay: inline-block;\n    margin: auto 6px;\n`;\n\nconst actionIconStyle = css`\n\tcolor: black;\n\n\t.bx--btn--ghost:disabled & {\n\t\tcolor: #8d8d8d;\n\t}\n`;\n\nconst fragmentEditToolBar = css`\n\tdisplay: flex;\n\tmargin-right: 5rem;\n\tmargin-top: 8px;\n\tmargin-bottom: 8px;\n\tbutton {\n\t\theight: 3rem;\n\t}\n\t.toolBarButtons {\n\t\tmin-width: 13.75rem\n\t}\n\t// This is the viewport width that causes the store to local\n\t// fragments checkbox and last modified label to overlap.\n\t@media screen and (max-width: 58.125rem) {\n\t\tmargin-left: 10px;\n\t\tflex-direction: row-reverse;\n\t\tplace-self: start;\n\t}\n\t// This is the viewport width that causes the loading and store\n\t// to local fragments to be disfigured.\n\t@media screen and (max-width: 42.6875rem) {\n\t\tmargin-left: 10px;\n\t\tmargin-top: 20px;\n\t\tflex-direction: column-reverse;\n\t\tplace-self: start;\n\t}\n`;\n\nexport const EditHeader = ({ fragment }: any) => {\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst {\n\t\tcanUndo,\n\t\tundoAction,\n\t\tcanRedo,\n\t\tredoAction\n\t} = useContext(GlobalStateContext);\n\n\treturn (\n\t\t<header\n\t\t\tclassName={editHeader}\n\t\t\taria-label={`Header for '${fragment.title}'`}\n\t\t\trole='banner'\n\t\t\ttabIndex={0}>\n\t\t\t<div className='edit-wrapper'>\n\t\t\t\t<div className='title-wrap'>\n\t\t\t\t\t<p className='fragment-title'>{fragment.title}</p>\n\n\t\t\t\t\t<div className='title-subheading'>\n\t\t\t\t\t\t<div className='date-wrap'>{`Last modified ${ fragment.lastModified}`}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={fragmentEditToolBar}>\n\t\t\t\t\t<div className='toolBarButtons'>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Undo'\n\t\t\t\t\t\t\ttitle='Undo'\n\t\t\t\t\t\t\tdisabled={!canUndo()}\n\t\t\t\t\t\t\tonClick={() => undoAction()}>\n\t\t\t\t\t\t\t<Undo16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Redo'\n\t\t\t\t\t\t\ttitle='Redo'\n\t\t\t\t\t\t\tdisabled={!canRedo()}\n\t\t\t\t\t\t\tonClick={() => redoAction()}>\n\t\t\t\t\t\t\t<Redo16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<div className={toolBarSeparator} />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Duplicate fragment'\n\t\t\t\t\t\t\ttitle='Duplicate fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDuplicationModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Copy16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='ghost'\n\t\t\t\t\t\t\taria-label='Delete fragment'\n\t\t\t\t\t\t\ttitle='Delete fragment'\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setDeletionModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<Delete16 className={actionIconStyle} />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkind='primary'\n\t\t\t\t\t\t\taria-label='Export fragment'\n\t\t\t\t\t\t\ttitle='Export fragment'\n\t\t\t\t\t\t\trenderIcon={Export16}\n\t\t\t\t\t\t\tonClick={() => dispatchModal({\n\t\t\t\t\t\t\t\ttype: ModalActionType.setExportModal,\n\t\t\t\t\t\t\t\tid: fragment.id\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\tExport\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<FragmentModal fragment={fragment} />\n\t\t</header>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { drag } from '../routes/edit/tools';\n\nconst elementTileStyle = css`\n\tborder: 1px solid #d8d8d8;\n\tmin-width: 127px;\n\twidth: 127px;\n\theight: 127px;\n\tdisplay: inline-flex;\n\tmargin-bottom: 1rem;\n\tflex-direction: column;\n\n\timg {\n\t\tmargin: auto;\n\t}\n\n\t.title {\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tmargin: 0 1rem auto auto;\n\t\toverflow-wrap: break-word;\n\t}\n`;\n\nexport const ElementTile = ({ children, componentObj }: any) => {\n\treturn (<div\n\t\tclassName={elementTileStyle}\n\t\tdraggable='true'\n\t\tonDragStart={(event: any) => drag(event, {\n\t\t\tcomponent: componentObj\n\t\t})}>\n\t\t{children}\n\t</div>);\n};\n","import React, { useContext, useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { Search } from 'carbon-components-react';\n\nimport { ElementTile } from '../../components/element-tile';\n\nimport { leftPane, leftPaneHeader } from '.';\nimport { allComponents } from '../../fragment-components';\nimport { GlobalStateContext } from '../../context';\n\nconst searchStyle = css`\n\tmargin-top: 15px;\n`;\n\nconst elementTileListStyle = css`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-wrap: wrap;\n\tmargin-top: 100px;\n\twidth: 270px;\n`;\n\nexport const ElementsPane = ({ isActive }: any) => {\n\tconst [filterString, setFilterString] = useState('');\n\tconst { fragments } = useContext(GlobalStateContext);\n\n\tconst microLayouts = fragments.filter((fragment: any) => fragment.labels?.includes('micro-layout'));\n\n\t/**\n\t * Returns true if element should show\n\t *\n\t * @param matches a list of strings that represent the component user might search for\n\t */\n\tconst shouldShow = (matches: string[]) => {\n\t\treturn !filterString || matches.some((match) => match.includes(filterString));\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\t<div className={leftPaneHeader}>\n\t\t\t\t<Search\n\t\t\t\t\tid='elements-search'\n\t\t\t\t\tclassName={searchStyle}\n\t\t\t\t\tlight\n\t\t\t\t\tlabelText='Filter elements'\n\t\t\t\t\tplaceholder='Filter elements'\n\t\t\t\t\tonChange={(event: any) => setFilterString(event.target.value)} />\n\t\t\t</div>\n\t\t\t<div className={elementTileListStyle}>\n\t\t\t\t{\n\t\t\t\t\tObject.values(allComponents)\n\t\t\t\t\t\t.filter((component: any) =>\n\t\t\t\t\t\t\t!component.componentInfo.hideFromElementsPane\n\t\t\t\t\t\t\t&& shouldShow(component.componentInfo.keywords))\n\t\t\t\t\t\t.map((component: any) =>\n\t\t\t\t\t\t\t<ElementTile componentObj={component.componentInfo.defaultComponentObj} key={component.componentInfo.name}>\n\t\t\t\t\t\t\t\t<img src={component.componentInfo.image} alt={component.componentInfo.name} />\n\t\t\t\t\t\t\t\t<span className='title'>{component.componentInfo.name}</span>\n\t\t\t\t\t\t\t</ElementTile>)\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tmicroLayouts && microLayouts.length > 0 && <>\n\t\t\t\t\t<h4>Micro layouts</h4>\n\t\t\t\t\t<div className={elementTileListStyle}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.values(microLayouts)\n\t\t\t\t\t\t\t\t// TODO prevent recursive adding\n\t\t\t\t\t\t\t\t.filter((component: any) => shouldShow([component.title, ...component.labels]))\n\t\t\t\t\t\t\t\t.map((component: any) =>\n\t\t\t\t\t\t\t\t\t<ElementTile componentObj={{ type: 'fragment', id: component.id }} key={component.id}>\n\t\t\t\t\t\t\t\t\t\t{/* <img src={component.componentInfo.image} alt={component.title} /> */}\n\t\t\t\t\t\t\t\t\t\t<span className='title'>{component.title}</span>\n\t\t\t\t\t\t\t\t\t</ElementTile>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React, { useContext, useState } from 'react';\nimport { css, cx } from 'emotion';\nimport { uniqueNamesGenerator, adjectives, colors, animals } from 'unique-names-generator';\nimport {\n\tButton,\n\tForm,\n\tSearch,\n\tTextArea,\n\tTextInput,\n\tTag\n} from 'carbon-components-react';\nimport { Add16 } from '@carbon/icons-react';\nimport { leftPane } from '.';\nimport { GlobalStateContext } from '../../context';\n\nconst searchContainerStyle = css`\n\tdisplay: flex;\n\tmargin-bottom: 1rem;\n\tpadding-top: 1rem;\n\n\tbutton {\n\t\tborder-bottom: 1px solid #8d8d8d;\n\t}\n`;\n\nexport const StylePane = ({ isActive }: any) => {\n\tconst [selectedStyleClassId, setSelectedStyleClassId] = useState('' as string);\n\tconst { styleClasses, setStyleClasses } = useContext(GlobalStateContext);\n\tconst [filterString, setFilterString] = useState('');\n\n\tconst getSelectedClass = () => styleClasses.find((c: any) => c.id === selectedStyleClassId) || {};\n\tconst getSelectedClassIndex = () => styleClasses.findIndex((c: any) => c.id === selectedStyleClassId);\n\n\tconst shouldShow = (styleClass: any) => {\n\t\tconst matches = [styleClass.name, styleClass.id];\n\t\treturn !filterString || matches.some((match) => match.includes(filterString));\n\t};\n\n\tconst getUniqueClass = (): any => {\n\t\tconst className = uniqueNamesGenerator({\n\t\t\tdictionaries: [adjectives, colors, animals],\n\t\t\tseparator: '-',\n\t\t\tlength: 3\n\t\t});\n\n\t\tif (!styleClasses.find((sc: any) => sc.id === className || sc.name === className)) {\n\t\t\treturn {\n\t\t\t\tid: className,\n\t\t\t\tname: className\n\t\t\t};\n\t\t}\n\n\t\treturn getUniqueClass();\n\t};\n\n\tconst updateSelectedClass = (newClass: any) => {\n\t\tconst selectedClassIndex = getSelectedClassIndex();\n\t\tif (selectedClassIndex < 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetStyleClasses([\n\t\t\t...styleClasses.slice(0, selectedClassIndex),\n\t\t\tnewClass,\n\t\t\t...styleClasses.slice(selectedClassIndex + 1)\n\t\t]);\n\t};\n\n\tconst updateSelectedClassContent = (content: string | undefined) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tcontent: content || ''\n\t\t});\n\t};\n\n\tconst updateSelectedClassName = (name: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tname\n\t\t});\n\t};\n\n\tconst updateSelectedClassId = (id: string) => {\n\t\tupdateSelectedClass({\n\t\t\t...getSelectedClass(),\n\t\t\tid\n\t\t});\n\t\tsetSelectedStyleClassId(id);\n\t};\n\n\tconst addNewStyleClass = () => {\n\t\tconst newStyleClass = getUniqueClass();\n\t\tsetStyleClasses([...styleClasses, newStyleClass]);\n\t\tsetSelectedStyleClassId(newStyleClass.id);\n\t};\n\n\tconst removeStyleClass = (styleClassId: string) => {\n\t\tsetStyleClasses(styleClasses.filter((sc: any) => sc.id !== styleClassId));\n\t};\n\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\t<Form>\n\t\t\t\t<div className={searchContainerStyle}>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tid=\"styles-search\"\n\t\t\t\t\t\tlight\n\t\t\t\t\t\tlabelText=\"Filter classes\"\n\t\t\t\t\t\tplaceholder=\"Filter classes\"\n\t\t\t\t\t\tonChange={(event: any) => setFilterString(event.target.value)} />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkind=\"ghost\"\n\t\t\t\t\t\trenderIcon={Add16}\n\t\t\t\t\t\ticonDescription=\"Add new class\"\n\t\t\t\t\t\thasIconOnly\n\t\t\t\t\t\tonClick={addNewStyleClass} />\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\tstyleClasses.filter(shouldShow).map((styleClass: any) => (\n\t\t\t\t\t\t<Tag\n\t\t\t\t\t\tkey={styleClass.name}\n\t\t\t\t\t\tfilter\n\t\t\t\t\t\tonClick={() => setSelectedStyleClassId(styleClass.id)}\n\t\t\t\t\t\tonClose={() => removeStyleClass(styleClass.id)}>\n\t\t\t\t\t\t\t{styleClass.name}\n\t\t\t\t\t\t</Tag>\n\t\t\t\t\t))\n\t\t\t\t} <br />\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='Descriptive name'\n\t\t\t\t\thelperText='Name that appears in tags and search'\n\t\t\t\t\tvalue={getSelectedClass().name || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassName(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextInput\n\t\t\t\t\tlabelText='CSS selector'\n\t\t\t\t\thelperText='Value used in development'\n\t\t\t\t\tvalue={getSelectedClass().id || ''}\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassId(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<TextArea\n\t\t\t\t\tvalue={getSelectedClass().content || ''}\n\t\t\t\t\tlabelText={getSelectedClass().id || 'Select a class first'}\n\t\t\t\t\thelperText='Put CSS properties for your class here'\n\t\t\t\t\tdisabled={!getSelectedClass().id}\n\t\t\t\t\tonChange={(event: any) => {\n\t\t\t\t\t\tupdateSelectedClassContent(event.currentTarget.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { cx } from 'emotion';\nimport { leftPane } from '.';\n\nexport const CodePane = ({ isActive }: any) => {\n\treturn (\n\t\t<div className={cx(leftPane, isActive ? 'is-active' : '')}>\n\t\t\tCode\n\t\t\t<br /><br /> <strong>Comming soon!</strong>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport { Breadcrumb, BreadcrumbItem } from 'carbon-components-react';\n\nimport { getParentComponent, getSelectedComponent } from '../../components/fragment';\nimport { useFragment } from '../../context';\n\nconst getAncestors = (state: any, component: any) => {\n\tconst ancestors: any[] = [];\n\n\t// there's probably a way to optimize this function\n\n\tif (state === component) {\n\t\treturn ancestors;\n\t}\n\n\tlet parent = component;\n\n\tdo {\n\t\tparent = getParentComponent(state, parent);\n\t\tancestors.unshift(parent);\n\t} while (parent !== state);\n\n\treturn ancestors;\n};\n\nexport const SelectedComponentBreadcrumbs = ({ selectedComponent }: any) => {\n\tconst [fragment, setFragment] = useFragment();\n\n\tif (!selectedComponent) {\n\t\tselectedComponent = getSelectedComponent(fragment);\n\t}\n\n\tconst selectComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tselectedComponentId: component.id\n\t\t}, true);\n\t};\n\n\treturn selectedComponent && <Breadcrumb noTrailingSlash>\n\t\t{getAncestors(fragment.data, selectedComponent).map((component) =>\n\t\t\t<BreadcrumbItem\n\t\t\thref=\"#\"\n\t\t\tkey={component.id}\n\t\t\tisCurrentPage={!component.type}\n\t\t\tonClick={(event: any) => {\n\t\t\t\tevent.nativeEvent.preventDefault();\n\t\t\t\tif (!component.type) {\n\t\t\t\t\t// happens when clicking root element\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tselectComponent(component);\n\t\t\t}}>\n\t\t\t\t{component.type || 'root'}\n\t\t\t</BreadcrumbItem>\n\t\t)}\n\t\t<BreadcrumbItem href=\"#\" onClick={(event: any) => event.nativeEvent.preventDefault()} isCurrentPage>\n\t\t\t{selectedComponent.type || 'container'}\n\t\t</BreadcrumbItem>\n\t</Breadcrumb>;\n};\n","import React from 'react';\nimport {\n\tTextInput,\n\tCheckbox,\n\tTooltipDefinition\n} from 'carbon-components-react';\n\nimport { ComponentCssClassSelector } from '../../components/css-class-selector';\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\nimport { allComponents } from '../../fragment-components';\nimport { SelectedComponentBreadcrumbs } from './selected-component-breadcrumbs';\nimport { css } from 'emotion';\n\nconst styleContextPaneStyle = css`\n.bx--form-item.bx--checkbox-wrapper {\n\tdisplay: inline-flex;\n}\n`;\n\nconst showComponentSettingsUI = (selectedComponent: any, setComponent: any) => {\n\tfor (const component of Object.values(allComponents)) {\n\t\t// Find the UI for editing style for our component\n\t\tif (selectedComponent.type === component.componentInfo.type) {\n\t\t\treturn <component.componentInfo.settingsUI\n\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\tsetComponent={setComponent} />;\n\t\t}\n\t}\n};\n\nexport const SettingsContextPane = ({ fragment, setFragment }: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any, updateActionHistory = true) => {\n\t\tsetFragment(\n\t\t\t{\n\t\t\t\t...fragment,\n\t\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\t\ttype: 'update',\n\t\t\t\t\tcomponent\n\t\t\t\t})\n\t\t\t},\n\t\t\tupdateActionHistory\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className={styleContextPaneStyle}>\n\t\t\t{\n\t\t\t\tselectedComponent && <>\n\t\t\t\t\t<SelectedComponentBreadcrumbs\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\t\t\tsetFragment={setFragment} />\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className='context-pane-content'>\n\t\t\t\t\t\t{showComponentSettingsUI(selectedComponent, setComponent)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{\n\t\t\t\t!selectedComponent && <>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tid='fragmentName'\n\t\t\t\t\t\tlabelText='Fragment name'\n\t\t\t\t\t\tdefaultValue={fragment.title}\n\t\t\t\t\t\tonChange={(event: any) => setFragment({\n\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\ttitle: event.target.value\n\t\t\t\t\t\t})}/>\n\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid='setFragmentAsTemplate'\n\t\t\t\t\t\tchecked={fragment.labels && fragment.labels.includes('template')}\n\t\t\t\t\t\tlabelText='Make this fragment a &nbsp;'\n\t\t\t\t\t\tonChange={(checked: boolean) => {\n\t\t\t\t\t\t\tif (checked) {\n\t\t\t\t\t\t\t\tif (!fragment.labels?.includes('template')) {\n\t\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\t\tlabels: [...(fragment.labels || []), 'template']\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if the set template is unchecked, remove the 'template' label\n\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\tlabels: fragment.labels?.filter((label: string) => label !== 'template')\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t<TooltipDefinition\n\t\t\t\t\t\ttooltipText='Setting a fragment as a template makes it an easy starting point\n\t\t\t\t\t\tfor future fragments.'\n\t\t\t\t\t\tdirection='bottom'>\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t</TooltipDefinition>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tid='setFragmentAsMicroLayout'\n\t\t\t\t\t\tchecked={fragment.labels && fragment.labels.includes('micro-layout')}\n\t\t\t\t\t\tlabelText='Make this fragment a &nbsp;'\n\t\t\t\t\t\tonChange={(checked: boolean) => {\n\t\t\t\t\t\t\tif (checked) {\n\t\t\t\t\t\t\t\tif (!fragment.labels?.includes('micro-layout')) {\n\t\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\t\tlabels: [...(fragment.labels || []), 'micro-layout']\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// if the set micro-layout is unchecked, remove the 'micro-layout' label\n\t\t\t\t\t\t\t\tsetFragment({\n\t\t\t\t\t\t\t\t\t...fragment,\n\t\t\t\t\t\t\t\t\tlabels: fragment.labels?.filter((label: string) => label !== 'micro-layout')\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t<TooltipDefinition\n\t\t\t\t\t\ttooltipText='Setting a fragment as a micro layout makes it available to drag and drop into fragments'\n\t\t\t\t\t\tdirection='bottom'>\n\t\t\t\t\t\tmicro layout\n\t\t\t\t\t</TooltipDefinition>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{\n\t\t\t\t!selectedComponent && <ComponentCssClassSelector componentObj={fragment} setComponent={setFragment} />\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tAComponentCodeUI,\n\tallComponents\n} from '../../fragment-components';\n\nimport { getSelectedComponent, updatedState } from '../../components/fragment';\n\nconst showComponentCodeOptions = (selectedComponent: any, setComponent: any) => {\n\tfor (const component of Object.values(allComponents)) {\n\t\t// Find the UI for editing code props for our component\n\t\tif (selectedComponent.type === component.componentInfo.type && component.componentInfo.codeUI) {\n\t\t\treturn <component.componentInfo.codeUI\n\t\t\t\tselectedComponent={selectedComponent}\n\t\t\t\tsetComponent={setComponent} />;\n\t\t}\n\t}\n\treturn <AComponentCodeUI selectedComponent={selectedComponent} setComponent={setComponent} />;\n};\n\nexport const CodeContextPane = ({ fragment, setFragment }: any) => {\n\tconst selectedComponent = getSelectedComponent(fragment);\n\n\tconst setComponent = (component: any) => {\n\t\tsetFragment({\n\t\t\t...fragment,\n\t\t\tdata: updatedState(fragment.data, {\n\t\t\t\ttype: 'update',\n\t\t\t\tcomponent\n\t\t\t})\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className='context-pane-content'>\n\t\t\t{selectedComponent && showComponentCodeOptions(selectedComponent, setComponent)}\n\t\t</div>\n\t);\n};\n","import React from 'react';\n\nimport {\n\tButton,\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSearch\n} from 'carbon-components-react';\n\nimport {\n\tAdd16,\n\tArrowsVertical16,\n\tCheckmarkFilled16\n} from '@carbon/icons-react';\n\nimport { css } from 'emotion';\n\nconst dashboardSearchWrapper = css`\n\tdisplay: flex;\n\twidth: 100%;\n\n\t// 520px is the point which the search bar becomes too small to display the full text, moves\n\t// the sort, share, and add button below the search bar at this point.\n\t@media screen and (max-width: 520px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst searchInput = css`\n\tinput {\n\t\tborder-bottom: none;\n\n\t\t@media screen and (max-width: 520px) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n`;\n\nconst sortButton = css`\n\theight: 3rem;\n\twidth: 3rem;\n\tbackground-color: #f4f4f4;\n`;\n\nconst sortOverflowItem = css`\n\tsvg {\n\t\ttransform: translate(7px, 1.5px);\n\t}\n`;\n\nexport enum SortDirection {\n\tAscending,\n\tDescending\n}\n\nexport const DashboardSearch = ({\n\tonSearchHandler,\n\tonSortHandler,\n\tdisplayWizard,\n\tsetDisplayWizard,\n\tsortDirection\n}: any) => (\n\t<div className={dashboardSearchWrapper}>\n\t\t<Search\n\t\t\tlabelText='Fragment'\n\t\t\tplaceHolderText='Search fragments'\n\t\t\tclassName={searchInput}\n\t\t\tonChange={(event: any) => onSearchHandler(event.target.value)} />\n\t\t<OverflowMenu\n\t\t\tclassName={sortButton}\n\t\t\tariaLabel='Sort fragment'\n\t\t\trenderIcon={() => <ArrowsVertical16 />}\n\t\t\tonClick={(event: { stopPropagation: () => void }) => event.stopPropagation()}>\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tNewest to oldest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Ascending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => onSortHandler(SortDirection.Ascending)} />\n\t\t\t<OverflowMenuItem\n\t\t\t\titemText={(\n\t\t\t\t\t<div className={sortOverflowItem}>\n\t\t\t\t\t\tOldest to newest\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsortDirection === SortDirection.Descending\n\t\t\t\t\t\t\t\t? <CheckmarkFilled16 />\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tonClick={() => onSortHandler(SortDirection.Descending)} />\n\t\t</OverflowMenu>\n\t\t<Button\n\t\tonClick={() => setDisplayWizard(!displayWizard)}\n\t\ttitle='Add new fragment'\n\t\taria-label='Add new fragment'>\n\t\t\tNew fragment\n\t\t\t<Add16 className='bx--btn__icon' />\n\t\t</Button>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\nimport { ContentSwitcher, Switch } from 'carbon-components-react';\n\n// keep the enum order same as the switch order so context switcher\n// knows to select the correct one. Shout if you have a cleaner alternative.\nexport enum FragmentGroupDisplayed {\n\tAllFragments,\n\tTemplates,\n\tLocalOnly\n}\n\nconst dashboardHeaderWrapper = css`\n\tdisplay: flex;\n\tmargin: 2rem 0;\n\n\t// 676px is when the content switcher becomes too small to show full text, moves the\n\t// content switcher below the title at this point.\n\t@media screen and (max-width: 676px) {\n\t\tflex-wrap: wrap;\n\t}\n`;\n\nconst fragmentTitle = css`\n\twidth: 100%;\n`;\n\nconst contentSwitcher = css`\n\twidth: 450px;\n`;\n\nexport const DashboardHeader = ({ onDisplayedSwitchHandler, fragmentGroupDisplayed }: any) => (\n\t<div className={dashboardHeaderWrapper}>\n\t\t<h2 className={fragmentTitle}>Fragments</h2>\n\t\t<ContentSwitcher\n\t\t\tclassName={contentSwitcher}\n\t\t\tonChange={(event: any) => onDisplayedSwitchHandler(event.name)}\n\t\t\tselectedIndex={fragmentGroupDisplayed}>\n\t\t\t<Switch name={FragmentGroupDisplayed.AllFragments} text='All fragments' />\n\t\t\t<Switch name={FragmentGroupDisplayed.Templates} text='Templates only' />\n\t\t</ContentSwitcher>\n\t</div>\n);\n","import React, { useContext, useState } from 'react';\n\nimport { FragmentWizardModals } from './fragment-wizard';\n\nimport { Modal } from 'carbon-components-react';\nimport { css } from 'emotion';\nimport { SelectionTile } from '../../../components/selection-tile';\nimport { generateNewFragment } from './generate-new-fragment';\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\n\nconst createFragmentTiles = css`\n\tdisplay: flex;\n\tmargin-top: 30px;\n\tmargin-left: 15px;\n\tmargin-right: 15px;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n`;\n\nconst createFragmentTile = css`\n\twidth: 48%;\n\theight: 200px;\n\t.bx--tile {\n\t\theight: 100%;\n\t}\n`;\n\nexport enum CreateOptions {\n\tCHOOSE_TEMPLATE,\n\tFROM_SCRATCH,\n\tIMPORT_JSON\n}\n\nexport interface CreateFragmentModalProps {\n\tshouldDisplay: boolean;\n\tsetShouldDisplay: (shouldDisplay: boolean) => void;\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void;\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void;\n}\n\nexport const CreateFragmentModal = (props: CreateFragmentModalProps) => {\n\tconst [selectedCreateOption, setSelectedCreateOption] = useState<CreateOptions | null>(null);\n\n\tconst { addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(\n\t\t\t{ items: [], id: 1 }\n\t\t);\n\n\t\taddFragment(generatedFragment);\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\thasForm\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tif (selectedCreateOption === CreateOptions.IMPORT_JSON) {\n\t\t\t\t\t// open modal with file upload\n\t\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.IMPORT_JSON_MODAL);\n\t\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (selectedCreateOption === CreateOptions.FROM_SCRATCH) {\n\t\t\t\t\tgenerateFragment();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tprops.setDisplayedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => {\n\t\t\t\tprops.setShouldDisplay(false);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Next'\n\t\t\tprimaryButtonDisabled={selectedCreateOption === null}\n\t\t\tsecondaryButtonText='Cancel'>\n\t\t\t<p>Start with a template or create a new fragment from scratch.</p>\n\t\t\t<div className={createFragmentTiles}>\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => setSelectedCreateOption(CreateOptions.IMPORT_JSON)}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.IMPORT_JSON}\n\t\t\t\t\tlabel='Import JSON' />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => setSelectedCreateOption(CreateOptions.CHOOSE_TEMPLATE)}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.CHOOSE_TEMPLATE}\n\t\t\t\t\tlabel='Pick a template' />\n\t\t\t\t<SelectionTile\n\t\t\t\t\tstyles={createFragmentTile}\n\t\t\t\t\tonChange={() => setSelectedCreateOption(CreateOptions.FROM_SCRATCH)}\n\t\t\t\t\tselected={selectedCreateOption === CreateOptions.FROM_SCRATCH}\n\t\t\t\t\tlabel='Start from scratch' />\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useEffect } from 'react';\n\nimport { Loading } from 'carbon-components-react';\n\nimport { css } from 'emotion';\nimport { getFragmentPreviewUrl } from '../utils/fragment-tools';\n\nconst fragmentImage = css`\n\twidth: auto;\n\theight: auto;\n\tmax-height: 173px;\n\tmax-width: 333px;\n\tdisplay: block;\n\tpadding-top: 8px;\n`;\nconst imagePlaceholderStyle = css`\n\theight: 173px;\n`;\nconst spinner = css`\n\tposition: absolute;\n\ttop: calc(50% - 44px - 32px);\n\twidth: calc(100% - 16px);\n\n\t.bx--loading {\n\t\tmargin: auto;\n\t}\n`;\n\nexport const FragmentPreview = ({ fragment, previewUrl, setPreviewUrl }: any) => {\n\tconst updatePreviewUrl = async () => {\n\t\tif (setPreviewUrl) {\n\t\t\tsetPreviewUrl(await getFragmentPreviewUrl(fragment));\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tupdatePreviewUrl();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [fragment]);\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\tpreviewUrl\n\t\t\t\t\t? <img\n\t\t\t\t\t\tloading='lazy'\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\tclassName={fragmentImage}\n\t\t\t\t\t\talt={`fragment preview: ${fragment.title}`} />\n\t\t\t\t\t: <div className={imagePlaceholderStyle} />\n\t\t\t}\n\t\t\t<div className={spinner}>\n\t\t\t\t<Loading withOverlay={false} active={!previewUrl} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n\tOverflowMenu,\n\tOverflowMenuItem,\n\tSkeletonText,\n\tTile\n} from 'carbon-components-react';\nimport { ModalContext, ModalActionType } from '../../context/modal-context';\nimport { FragmentPreview } from '../../components/fragment-preview';\nimport { getFragmentPreviewUrl } from '../../utils/fragment-tools';\nimport './fragment-tile.scss';\n\nexport const FragmentTile = ({\n\tfragment,\n\ttitle,\n\tto,\n\tlastModified,\n\tsetModalFragment\n}: any) => {\n\tconst history = useHistory();\n\tconst [, dispatchModal] = useContext(ModalContext);\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\tconst handleModalState = (modalAction: ModalActionType) => {\n\t\tsetModalFragment(fragment);\n\t\tdispatchModal({\n\t\t\ttype: modalAction,\n\t\t\tid: fragment.id\n\t\t});\n\t};\n\n\tconst resetPreview = async () => setPreviewUrl(await getFragmentPreviewUrl(fragment) as string);\n\n\treturn (\n\t\t<div className='tile-wrapper'>\n\t\t\t<Tile className='tile-style' >\n\t\t\t\t<div className='tile-inner-wrapper'>\n\t\t\t\t\t<Link to={to}>\n\t\t\t\t\t\t<FragmentPreview\n\t\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\t\tpreviewUrl={previewUrl}\n\t\t\t\t\t\t\tsetPreviewUrl={setPreviewUrl} />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className='fragment-info'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to={to} className='dashboard-link'>\n\t\t\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span>{lastModified ? lastModified : 'Last modified date unknown'}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<OverflowMenu\n\t\t\t\t\t\tclassName='fragment-overflow'\n\t\t\t\t\t\tariaLabel='Fragment options'\n\t\t\t\t\t\ticonDescription=''\n\t\t\t\t\t\tonClick={(event: { stopPropagation: () => void }) => event.stopPropagation()}>\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Edit'\n\t\t\t\t\t\t\t\tonClick={() => history.push(`/edit/${fragment.id}`)} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Export'\n\t\t\t\t\t\t\t\tonClick={() => handleModalState(ModalActionType.setExportModal)} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Duplicate'\n\t\t\t\t\t\t\t\tonClick={() => handleModalState(ModalActionType.setDuplicationModal)} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Reset preview'\n\t\t\t\t\t\t\t\tonClick={resetPreview} />\n\t\t\t\t\t\t\t<OverflowMenuItem\n\t\t\t\t\t\t\t\titemText='Remove'\n\t\t\t\t\t\t\t\tonClick={() => handleModalState(ModalActionType.setDeletionModal)}\n\t\t\t\t\t\t\t\tisDelete />\n\t\t\t\t\t\t</OverflowMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Tile>\n\t\t</div>\n\t);\n};\n\nexport const SkeletonFragmentTile = () => (\n\t<div className='tile-wrapper'>\n\t\t<Tile>\n\t\t\t<div className='tile-inner-wrapper-base'>\n\t\t\t\t<SkeletonText heading width='150px' />\n\t\t\t</div>\n\t\t</Tile>\n\t</div>\n);\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { FragmentTile } from './fragment-tile';\n\n// import the img placeholder svg\nimport placeholder from './../../assets/dashboard-empty-state.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 150px;\n\talign-items: center;\n`;\n\nconst fragmentRowWrapper = css`\n\tmargin-top: 3rem;\n\tbackground: #f4f4f4;\n\tmin-width: 100%;\n\theight: 100%\n`;\n\nexport const FragmentTileList = ({ fragments, loaded, setModalFragment }: any) => {\n\tconst getTilesOrPlaceholder = () => {\n\t\tif ((!fragments || fragments.length === 0) && loaded) {\n\t\t\treturn (\n\t\t\t\t<div className={placeholderContainer}>\n\t\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t\t<img alt=\"No fragments exist\" src={placeholder} className={svgStyle} />\n\t\t\t\t\t\t<h3>You have no fragments here.</h3>\n\t\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\t\tTo build a new fragment, click <strong>New Fragment</strong>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn fragments.map((v: any) => (\n\t\t\t<FragmentTile\n\t\t\t\tkey={v.id}\n\t\t\t\t{...v}\n\t\t\t\tfragment={v}\n\t\t\t\tto={`/edit/${v.id}`}\n\t\t\t\t{...v.lastModified}\n\t\t\t\tsetModalFragment={setModalFragment}/>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className={fragmentRowWrapper}>\n\t\t\t{getTilesOrPlaceholder()}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nconst tileFooter = css`\n\tposition: absolute;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n\tbottom: 15px;\n\tp {\n\t\tfont-weight: bold;\n\t}\n\tspan {\n\t\tmargin-right: 30px;\n\t}\n`;\n\nexport interface SelectionTileInterface {\n\tstyles?: any;\n\tonChange?: any;\n\ticon?: JSX.Element | null;\n\tlabel?: string;\n\tselected?: boolean;\n\ttag?: JSX.Element | null;\n}\n\nexport const SelectionTile = (props: SelectionTileInterface) => (\n\t<div className={props.styles}>\n\t\t<SelectableTile\n\t\t\tlight={true}\n\t\t\tonChange={() => props.onChange()}\n\t\t\tselected={props.selected}>\n\t\t\t{props.icon}\n\t\t\t<div className={tileFooter}>\n\t\t\t\t<p>{props.label}</p>\n\t\t\t\t{props.tag}\n\t\t\t</div>\n\t\t</SelectableTile>\n\t</div>\n);\n","import { getRandomId } from '../../../utils/fragment-tools';\n\nexport const generateNewFragment = (\n\tfragment: any\n) => {\n\tconst fragmentID = getRandomId();\n\tconst fragmentName = 'New fragment';\n\n\treturn {\n\t\tid: fragmentID,\n\t\tlastModified: new Date().toISOString(),\n\t\ttitle: fragmentName,\n\t\tdata: fragment\n\t};\n};\n","import React, { useState } from 'react';\n\nimport { CreateFragmentModal } from './create-fragment-modal';\nimport { ChooseFragmentModal } from './choose-fragment-modal';\nimport { ImportJsonModal } from './import-json-modal';\n\nexport enum FragmentWizardModals {\n\tCREATE_FRAGMENT_MODAL,\n\tCHOOSE_FRAGMENT_MODAL,\n\tIMPORT_JSON_MODAL\n}\n\nexport const FragmentWizard = ({ shouldDisplay, setShouldDisplay }: any) => {\n\t// These are states which are shared amongst the three modals.\n\tconst [displayedModal, setDisplayedModal]\n\t\t= useState<FragmentWizardModals | null>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\t// This is used to indicate which modal was last visited and is used to go go back to the\n\t// correct previous modal.\n\tconst [lastVisitedModal, setLastVisitedModal]\n\t\t= useState<FragmentWizardModals>(FragmentWizardModals.CREATE_FRAGMENT_MODAL);\n\tconst [uploadedData, setUploadedData] = useState<any>({});\n\n\tconst modalSwitcher = () => {\n\t\tif (!shouldDisplay) {\n\t\t\treturn null;\n\t\t}\n\t\tswitch (displayedModal) {\n\t\t\tcase FragmentWizardModals.IMPORT_JSON_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ImportJsonModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CREATE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<CreateFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal} />\n\t\t\t\t);\n\t\t\tcase FragmentWizardModals.CHOOSE_FRAGMENT_MODAL:\n\t\t\t\treturn (\n\t\t\t\t\t<ChooseFragmentModal\n\t\t\t\t\t\tshouldDisplay={shouldDisplay}\n\t\t\t\t\t\tsetShouldDisplay={setShouldDisplay}\n\t\t\t\t\t\tsetDisplayedModal={setDisplayedModal}\n\t\t\t\t\t\tlastVisitedModal={lastVisitedModal}\n\t\t\t\t\t\tsetLastVisitedModal={setLastVisitedModal}\n\t\t\t\t\t\tuploadedData={uploadedData}\n\t\t\t\t\t\tsetUploadedData={setUploadedData} />\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn modalSwitcher();\n};\n","import React, { useState } from 'react';\n\nimport { SelectableTile } from 'carbon-components-react';\n\nimport { FragmentPreview } from '../../../components/fragment-preview';\nimport './choose-fragment-modal.scss';\n\nexport const ChooseFragmentModalTile = ({ fragment, selectedFragment, setSelectedFragment }: any) => {\n\tconst [previewUrl, setPreviewUrl] = useState('');\n\n\treturn (\n\t\t<div className='modal-tile-wrapper' key={fragment.id}>\n\t\t\t<SelectableTile\n\t\t\t\tclassName='tile-style'\n\t\t\t\tonClick={() => setSelectedFragment(fragment)}\n\t\t\t\tselected={fragment === selectedFragment}>\n\t\t\t\t<div className='tile-inner-wrapper'>\n\t\t\t\t\t<FragmentPreview\n\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\tpreviewUrl={previewUrl}\n\t\t\t\t\t\tsetPreviewUrl={setPreviewUrl} />\n\t\t\t\t\t<h3>{fragment.title}</h3>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{fragment.lastModified || 'Last modified date unknown'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</SelectableTile>\n\t\t</div>\n\t);\n};\n","import React, { useContext, useState } from 'react';\n\nimport {\n\tModal,\n\tInlineNotification,\n\tNotificationActionButton\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\n\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\nimport { warningNotificationProps } from '../../../utils/file-tools';\nimport { Col } from '../../../components';\nimport { getFragmentDuplicate, getFragmentTemplates } from '../../../utils/fragment-tools';\nimport './choose-fragment-modal.scss';\nimport { ChooseFragmentModalTile } from './choose-fragment-modal-tile';\n\nexport interface ChooseFragmentModalProps {\n\tshouldDisplay: boolean;\n\tsetShouldDisplay: (shouldDisplay: boolean) => void;\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void;\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void;\n\tlastVisitedModal: FragmentWizardModals;\n\tuploadedData: any;\n\tsetUploadedData: (uploadedData: any) => void;\n}\n\nexport const ChooseFragmentModal = (props: ChooseFragmentModalProps) => {\n\tconst [selectedFragment, setSelectedFragment] = useState<any>(null);\n\tconst { fragments, addFragment } = useContext(GlobalStateContext);\n\n\tconst history = useHistory();\n\n\tconst generateFragment = () => {\n\t\tif (selectedFragment === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentCopy = getFragmentDuplicate(\n\t\t\tfragments,\n\t\t\tselectedFragment,\n\t\t\t// When a new fragment is created from an existing template, it shouldn't\n\t\t\t// be a template by default.\n\t\t\t{ labels: selectedFragment?.labels?.filter((label: string) => label !== 'template') }\n\t\t);\n\n\t\taddFragment(fragmentCopy);\n\t\thistory.push(`/edit/${fragmentCopy.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tsize='lg'\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => props.setShouldDisplay(false)}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Create new fragment'\n\t\t\tprimaryButtonText='Done'\n\t\t\tprimaryButtonDisabled={!selectedFragment}\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t{\n\t\t\t\tprops.uploadedData.wasDataModified\n\t\t\t\t\t? <InlineNotification\n\t\t\t\t\t\t{...warningNotificationProps}\n\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<NotificationActionButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\tdata: [],\n\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tUse demo data\n\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprops.uploadedData && props.uploadedData.originalData\n\t\t\t\t\t\t\t\t\t&& <NotificationActionButton\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tprops.setUploadedData({\n\t\t\t\t\t\t\t\t\t\t\t\tdata: props.uploadedData.originalData,\n\t\t\t\t\t\t\t\t\t\t\t\twasDataModified: false\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tUse unmodified data\n\t\t\t\t\t\t\t\t\t</NotificationActionButton>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t} />\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<p>Choose a type of fragment and click done to start editing your new fragment</p>\n\t\t\t<div className='fragment-options'>\n\t\t\t\t<Col cols={{\n\t\t\t\t\tsm: 12,\n\t\t\t\t\tmd: 12,\n\t\t\t\t\tlg: 12\n\t\t\t\t}}>\n\t\t\t\t\t{\n\t\t\t\t\t\tgetFragmentTemplates(fragments).map((fragment: any) => (\n\t\t\t\t\t\t\t<ChooseFragmentModalTile\n\t\t\t\t\t\t\t\tkey={fragment.id}\n\t\t\t\t\t\t\t\tfragment={fragment}\n\t\t\t\t\t\t\t\tselectedFragment={selectedFragment}\n\t\t\t\t\t\t\t\tsetSelectedFragment={setSelectedFragment} />\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Col>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { css } from 'emotion';\nimport {\n\tModal,\n\tFormItem,\n\tFileUploaderDropContainer,\n\tFileUploaderItem,\n\tTextArea\n} from 'carbon-components-react';\nimport { FragmentWizardModals } from './fragment-wizard';\nimport { generateNewFragment } from './generate-new-fragment';\n\nimport { GlobalStateContext } from '../../../context';\nimport { useHistory } from 'react-router-dom';\n\nconst fragmentOptions = css`\n\tmargin-left: 30px;\n\tmargin-right: 30px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\n\t// This is the viewport width that causes the selection tiles to overlap.\n\t@media screen and (max-width: 45rem) {\n\t\tflex-direction: column;\n\t}\n`;\n\nexport interface ImportJsonModalProps {\n\tshouldDisplay: boolean;\n\tsetShouldDisplay: (shouldDisplay: boolean) => void;\n\tsetDisplayedModal: (displayedModal: FragmentWizardModals | null) => void;\n\tsetLastVisitedModal: (lastVisitedModal: FragmentWizardModals) => void;\n\tlastVisitedModal: FragmentWizardModals;\n\tuploadedData: any;\n\tsetUploadedData: (uploadedData: any) => void;\n\tmultiple?: boolean;\n}\n\nlet lastId = 0;\n\nconst uid = (prefix = 'id') => {\n\tlastId++;\n\treturn `${prefix}${lastId}`;\n};\n\nexport const ImportJsonModal = (props: ImportJsonModalProps) => {\n\tconst { addFragment } = useContext(GlobalStateContext);\n\tconst [files, setFiles] = useState([] as any[]);\n\tconst [jsonString, _setJsonString] = useState('');\n\tconst [fragmentJson, setFragmentJson] = useState('');\n\tconst [jsonParseError, setJsonParseError] = useState('');\n\n\tconst setJsonString = (js: string) => {\n\t\t_setJsonString(js);\n\n\t\ttry {\n\t\t\tif (js) {\n\t\t\t\tsetFragmentJson(JSON.parse(js));\n\t\t\t}\n\t\t\tsetJsonParseError('');\n\t\t} catch (e) {\n\t\t\tsetJsonParseError((e as any).toString());\n\t\t}\n\t};\n\n\tconst handleDrop = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tconst handleDragover = (e: any) => {\n\t\te.preventDefault();\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('drop', handleDrop);\n\t\tdocument.addEventListener('dragover', handleDragover);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('drop', handleDrop);\n\t\t\tdocument.removeEventListener('dragover', handleDragover);\n\t\t};\n\t}, []);\n\n\tconst history = useHistory();\n\tconst uploadFile = async (fileToUpload: any) => {\n\t\t// file size validation\n\t\tif (fileToUpload.filesize > 512000) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'File size exceeds limit',\n\t\t\t\terrorBody: '500kb max file size. Select a new file and try again.'\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// file type validation\n\t\tif (fileToUpload.invalidFileType) {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file',\n\t\t\t\tinvalid: true,\n\t\t\t\terrorSubject: 'Invalid file type',\n\t\t\t\terrorBody: `\"${fileToUpload.name}\" does not have a valid file type.`\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// reading\n\t\tconst reader = new FileReader();\n\t\treader.readAsText(fileToUpload.file, 'UTF-8');\n\t\treader.onload = (event) => {\n\t\t\tsetJsonString(event.target?.result as string);\n\t\t};\n\t\treader.onerror = function (_) {\n\t\t\tconsole.log('oops');\n\t\t};\n\n\t\tconst updatedFile = {\n\t\t\t...fileToUpload,\n\t\t\tstatus: 'complete',\n\t\t\ticonDescription: 'Upload complete'\n\t\t};\n\t\tsetFiles((files) =>\n\t\t\tfiles.map((file) =>\n\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t)\n\t\t);\n\n\t\t// show x icon after 1 second\n\t\tsetTimeout(() => {\n\t\t\tconst updatedFile = {\n\t\t\t\t...fileToUpload,\n\t\t\t\tstatus: 'edit',\n\t\t\t\ticonDescription: 'Delete file'\n\t\t\t};\n\t\t\tsetFiles((files) =>\n\t\t\t\tfiles.map((file) =>\n\t\t\t\t\tfile.uuid === fileToUpload.uuid ? updatedFile : file\n\t\t\t\t)\n\t\t\t);\n\t\t}, 1000);\n\t};\n\n\tconst onAddFiles = useCallback(\n\t\t(evt, { addedFiles }) => {\n\t\t\tevt.stopPropagation();\n\t\t\tconst newFiles = addedFiles.map((file: any) => ({\n\t\t\t\tuuid: uid(),\n\t\t\t\tfile: file,\n\t\t\t\tname: file.name,\n\t\t\t\tfilesize: file.size,\n\t\t\t\tstatus: 'uploading',\n\t\t\t\ticonDescription: 'Uploading',\n\t\t\t\tinvalidFileType: file.invalidFileType\n\t\t\t}));\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\tif (props.multiple) {\n\t\t\t\tsetFiles([...files, ...newFiles]);\n\t\t\t\tnewFiles.forEach(uploadFile);\n\t\t\t} else if (newFiles[0]) {\n\t\t\t\tsetFiles([newFiles[0]]);\n\t\t\t\tuploadFile(newFiles[0]);\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[files, props.multiple]\n\t);\n\n\tconst handleFileUploaderItemClick = useCallback(\n\t\t(_, { uuid: clickedUuid }) =>\n\t\t\tsetFiles(files.filter(({ uuid }) => clickedUuid !== uuid)),\n\t\t[files]\n\t);\n\n\tconst generateFragment = () => {\n\t\tconst generatedFragment = generateNewFragment(fragmentJson);\n\n\t\taddFragment(generateFragment);\n\t\thistory.push(`/edit/${generatedFragment.id}`);\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\topen={props.shouldDisplay}\n\t\t\tshouldSubmitOnEnter={false}\n\t\t\tselectorPrimaryFocus='.bx--tile--selectable'\n\t\t\tonRequestSubmit={() => {\n\t\t\t\tgenerateFragment();\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\tonRequestClose={() => props.setShouldDisplay(false)}\n\t\t\tonSecondarySubmit={() => {\n\t\t\t\tprops.setDisplayedModal(props.lastVisitedModal);\n\t\t\t\tprops.setLastVisitedModal(FragmentWizardModals.CHOOSE_FRAGMENT_MODAL);\n\t\t\t}}\n\t\t\thasForm\n\t\t\tmodalHeading='Import JSON'\n\t\t\tprimaryButtonText='Done'\n\t\t\tprimaryButtonDisabled={!jsonString || jsonParseError}\n\t\t\tsecondaryButtonText='Back'>\n\t\t\t<div className={fragmentOptions}>\n\t\t\t\t<FormItem>\n\t\t\t\t\t<p className='bx--file--label'>Upload file</p>\n\t\t\t\t\t<p className='bx--label-description'>\n\t\t\t\t\t\tMax file size is 500kb. Supported file type is .json\n\t\t\t\t\t</p>\n\t\t\t\t\t<FileUploaderDropContainer accept={['.json']} onAddFiles={onAddFiles} />\n\t\t\t\t\t<div className={'bx--file-container'} style={{ width: '100%' }}>\n\t\t\t\t\t\t{files.map(\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\tuuid,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tfilesize,\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\ticonDescription,\n\t\t\t\t\t\t\t\tinvalid,\n\t\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<FileUploaderItem\n\t\t\t\t\t\t\t\t\tkey={uid()}\n\t\t\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t\t\t\tuuid={uuid}\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tfilesize={filesize}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t\t\t\t\t\tsize={500}\n\t\t\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t\t\t\ticonDescription={iconDescription}\n\t\t\t\t\t\t\t\t\tinvalid={invalid}\n\t\t\t\t\t\t\t\t\tonDelete={handleFileUploaderItemClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</FormItem>\n\t\t\t\t<code style={{ color: '#a00', marginBottom: '10pt', width: '100%' }}>\n\t\t\t\t\t<pre>{jsonParseError}</pre>\n\t\t\t\t</code>\n\t\t\t\t<TextArea\n\t\t\t\t\tlabelText='JSON to load'\n\t\t\t\t\tplaceholder=\"{'your': 'json', 'goes': 'here'}\"\n\t\t\t\t\thelperText=''\n\t\t\t\t\tvalue={jsonString}\n\t\t\t\t\tonChange={(event: any) => setJsonString(event.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n};\n","import React, {\n\tuseState,\n\tuseContext,\n\tuseEffect\n} from 'react';\nimport { css } from 'emotion';\nimport { DashboardSearch, SortDirection } from './dashboard-search';\nimport { FragmentGroupDisplayed, DashboardHeader } from './dashboard-header';\n\nimport {\n\tCol,\n\tMain,\n\tRow\n} from './../../components';\nimport { FragmentTileList } from './fragment-tile-list';\nimport { FragmentWizard } from './fragment-wizard/fragment-wizard';\nimport { FragmentModal } from '../edit/fragment-modal';\nimport { GlobalStateContext } from '../../context';\nimport { getFragmentTemplates } from '../../utils/fragment-tools';\n\nconst fragmentSort = (sortDirection: SortDirection) => function(a: any, b: any) {\n\tif (sortDirection === SortDirection.Descending) {\n\t\treturn Date.parse(a.lastModified) - Date.parse(b.lastModified);\n\t}\n\treturn Date.parse(b.lastModified) - Date.parse(a.lastModified);\n};\n\n// styles for the header (title and content switcher)\n// to override carbon styling for <main>\nconst headerRowSyles = css`\n\tbackground: white;\n\tpadding: 0 2rem;\n\tmargin: 0 -2rem;\n\tpadding-top: 2rem;\n\tmargin-top: -2rem;\n\t.bx--col {\n\t\tpadding: 0;\n\t}\n`;\n\n// additional styles for the search row\nconst searchRowStyles = css`\n\tpadding-right: 0;\n\tpadding-left: 1rem;\n\tmargin: 0 -2rem;\n\tborder-bottom: 1px solid #d6d6d6;\n\t.bx--col {\n\t\tpadding-right: 0;\n\t}\n`;\n\nexport const Dashboard = () => {\n\tconst { fragments, updateFragments } = useContext(GlobalStateContext);\n\tconst [fragmentGroupDisplayed, setFragmentGroupDisplayed] = useState(FragmentGroupDisplayed.LocalOnly);\n\tconst [fragmentTitleFilter, setFragmentTitleFilter] = useState('');\n\tconst [sortDirection, setSortDirection] = useState(SortDirection.Ascending);\n\tconst [displayWizard, setDisplayWizard] = useState(false);\n\n\tuseEffect(() => {\n\t\tupdateFragments(fragments);\n\t// we don't want to run this effect when fragments change because it creates a loop\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\tdocument.title = 'Carbon Components Builder • UI Fragments Composer';\n\t}, []);\n\n\tconst filterFragments = (fragments: any) => fragments.filter((fragment: any) => fragment?.title?.toLowerCase()\n\t\t?.includes(fragmentTitleFilter.toLowerCase()) && !fragment.hidden)\n\t\t?.sort(fragmentSort(sortDirection));\n\n\tlet displayedFragments;\n\n\tswitch (fragmentGroupDisplayed) {\n\t\tcase FragmentGroupDisplayed.Templates: {\n\t\t\tdisplayedFragments = filterFragments(getFragmentTemplates(fragments));\n\t\t\tbreak;\n\t\t}\n\t\tcase FragmentGroupDisplayed.AllFragments:\n\t\tdefault:\n\t\t\tdisplayedFragments = filterFragments(fragments);\n\t\t\tbreak;\n\t}\n\tconst [modalFragment, setModalFragment] = useState<any>(null);\n\n\treturn (\n\t\t<>\n\t\t\t<Main style={{ marginLeft: '0px' }}>\n\t\t\t\t<Row styles={headerRowSyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardHeader\n\t\t\t\t\t\t\tonDisplayedSwitchHandler={setFragmentGroupDisplayed}\n\t\t\t\t\t\t\tfragmentGroupDisplayed={fragmentGroupDisplayed} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row styles={searchRowStyles}>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<DashboardSearch\n\t\t\t\t\t\t\tonSearchHandler={setFragmentTitleFilter}\n\t\t\t\t\t\t\tonSortHandler={setSortDirection}\n\t\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\t\tdisplayWizard={displayWizard}\n\t\t\t\t\t\t\tsetDisplayWizard={setDisplayWizard} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col cols={{\n\t\t\t\t\t\tsm: 12,\n\t\t\t\t\t\tmd: 12,\n\t\t\t\t\t\tlg: 12\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<FragmentTileList\n\t\t\t\t\t\t\t\tfragments={displayedFragments}\n\t\t\t\t\t\t\t\tsetModalFragment={setModalFragment} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Main>\n\t\t\t<FragmentWizard\n\t\t\t\tshouldDisplay={displayWizard}\n\t\t\t\tsetShouldDisplay={setDisplayWizard} />\n\t\t\t{modalFragment && <FragmentModal fragment={modalFragment} />}\n\t\t</>\n\t);\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Button } from 'carbon-components-react';\nimport { useHistory } from 'react-router-dom';\nimport { Header } from '../components/header';\n// import the img placeholder svg\nimport placeholder from '../assets/chart-404.svg';\n\n// styles for placeholder\nconst svgStyle = css`\n\twidth: 25vw;\n\theight: auto;\n\tmax-width: 400px;\n`;\n\nconst placeholderContainer = css`\n\tmargin-top: 48px;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - 48px);\n\tpadding: 24px;\n\tpadding-top: 64px;\n\talign-items: center;\n`;\n\nexport const NotFound = () => {\n\tconst history = useHistory();\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<div className={placeholderContainer}>\n\t\t\t\t<img alt=\"Fragment not found\" src={placeholder} className={svgStyle} />\n\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t<h3>404: Not found</h3>\n\t\t\t\t\t<p style={{ marginTop: '0.5em' }}>\n\t\t\t\t\t\tThis page does not exist, click  <strong>Go back</strong><br /> to return.\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button style={{ marginTop: '1rem' }} onClick={() => history.goBack()}>Go back</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { ErrorInfo } from 'react';\nimport { NotFound } from './not-found';\n\n/* Currently, there lacks react hooks with equivalent\neffect of getDerivedStateFromError and componentDidCatch,\ncurrent component based on: https://gist.github.com/andywer/800f3f25ce3698e8f8b5f1e79fed5c9c,\nthis should be written once the above hooks mentioned above are released.\n*/\n\ntype ErrorHandler = (error: Error, info: ErrorInfo) => void;\ntype ErrorHandlingComponent<Props> = (props: Props, error?: Error) => React.ReactNode;\n\ntype ErrorState = { error?: Error };\n\nfunction Catch<Props extends {}>(\n\tcomponent: ErrorHandlingComponent<Props>,\n\terrorHandler?: ErrorHandler\n): React.ComponentType<Props> {\n\treturn class Boundary extends React.Component<Props, ErrorState> {\n\t\tstate: ErrorState = { error: undefined };\n\n\t\tstatic getDerivedStateFromError(error: Error) {\n\t\t\treturn { error };\n\t\t}\n\n\t\tcomponentDidCatch(error: Error, info: React.ErrorInfo) {\n\t\t\tif (errorHandler) {\n\t\t\t\terrorHandler(error, info);\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\treturn component(this.props, this.state.error);\n\t\t}\n\t};\n}\n\ntype Props = {\n\tchildren: React.ReactNode;\n};\n\nexport const ErrorBoundary = Catch((props: Props, error?: Error) => {\n\tif (error) {\n\t\treturn <NotFound />;\n\t}\n\treturn <>{props.children}</>;\n});\n","import React, { useState } from 'react';\nimport { HeaderContainer } from 'carbon-components-react';\nimport { Header } from '../components/index';\n\nexport const UIShell = () => {\n\tconst [isSideNavExpanded, setIsSideNavExpanded] = useState(false);\n\n\treturn (\n\t\t<HeaderContainer\n\t\t\trender={() => (\n\t\t\t\t<Header\n\t\t\t\t\tisSideNavExpanded={isSideNavExpanded}\n\t\t\t\t\tsetIsSideNavExpanded={setIsSideNavExpanded} />\n\t\t\t)}\n\t\t/>\n\t);\n};\n","import React from 'react';\nimport {\n\tRoute, BrowserRouter as Router, Switch\n} from 'react-router-dom';\nimport { Notification } from './components/index';\nimport {\n\tDashboard,\n\tEdit,\n\tErrorBoundary,\n\tNotFound\n} from './routes';\nimport { GlobalStateContextProvider } from './context/global-state-context';\nimport { ModalContextProvider } from './context/modal-context';\nimport { NotificationContextProvider } from './context/notification-context';\nimport { UIShell } from './components/ui-shell';\nimport { css } from 'emotion';\n\nconst app = css`\n\tnav.bx--side-nav--expanded + div#edit-content {\n\t\tpadding-left: calc(2.25rem + 16rem);\n\t}\n\t// This is the viewport width that causes the edit header items to overlap\n\t@media screen and (max-width: 38.75rem) {\n\t\tnav.bx--side-nav--expanded + div#edit-content {\n\t\t\tpadding-left: 36px;\n\t\t}\n\t}\n`;\n\nexport const App = () => (\n\t<Router basename='carbon-components-builder'>\n\t\t<div className={app}>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<GlobalStateContextProvider>\n\t\t\t\t\t<NotificationContextProvider>\n\t\t\t\t\t\t<UIShell />\n\t\t\t\t\t\t<Notification />\n\t\t\t\t\t\t<ModalContextProvider>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path='/' exact component={Dashboard} />\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tpath={['/edit', '/edit/:id']}\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tcomponent={Edit} />\n\t\t\t\t\t\t\t\t<Route path=\"*\" component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</ModalContextProvider>\n\t\t\t\t\t</NotificationContextProvider>\n\t\t\t\t</GlobalStateContextProvider>\n\t\t\t</ErrorBoundary>\n\t\t\t<span id=\"forkongithub\">\n\t\t\t\t<a href=\"https://github.com/IBM/carbon-components-builder\">Fork on GitHub</a>\n\t\t\t</span>\n\t\t</div>\n\t</Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// disable eslint beacuse reasons\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.UI_BASE_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if UI_BASE_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.UI_BASE_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './app';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line\nconst render = (Component: any) => ReactDOM.render(<Component/>, document.getElementById('root'));\n\nrender(App);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n\tmodule.hot.accept('./app', () => {\n\t\tconsole.info('App updated');\n\t\tconst Next = require('./app').App;\n\t\trender(Next);\n\t});\n}\n"],"sourceRoot":""}